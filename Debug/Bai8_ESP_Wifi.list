
Bai8_ESP_Wifi.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008558  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000313c  080086e8  080086e8  000186e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b824  0800b824  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  0800b824  0800b824  0001b824  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b82c  0800b82c  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800b82c  0800b82c  0001b82c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800b830  0800b830  0001b830  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  0800b834  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020090  2**0
                  CONTENTS
 10 .bss          000003bc  20000090  20000090  00020090  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000044c  2000044c  00020090  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 13 .debug_info   000224f5  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000462f  00000000  00000000  000425b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001790  00000000  00000000  00046be8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000015d8  00000000  00000000  00048378  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002763e  00000000  00000000  00049950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001ff2e  00000000  00000000  00070f8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000e1440  00000000  00000000  00090ebc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  001722fc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00006a28  00000000  00000000  00172350  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000090 	.word	0x20000090
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080086d0 	.word	0x080086d0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000094 	.word	0x20000094
 80001cc:	080086d0 	.word	0x080086d0

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b96e 	b.w	8000564 <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9d08      	ldr	r5, [sp, #32]
 80002a6:	4604      	mov	r4, r0
 80002a8:	468c      	mov	ip, r1
 80002aa:	2b00      	cmp	r3, #0
 80002ac:	f040 8083 	bne.w	80003b6 <__udivmoddi4+0x116>
 80002b0:	428a      	cmp	r2, r1
 80002b2:	4617      	mov	r7, r2
 80002b4:	d947      	bls.n	8000346 <__udivmoddi4+0xa6>
 80002b6:	fab2 f282 	clz	r2, r2
 80002ba:	b142      	cbz	r2, 80002ce <__udivmoddi4+0x2e>
 80002bc:	f1c2 0020 	rsb	r0, r2, #32
 80002c0:	fa24 f000 	lsr.w	r0, r4, r0
 80002c4:	4091      	lsls	r1, r2
 80002c6:	4097      	lsls	r7, r2
 80002c8:	ea40 0c01 	orr.w	ip, r0, r1
 80002cc:	4094      	lsls	r4, r2
 80002ce:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80002d2:	0c23      	lsrs	r3, r4, #16
 80002d4:	fbbc f6f8 	udiv	r6, ip, r8
 80002d8:	fa1f fe87 	uxth.w	lr, r7
 80002dc:	fb08 c116 	mls	r1, r8, r6, ip
 80002e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002e4:	fb06 f10e 	mul.w	r1, r6, lr
 80002e8:	4299      	cmp	r1, r3
 80002ea:	d909      	bls.n	8000300 <__udivmoddi4+0x60>
 80002ec:	18fb      	adds	r3, r7, r3
 80002ee:	f106 30ff 	add.w	r0, r6, #4294967295
 80002f2:	f080 8119 	bcs.w	8000528 <__udivmoddi4+0x288>
 80002f6:	4299      	cmp	r1, r3
 80002f8:	f240 8116 	bls.w	8000528 <__udivmoddi4+0x288>
 80002fc:	3e02      	subs	r6, #2
 80002fe:	443b      	add	r3, r7
 8000300:	1a5b      	subs	r3, r3, r1
 8000302:	b2a4      	uxth	r4, r4
 8000304:	fbb3 f0f8 	udiv	r0, r3, r8
 8000308:	fb08 3310 	mls	r3, r8, r0, r3
 800030c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000310:	fb00 fe0e 	mul.w	lr, r0, lr
 8000314:	45a6      	cmp	lr, r4
 8000316:	d909      	bls.n	800032c <__udivmoddi4+0x8c>
 8000318:	193c      	adds	r4, r7, r4
 800031a:	f100 33ff 	add.w	r3, r0, #4294967295
 800031e:	f080 8105 	bcs.w	800052c <__udivmoddi4+0x28c>
 8000322:	45a6      	cmp	lr, r4
 8000324:	f240 8102 	bls.w	800052c <__udivmoddi4+0x28c>
 8000328:	3802      	subs	r0, #2
 800032a:	443c      	add	r4, r7
 800032c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000330:	eba4 040e 	sub.w	r4, r4, lr
 8000334:	2600      	movs	r6, #0
 8000336:	b11d      	cbz	r5, 8000340 <__udivmoddi4+0xa0>
 8000338:	40d4      	lsrs	r4, r2
 800033a:	2300      	movs	r3, #0
 800033c:	e9c5 4300 	strd	r4, r3, [r5]
 8000340:	4631      	mov	r1, r6
 8000342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000346:	b902      	cbnz	r2, 800034a <__udivmoddi4+0xaa>
 8000348:	deff      	udf	#255	; 0xff
 800034a:	fab2 f282 	clz	r2, r2
 800034e:	2a00      	cmp	r2, #0
 8000350:	d150      	bne.n	80003f4 <__udivmoddi4+0x154>
 8000352:	1bcb      	subs	r3, r1, r7
 8000354:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000358:	fa1f f887 	uxth.w	r8, r7
 800035c:	2601      	movs	r6, #1
 800035e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000362:	0c21      	lsrs	r1, r4, #16
 8000364:	fb0e 331c 	mls	r3, lr, ip, r3
 8000368:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800036c:	fb08 f30c 	mul.w	r3, r8, ip
 8000370:	428b      	cmp	r3, r1
 8000372:	d907      	bls.n	8000384 <__udivmoddi4+0xe4>
 8000374:	1879      	adds	r1, r7, r1
 8000376:	f10c 30ff 	add.w	r0, ip, #4294967295
 800037a:	d202      	bcs.n	8000382 <__udivmoddi4+0xe2>
 800037c:	428b      	cmp	r3, r1
 800037e:	f200 80e9 	bhi.w	8000554 <__udivmoddi4+0x2b4>
 8000382:	4684      	mov	ip, r0
 8000384:	1ac9      	subs	r1, r1, r3
 8000386:	b2a3      	uxth	r3, r4
 8000388:	fbb1 f0fe 	udiv	r0, r1, lr
 800038c:	fb0e 1110 	mls	r1, lr, r0, r1
 8000390:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000394:	fb08 f800 	mul.w	r8, r8, r0
 8000398:	45a0      	cmp	r8, r4
 800039a:	d907      	bls.n	80003ac <__udivmoddi4+0x10c>
 800039c:	193c      	adds	r4, r7, r4
 800039e:	f100 33ff 	add.w	r3, r0, #4294967295
 80003a2:	d202      	bcs.n	80003aa <__udivmoddi4+0x10a>
 80003a4:	45a0      	cmp	r8, r4
 80003a6:	f200 80d9 	bhi.w	800055c <__udivmoddi4+0x2bc>
 80003aa:	4618      	mov	r0, r3
 80003ac:	eba4 0408 	sub.w	r4, r4, r8
 80003b0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003b4:	e7bf      	b.n	8000336 <__udivmoddi4+0x96>
 80003b6:	428b      	cmp	r3, r1
 80003b8:	d909      	bls.n	80003ce <__udivmoddi4+0x12e>
 80003ba:	2d00      	cmp	r5, #0
 80003bc:	f000 80b1 	beq.w	8000522 <__udivmoddi4+0x282>
 80003c0:	2600      	movs	r6, #0
 80003c2:	e9c5 0100 	strd	r0, r1, [r5]
 80003c6:	4630      	mov	r0, r6
 80003c8:	4631      	mov	r1, r6
 80003ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ce:	fab3 f683 	clz	r6, r3
 80003d2:	2e00      	cmp	r6, #0
 80003d4:	d14a      	bne.n	800046c <__udivmoddi4+0x1cc>
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d302      	bcc.n	80003e0 <__udivmoddi4+0x140>
 80003da:	4282      	cmp	r2, r0
 80003dc:	f200 80b8 	bhi.w	8000550 <__udivmoddi4+0x2b0>
 80003e0:	1a84      	subs	r4, r0, r2
 80003e2:	eb61 0103 	sbc.w	r1, r1, r3
 80003e6:	2001      	movs	r0, #1
 80003e8:	468c      	mov	ip, r1
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	d0a8      	beq.n	8000340 <__udivmoddi4+0xa0>
 80003ee:	e9c5 4c00 	strd	r4, ip, [r5]
 80003f2:	e7a5      	b.n	8000340 <__udivmoddi4+0xa0>
 80003f4:	f1c2 0320 	rsb	r3, r2, #32
 80003f8:	fa20 f603 	lsr.w	r6, r0, r3
 80003fc:	4097      	lsls	r7, r2
 80003fe:	fa01 f002 	lsl.w	r0, r1, r2
 8000402:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000406:	40d9      	lsrs	r1, r3
 8000408:	4330      	orrs	r0, r6
 800040a:	0c03      	lsrs	r3, r0, #16
 800040c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000410:	fa1f f887 	uxth.w	r8, r7
 8000414:	fb0e 1116 	mls	r1, lr, r6, r1
 8000418:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800041c:	fb06 f108 	mul.w	r1, r6, r8
 8000420:	4299      	cmp	r1, r3
 8000422:	fa04 f402 	lsl.w	r4, r4, r2
 8000426:	d909      	bls.n	800043c <__udivmoddi4+0x19c>
 8000428:	18fb      	adds	r3, r7, r3
 800042a:	f106 3cff 	add.w	ip, r6, #4294967295
 800042e:	f080 808d 	bcs.w	800054c <__udivmoddi4+0x2ac>
 8000432:	4299      	cmp	r1, r3
 8000434:	f240 808a 	bls.w	800054c <__udivmoddi4+0x2ac>
 8000438:	3e02      	subs	r6, #2
 800043a:	443b      	add	r3, r7
 800043c:	1a5b      	subs	r3, r3, r1
 800043e:	b281      	uxth	r1, r0
 8000440:	fbb3 f0fe 	udiv	r0, r3, lr
 8000444:	fb0e 3310 	mls	r3, lr, r0, r3
 8000448:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800044c:	fb00 f308 	mul.w	r3, r0, r8
 8000450:	428b      	cmp	r3, r1
 8000452:	d907      	bls.n	8000464 <__udivmoddi4+0x1c4>
 8000454:	1879      	adds	r1, r7, r1
 8000456:	f100 3cff 	add.w	ip, r0, #4294967295
 800045a:	d273      	bcs.n	8000544 <__udivmoddi4+0x2a4>
 800045c:	428b      	cmp	r3, r1
 800045e:	d971      	bls.n	8000544 <__udivmoddi4+0x2a4>
 8000460:	3802      	subs	r0, #2
 8000462:	4439      	add	r1, r7
 8000464:	1acb      	subs	r3, r1, r3
 8000466:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800046a:	e778      	b.n	800035e <__udivmoddi4+0xbe>
 800046c:	f1c6 0c20 	rsb	ip, r6, #32
 8000470:	fa03 f406 	lsl.w	r4, r3, r6
 8000474:	fa22 f30c 	lsr.w	r3, r2, ip
 8000478:	431c      	orrs	r4, r3
 800047a:	fa20 f70c 	lsr.w	r7, r0, ip
 800047e:	fa01 f306 	lsl.w	r3, r1, r6
 8000482:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000486:	fa21 f10c 	lsr.w	r1, r1, ip
 800048a:	431f      	orrs	r7, r3
 800048c:	0c3b      	lsrs	r3, r7, #16
 800048e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000492:	fa1f f884 	uxth.w	r8, r4
 8000496:	fb0e 1119 	mls	r1, lr, r9, r1
 800049a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800049e:	fb09 fa08 	mul.w	sl, r9, r8
 80004a2:	458a      	cmp	sl, r1
 80004a4:	fa02 f206 	lsl.w	r2, r2, r6
 80004a8:	fa00 f306 	lsl.w	r3, r0, r6
 80004ac:	d908      	bls.n	80004c0 <__udivmoddi4+0x220>
 80004ae:	1861      	adds	r1, r4, r1
 80004b0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004b4:	d248      	bcs.n	8000548 <__udivmoddi4+0x2a8>
 80004b6:	458a      	cmp	sl, r1
 80004b8:	d946      	bls.n	8000548 <__udivmoddi4+0x2a8>
 80004ba:	f1a9 0902 	sub.w	r9, r9, #2
 80004be:	4421      	add	r1, r4
 80004c0:	eba1 010a 	sub.w	r1, r1, sl
 80004c4:	b2bf      	uxth	r7, r7
 80004c6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004ca:	fb0e 1110 	mls	r1, lr, r0, r1
 80004ce:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 80004d2:	fb00 f808 	mul.w	r8, r0, r8
 80004d6:	45b8      	cmp	r8, r7
 80004d8:	d907      	bls.n	80004ea <__udivmoddi4+0x24a>
 80004da:	19e7      	adds	r7, r4, r7
 80004dc:	f100 31ff 	add.w	r1, r0, #4294967295
 80004e0:	d22e      	bcs.n	8000540 <__udivmoddi4+0x2a0>
 80004e2:	45b8      	cmp	r8, r7
 80004e4:	d92c      	bls.n	8000540 <__udivmoddi4+0x2a0>
 80004e6:	3802      	subs	r0, #2
 80004e8:	4427      	add	r7, r4
 80004ea:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004ee:	eba7 0708 	sub.w	r7, r7, r8
 80004f2:	fba0 8902 	umull	r8, r9, r0, r2
 80004f6:	454f      	cmp	r7, r9
 80004f8:	46c6      	mov	lr, r8
 80004fa:	4649      	mov	r1, r9
 80004fc:	d31a      	bcc.n	8000534 <__udivmoddi4+0x294>
 80004fe:	d017      	beq.n	8000530 <__udivmoddi4+0x290>
 8000500:	b15d      	cbz	r5, 800051a <__udivmoddi4+0x27a>
 8000502:	ebb3 020e 	subs.w	r2, r3, lr
 8000506:	eb67 0701 	sbc.w	r7, r7, r1
 800050a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800050e:	40f2      	lsrs	r2, r6
 8000510:	ea4c 0202 	orr.w	r2, ip, r2
 8000514:	40f7      	lsrs	r7, r6
 8000516:	e9c5 2700 	strd	r2, r7, [r5]
 800051a:	2600      	movs	r6, #0
 800051c:	4631      	mov	r1, r6
 800051e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000522:	462e      	mov	r6, r5
 8000524:	4628      	mov	r0, r5
 8000526:	e70b      	b.n	8000340 <__udivmoddi4+0xa0>
 8000528:	4606      	mov	r6, r0
 800052a:	e6e9      	b.n	8000300 <__udivmoddi4+0x60>
 800052c:	4618      	mov	r0, r3
 800052e:	e6fd      	b.n	800032c <__udivmoddi4+0x8c>
 8000530:	4543      	cmp	r3, r8
 8000532:	d2e5      	bcs.n	8000500 <__udivmoddi4+0x260>
 8000534:	ebb8 0e02 	subs.w	lr, r8, r2
 8000538:	eb69 0104 	sbc.w	r1, r9, r4
 800053c:	3801      	subs	r0, #1
 800053e:	e7df      	b.n	8000500 <__udivmoddi4+0x260>
 8000540:	4608      	mov	r0, r1
 8000542:	e7d2      	b.n	80004ea <__udivmoddi4+0x24a>
 8000544:	4660      	mov	r0, ip
 8000546:	e78d      	b.n	8000464 <__udivmoddi4+0x1c4>
 8000548:	4681      	mov	r9, r0
 800054a:	e7b9      	b.n	80004c0 <__udivmoddi4+0x220>
 800054c:	4666      	mov	r6, ip
 800054e:	e775      	b.n	800043c <__udivmoddi4+0x19c>
 8000550:	4630      	mov	r0, r6
 8000552:	e74a      	b.n	80003ea <__udivmoddi4+0x14a>
 8000554:	f1ac 0c02 	sub.w	ip, ip, #2
 8000558:	4439      	add	r1, r7
 800055a:	e713      	b.n	8000384 <__udivmoddi4+0xe4>
 800055c:	3802      	subs	r0, #2
 800055e:	443c      	add	r4, r7
 8000560:	e724      	b.n	80003ac <__udivmoddi4+0x10c>
 8000562:	bf00      	nop

08000564 <__aeabi_idiv0>:
 8000564:	4770      	bx	lr
 8000566:	bf00      	nop

08000568 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000568:	b580      	push	{r7, lr}
 800056a:	b084      	sub	sp, #16
 800056c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800056e:	463b      	mov	r3, r7
 8000570:	2200      	movs	r2, #0
 8000572:	601a      	str	r2, [r3, #0]
 8000574:	605a      	str	r2, [r3, #4]
 8000576:	609a      	str	r2, [r3, #8]
 8000578:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800057a:	4b3d      	ldr	r3, [pc, #244]	; (8000670 <MX_ADC1_Init+0x108>)
 800057c:	4a3d      	ldr	r2, [pc, #244]	; (8000674 <MX_ADC1_Init+0x10c>)
 800057e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000580:	4b3b      	ldr	r3, [pc, #236]	; (8000670 <MX_ADC1_Init+0x108>)
 8000582:	2200      	movs	r2, #0
 8000584:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000586:	4b3a      	ldr	r3, [pc, #232]	; (8000670 <MX_ADC1_Init+0x108>)
 8000588:	2200      	movs	r2, #0
 800058a:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 800058c:	4b38      	ldr	r3, [pc, #224]	; (8000670 <MX_ADC1_Init+0x108>)
 800058e:	2201      	movs	r2, #1
 8000590:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000592:	4b37      	ldr	r3, [pc, #220]	; (8000670 <MX_ADC1_Init+0x108>)
 8000594:	2200      	movs	r2, #0
 8000596:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000598:	4b35      	ldr	r3, [pc, #212]	; (8000670 <MX_ADC1_Init+0x108>)
 800059a:	2200      	movs	r2, #0
 800059c:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80005a0:	4b33      	ldr	r3, [pc, #204]	; (8000670 <MX_ADC1_Init+0x108>)
 80005a2:	2200      	movs	r2, #0
 80005a4:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80005a6:	4b32      	ldr	r3, [pc, #200]	; (8000670 <MX_ADC1_Init+0x108>)
 80005a8:	4a33      	ldr	r2, [pc, #204]	; (8000678 <MX_ADC1_Init+0x110>)
 80005aa:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80005ac:	4b30      	ldr	r3, [pc, #192]	; (8000670 <MX_ADC1_Init+0x108>)
 80005ae:	2200      	movs	r2, #0
 80005b0:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 5;
 80005b2:	4b2f      	ldr	r3, [pc, #188]	; (8000670 <MX_ADC1_Init+0x108>)
 80005b4:	2205      	movs	r2, #5
 80005b6:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80005b8:	4b2d      	ldr	r3, [pc, #180]	; (8000670 <MX_ADC1_Init+0x108>)
 80005ba:	2200      	movs	r2, #0
 80005bc:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80005c0:	4b2b      	ldr	r3, [pc, #172]	; (8000670 <MX_ADC1_Init+0x108>)
 80005c2:	2201      	movs	r2, #1
 80005c4:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80005c6:	482a      	ldr	r0, [pc, #168]	; (8000670 <MX_ADC1_Init+0x108>)
 80005c8:	f002 fbb6 	bl	8002d38 <HAL_ADC_Init>
 80005cc:	4603      	mov	r3, r0
 80005ce:	2b00      	cmp	r3, #0
 80005d0:	d001      	beq.n	80005d6 <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 80005d2:	f001 fa8b 	bl	8001aec <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 80005d6:	2308      	movs	r3, #8
 80005d8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80005da:	2301      	movs	r3, #1
 80005dc:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80005de:	2300      	movs	r3, #0
 80005e0:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80005e2:	463b      	mov	r3, r7
 80005e4:	4619      	mov	r1, r3
 80005e6:	4822      	ldr	r0, [pc, #136]	; (8000670 <MX_ADC1_Init+0x108>)
 80005e8:	f002 fbea 	bl	8002dc0 <HAL_ADC_ConfigChannel>
 80005ec:	4603      	mov	r3, r0
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	d001      	beq.n	80005f6 <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 80005f2:	f001 fa7b 	bl	8001aec <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_9;
 80005f6:	2309      	movs	r3, #9
 80005f8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 80005fa:	2302      	movs	r3, #2
 80005fc:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80005fe:	463b      	mov	r3, r7
 8000600:	4619      	mov	r1, r3
 8000602:	481b      	ldr	r0, [pc, #108]	; (8000670 <MX_ADC1_Init+0x108>)
 8000604:	f002 fbdc 	bl	8002dc0 <HAL_ADC_ConfigChannel>
 8000608:	4603      	mov	r3, r0
 800060a:	2b00      	cmp	r3, #0
 800060c:	d001      	beq.n	8000612 <MX_ADC1_Init+0xaa>
  {
    Error_Handler();
 800060e:	f001 fa6d 	bl	8001aec <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8000612:	230a      	movs	r3, #10
 8000614:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 3;
 8000616:	2303      	movs	r3, #3
 8000618:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800061a:	463b      	mov	r3, r7
 800061c:	4619      	mov	r1, r3
 800061e:	4814      	ldr	r0, [pc, #80]	; (8000670 <MX_ADC1_Init+0x108>)
 8000620:	f002 fbce 	bl	8002dc0 <HAL_ADC_ConfigChannel>
 8000624:	4603      	mov	r3, r0
 8000626:	2b00      	cmp	r3, #0
 8000628:	d001      	beq.n	800062e <MX_ADC1_Init+0xc6>
  {
    Error_Handler();
 800062a:	f001 fa5f 	bl	8001aec <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_11;
 800062e:	230b      	movs	r3, #11
 8000630:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 4;
 8000632:	2304      	movs	r3, #4
 8000634:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000636:	463b      	mov	r3, r7
 8000638:	4619      	mov	r1, r3
 800063a:	480d      	ldr	r0, [pc, #52]	; (8000670 <MX_ADC1_Init+0x108>)
 800063c:	f002 fbc0 	bl	8002dc0 <HAL_ADC_ConfigChannel>
 8000640:	4603      	mov	r3, r0
 8000642:	2b00      	cmp	r3, #0
 8000644:	d001      	beq.n	800064a <MX_ADC1_Init+0xe2>
  {
    Error_Handler();
 8000646:	f001 fa51 	bl	8001aec <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_12;
 800064a:	230c      	movs	r3, #12
 800064c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 5;
 800064e:	2305      	movs	r3, #5
 8000650:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000652:	463b      	mov	r3, r7
 8000654:	4619      	mov	r1, r3
 8000656:	4806      	ldr	r0, [pc, #24]	; (8000670 <MX_ADC1_Init+0x108>)
 8000658:	f002 fbb2 	bl	8002dc0 <HAL_ADC_ConfigChannel>
 800065c:	4603      	mov	r3, r0
 800065e:	2b00      	cmp	r3, #0
 8000660:	d001      	beq.n	8000666 <MX_ADC1_Init+0xfe>
  {
    Error_Handler();
 8000662:	f001 fa43 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000666:	bf00      	nop
 8000668:	3710      	adds	r7, #16
 800066a:	46bd      	mov	sp, r7
 800066c:	bd80      	pop	{r7, pc}
 800066e:	bf00      	nop
 8000670:	200000d4 	.word	0x200000d4
 8000674:	40012000 	.word	0x40012000
 8000678:	0f000001 	.word	0x0f000001

0800067c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800067c:	b580      	push	{r7, lr}
 800067e:	b08a      	sub	sp, #40	; 0x28
 8000680:	af00      	add	r7, sp, #0
 8000682:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000684:	f107 0314 	add.w	r3, r7, #20
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
 800068c:	605a      	str	r2, [r3, #4]
 800068e:	609a      	str	r2, [r3, #8]
 8000690:	60da      	str	r2, [r3, #12]
 8000692:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	4a3c      	ldr	r2, [pc, #240]	; (800078c <HAL_ADC_MspInit+0x110>)
 800069a:	4293      	cmp	r3, r2
 800069c:	d171      	bne.n	8000782 <HAL_ADC_MspInit+0x106>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800069e:	2300      	movs	r3, #0
 80006a0:	613b      	str	r3, [r7, #16]
 80006a2:	4b3b      	ldr	r3, [pc, #236]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006a6:	4a3a      	ldr	r2, [pc, #232]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80006ac:	6453      	str	r3, [r2, #68]	; 0x44
 80006ae:	4b38      	ldr	r3, [pc, #224]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80006b6:	613b      	str	r3, [r7, #16]
 80006b8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80006ba:	2300      	movs	r3, #0
 80006bc:	60fb      	str	r3, [r7, #12]
 80006be:	4b34      	ldr	r3, [pc, #208]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c2:	4a33      	ldr	r2, [pc, #204]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006c4:	f043 0304 	orr.w	r3, r3, #4
 80006c8:	6313      	str	r3, [r2, #48]	; 0x30
 80006ca:	4b31      	ldr	r3, [pc, #196]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ce:	f003 0304 	and.w	r3, r3, #4
 80006d2:	60fb      	str	r3, [r7, #12]
 80006d4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80006d6:	2300      	movs	r3, #0
 80006d8:	60bb      	str	r3, [r7, #8]
 80006da:	4b2d      	ldr	r3, [pc, #180]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006de:	4a2c      	ldr	r2, [pc, #176]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006e0:	f043 0302 	orr.w	r3, r3, #2
 80006e4:	6313      	str	r3, [r2, #48]	; 0x30
 80006e6:	4b2a      	ldr	r3, [pc, #168]	; (8000790 <HAL_ADC_MspInit+0x114>)
 80006e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ea:	f003 0302 	and.w	r3, r3, #2
 80006ee:	60bb      	str	r3, [r7, #8]
 80006f0:	68bb      	ldr	r3, [r7, #8]
    PC1     ------> ADC1_IN11
    PC2     ------> ADC1_IN12
    PB0     ------> ADC1_IN8
    PB1     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 80006f2:	2307      	movs	r3, #7
 80006f4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80006f6:	2303      	movs	r3, #3
 80006f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006fa:	2300      	movs	r3, #0
 80006fc:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80006fe:	f107 0314 	add.w	r3, r7, #20
 8000702:	4619      	mov	r1, r3
 8000704:	4823      	ldr	r0, [pc, #140]	; (8000794 <HAL_ADC_MspInit+0x118>)
 8000706:	f003 fa07 	bl	8003b18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800070a:	2303      	movs	r3, #3
 800070c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800070e:	2303      	movs	r3, #3
 8000710:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000712:	2300      	movs	r3, #0
 8000714:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000716:	f107 0314 	add.w	r3, r7, #20
 800071a:	4619      	mov	r1, r3
 800071c:	481e      	ldr	r0, [pc, #120]	; (8000798 <HAL_ADC_MspInit+0x11c>)
 800071e:	f003 f9fb 	bl	8003b18 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8000722:	4b1e      	ldr	r3, [pc, #120]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000724:	4a1e      	ldr	r2, [pc, #120]	; (80007a0 <HAL_ADC_MspInit+0x124>)
 8000726:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8000728:	4b1c      	ldr	r3, [pc, #112]	; (800079c <HAL_ADC_MspInit+0x120>)
 800072a:	2200      	movs	r2, #0
 800072c:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800072e:	4b1b      	ldr	r3, [pc, #108]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000730:	2200      	movs	r2, #0
 8000732:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000734:	4b19      	ldr	r3, [pc, #100]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000736:	2200      	movs	r2, #0
 8000738:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800073a:	4b18      	ldr	r3, [pc, #96]	; (800079c <HAL_ADC_MspInit+0x120>)
 800073c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000740:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000742:	4b16      	ldr	r3, [pc, #88]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000744:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000748:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800074a:	4b14      	ldr	r3, [pc, #80]	; (800079c <HAL_ADC_MspInit+0x120>)
 800074c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000750:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000752:	4b12      	ldr	r3, [pc, #72]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000754:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000758:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 800075a:	4b10      	ldr	r3, [pc, #64]	; (800079c <HAL_ADC_MspInit+0x120>)
 800075c:	2200      	movs	r2, #0
 800075e:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000760:	4b0e      	ldr	r3, [pc, #56]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000762:	2200      	movs	r2, #0
 8000764:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000766:	480d      	ldr	r0, [pc, #52]	; (800079c <HAL_ADC_MspInit+0x120>)
 8000768:	f002 fe5a 	bl	8003420 <HAL_DMA_Init>
 800076c:	4603      	mov	r3, r0
 800076e:	2b00      	cmp	r3, #0
 8000770:	d001      	beq.n	8000776 <HAL_ADC_MspInit+0xfa>
    {
      Error_Handler();
 8000772:	f001 f9bb 	bl	8001aec <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	4a08      	ldr	r2, [pc, #32]	; (800079c <HAL_ADC_MspInit+0x120>)
 800077a:	639a      	str	r2, [r3, #56]	; 0x38
 800077c:	4a07      	ldr	r2, [pc, #28]	; (800079c <HAL_ADC_MspInit+0x120>)
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	6393      	str	r3, [r2, #56]	; 0x38

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8000782:	bf00      	nop
 8000784:	3728      	adds	r7, #40	; 0x28
 8000786:	46bd      	mov	sp, r7
 8000788:	bd80      	pop	{r7, pc}
 800078a:	bf00      	nop
 800078c:	40012000 	.word	0x40012000
 8000790:	40023800 	.word	0x40023800
 8000794:	40020800 	.word	0x40020800
 8000798:	40020400 	.word	0x40020400
 800079c:	2000011c 	.word	0x2000011c
 80007a0:	40026410 	.word	0x40026410

080007a4 <button_init>:
#include "button.h"

uint16_t button_count[16];
uint16_t spi_button = 0x0000;

void button_init(){
 80007a4:	b580      	push	{r7, lr}
 80007a6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, 1);
 80007a8:	2201      	movs	r2, #1
 80007aa:	2108      	movs	r1, #8
 80007ac:	4802      	ldr	r0, [pc, #8]	; (80007b8 <button_init+0x14>)
 80007ae:	f003 fb4f 	bl	8003e50 <HAL_GPIO_WritePin>
}
 80007b2:	bf00      	nop
 80007b4:	bd80      	pop	{r7, pc}
 80007b6:	bf00      	nop
 80007b8:	40020c00 	.word	0x40020c00

080007bc <button_Scan>:

void button_Scan(){
 80007bc:	b580      	push	{r7, lr}
 80007be:	b084      	sub	sp, #16
 80007c0:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, 0);
 80007c2:	2200      	movs	r2, #0
 80007c4:	2108      	movs	r1, #8
 80007c6:	482f      	ldr	r0, [pc, #188]	; (8000884 <button_Scan+0xc8>)
 80007c8:	f003 fb42 	bl	8003e50 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, 1);
 80007cc:	2201      	movs	r2, #1
 80007ce:	2108      	movs	r1, #8
 80007d0:	482c      	ldr	r0, [pc, #176]	; (8000884 <button_Scan+0xc8>)
 80007d2:	f003 fb3d 	bl	8003e50 <HAL_GPIO_WritePin>
	  HAL_SPI_Receive(&hspi1, (void*)&spi_button, 2, 10);
 80007d6:	230a      	movs	r3, #10
 80007d8:	2202      	movs	r2, #2
 80007da:	492b      	ldr	r1, [pc, #172]	; (8000888 <button_Scan+0xcc>)
 80007dc:	482b      	ldr	r0, [pc, #172]	; (800088c <button_Scan+0xd0>)
 80007de:	f004 face 	bl	8004d7e <HAL_SPI_Receive>
	  int button_index = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	60fb      	str	r3, [r7, #12]
	  uint16_t mask = 0x8000;
 80007e6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80007ea:	817b      	strh	r3, [r7, #10]
	  for(int i = 0; i < 16; i++){
 80007ec:	2300      	movs	r3, #0
 80007ee:	607b      	str	r3, [r7, #4]
 80007f0:	e03f      	b.n	8000872 <button_Scan+0xb6>
		  if(i >= 0 && i <= 3){
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	2b00      	cmp	r3, #0
 80007f6:	db06      	blt.n	8000806 <button_Scan+0x4a>
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	2b03      	cmp	r3, #3
 80007fc:	dc03      	bgt.n	8000806 <button_Scan+0x4a>
			  button_index = i + 4; // do theo schematic thì spi gửi ko giống như button trên mạch
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	3304      	adds	r3, #4
 8000802:	60fb      	str	r3, [r7, #12]
 8000804:	e018      	b.n	8000838 <button_Scan+0x7c>
		  } else if (i >= 4 && i <= 7){  //-> cần convert lại cho nó đúng với thứ tự mình mún
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	2b03      	cmp	r3, #3
 800080a:	dd07      	ble.n	800081c <button_Scan+0x60>
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	2b07      	cmp	r3, #7
 8000810:	dc04      	bgt.n	800081c <button_Scan+0x60>
			  button_index = 7 - i;
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	f1c3 0307 	rsb	r3, r3, #7
 8000818:	60fb      	str	r3, [r7, #12]
 800081a:	e00d      	b.n	8000838 <button_Scan+0x7c>
		  } else if (i >= 8 && i <= 11){
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	2b07      	cmp	r3, #7
 8000820:	dd06      	ble.n	8000830 <button_Scan+0x74>
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	2b0b      	cmp	r3, #11
 8000826:	dc03      	bgt.n	8000830 <button_Scan+0x74>
			  button_index = i + 4;
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	3304      	adds	r3, #4
 800082c:	60fb      	str	r3, [r7, #12]
 800082e:	e003      	b.n	8000838 <button_Scan+0x7c>
		  } else {
			  button_index = 23 - i;
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	f1c3 0317 	rsb	r3, r3, #23
 8000836:	60fb      	str	r3, [r7, #12]
		  }
		  if(spi_button & mask) button_count[button_index] = 0;
 8000838:	4b13      	ldr	r3, [pc, #76]	; (8000888 <button_Scan+0xcc>)
 800083a:	881a      	ldrh	r2, [r3, #0]
 800083c:	897b      	ldrh	r3, [r7, #10]
 800083e:	4013      	ands	r3, r2
 8000840:	b29b      	uxth	r3, r3
 8000842:	2b00      	cmp	r3, #0
 8000844:	d005      	beq.n	8000852 <button_Scan+0x96>
 8000846:	4a12      	ldr	r2, [pc, #72]	; (8000890 <button_Scan+0xd4>)
 8000848:	68fb      	ldr	r3, [r7, #12]
 800084a:	2100      	movs	r1, #0
 800084c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000850:	e009      	b.n	8000866 <button_Scan+0xaa>
		  else button_count[button_index]++;
 8000852:	4a0f      	ldr	r2, [pc, #60]	; (8000890 <button_Scan+0xd4>)
 8000854:	68fb      	ldr	r3, [r7, #12]
 8000856:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800085a:	3301      	adds	r3, #1
 800085c:	b299      	uxth	r1, r3
 800085e:	4a0c      	ldr	r2, [pc, #48]	; (8000890 <button_Scan+0xd4>)
 8000860:	68fb      	ldr	r3, [r7, #12]
 8000862:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
//		  if(spi_button & mask) button_count[i] = 0;
//		  else button_count[i]++;
		  mask = mask >> 1;
 8000866:	897b      	ldrh	r3, [r7, #10]
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	817b      	strh	r3, [r7, #10]
	  for(int i = 0; i < 16; i++){
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	3301      	adds	r3, #1
 8000870:	607b      	str	r3, [r7, #4]
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	2b0f      	cmp	r3, #15
 8000876:	ddbc      	ble.n	80007f2 <button_Scan+0x36>
	  }
}
 8000878:	bf00      	nop
 800087a:	bf00      	nop
 800087c:	3710      	adds	r7, #16
 800087e:	46bd      	mov	sp, r7
 8000880:	bd80      	pop	{r7, pc}
 8000882:	bf00      	nop
 8000884:	40020c00 	.word	0x40020c00
 8000888:	200000ac 	.word	0x200000ac
 800088c:	20000280 	.word	0x20000280
 8000890:	2000017c 	.word	0x2000017c

08000894 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8000894:	b580      	push	{r7, lr}
 8000896:	b082      	sub	sp, #8
 8000898:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 800089a:	2300      	movs	r3, #0
 800089c:	607b      	str	r3, [r7, #4]
 800089e:	4b0c      	ldr	r3, [pc, #48]	; (80008d0 <MX_DMA_Init+0x3c>)
 80008a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008a2:	4a0b      	ldr	r2, [pc, #44]	; (80008d0 <MX_DMA_Init+0x3c>)
 80008a4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80008a8:	6313      	str	r3, [r2, #48]	; 0x30
 80008aa:	4b09      	ldr	r3, [pc, #36]	; (80008d0 <MX_DMA_Init+0x3c>)
 80008ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80008b2:	607b      	str	r3, [r7, #4]
 80008b4:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80008b6:	2200      	movs	r2, #0
 80008b8:	2100      	movs	r1, #0
 80008ba:	2038      	movs	r0, #56	; 0x38
 80008bc:	f002 fd79 	bl	80033b2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80008c0:	2038      	movs	r0, #56	; 0x38
 80008c2:	f002 fd92 	bl	80033ea <HAL_NVIC_EnableIRQ>

}
 80008c6:	bf00      	nop
 80008c8:	3708      	adds	r7, #8
 80008ca:	46bd      	mov	sp, r7
 80008cc:	bd80      	pop	{r7, pc}
 80008ce:	bf00      	nop
 80008d0:	40023800 	.word	0x40023800

080008d4 <MX_FSMC_Init>:

SRAM_HandleTypeDef hsram1;

/* FSMC initialization function */
void MX_FSMC_Init(void)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b08e      	sub	sp, #56	; 0x38
 80008d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_Init 0 */

  /* USER CODE END FSMC_Init 0 */

  FSMC_NORSRAM_TimingTypeDef Timing = {0};
 80008da:	f107 031c 	add.w	r3, r7, #28
 80008de:	2200      	movs	r2, #0
 80008e0:	601a      	str	r2, [r3, #0]
 80008e2:	605a      	str	r2, [r3, #4]
 80008e4:	609a      	str	r2, [r3, #8]
 80008e6:	60da      	str	r2, [r3, #12]
 80008e8:	611a      	str	r2, [r3, #16]
 80008ea:	615a      	str	r2, [r3, #20]
 80008ec:	619a      	str	r2, [r3, #24]
  FSMC_NORSRAM_TimingTypeDef ExtTiming = {0};
 80008ee:	463b      	mov	r3, r7
 80008f0:	2200      	movs	r2, #0
 80008f2:	601a      	str	r2, [r3, #0]
 80008f4:	605a      	str	r2, [r3, #4]
 80008f6:	609a      	str	r2, [r3, #8]
 80008f8:	60da      	str	r2, [r3, #12]
 80008fa:	611a      	str	r2, [r3, #16]
 80008fc:	615a      	str	r2, [r3, #20]
 80008fe:	619a      	str	r2, [r3, #24]

  /* USER CODE END FSMC_Init 1 */

  /** Perform the SRAM1 memory initialization sequence
  */
  hsram1.Instance = FSMC_NORSRAM_DEVICE;
 8000900:	4b2f      	ldr	r3, [pc, #188]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000902:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8000906:	601a      	str	r2, [r3, #0]
  hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 8000908:	4b2d      	ldr	r3, [pc, #180]	; (80009c0 <MX_FSMC_Init+0xec>)
 800090a:	4a2e      	ldr	r2, [pc, #184]	; (80009c4 <MX_FSMC_Init+0xf0>)
 800090c:	605a      	str	r2, [r3, #4]
  /* hsram1.Init */
  hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 800090e:	4b2c      	ldr	r3, [pc, #176]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000910:	2200      	movs	r2, #0
 8000912:	609a      	str	r2, [r3, #8]
  hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 8000914:	4b2a      	ldr	r3, [pc, #168]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000916:	2200      	movs	r2, #0
 8000918:	60da      	str	r2, [r3, #12]
  hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 800091a:	4b29      	ldr	r3, [pc, #164]	; (80009c0 <MX_FSMC_Init+0xec>)
 800091c:	2200      	movs	r2, #0
 800091e:	611a      	str	r2, [r3, #16]
  hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 8000920:	4b27      	ldr	r3, [pc, #156]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000922:	2210      	movs	r2, #16
 8000924:	615a      	str	r2, [r3, #20]
  hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 8000926:	4b26      	ldr	r3, [pc, #152]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000928:	2200      	movs	r2, #0
 800092a:	619a      	str	r2, [r3, #24]
  hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 800092c:	4b24      	ldr	r3, [pc, #144]	; (80009c0 <MX_FSMC_Init+0xec>)
 800092e:	2200      	movs	r2, #0
 8000930:	61da      	str	r2, [r3, #28]
  hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 8000932:	4b23      	ldr	r3, [pc, #140]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000934:	2200      	movs	r2, #0
 8000936:	621a      	str	r2, [r3, #32]
  hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 8000938:	4b21      	ldr	r3, [pc, #132]	; (80009c0 <MX_FSMC_Init+0xec>)
 800093a:	2200      	movs	r2, #0
 800093c:	625a      	str	r2, [r3, #36]	; 0x24
  hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 800093e:	4b20      	ldr	r3, [pc, #128]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000940:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000944:	629a      	str	r2, [r3, #40]	; 0x28
  hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 8000946:	4b1e      	ldr	r3, [pc, #120]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000948:	2200      	movs	r2, #0
 800094a:	62da      	str	r2, [r3, #44]	; 0x2c
  hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_ENABLE;
 800094c:	4b1c      	ldr	r3, [pc, #112]	; (80009c0 <MX_FSMC_Init+0xec>)
 800094e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000952:	631a      	str	r2, [r3, #48]	; 0x30
  hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 8000954:	4b1a      	ldr	r3, [pc, #104]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000956:	2200      	movs	r2, #0
 8000958:	635a      	str	r2, [r3, #52]	; 0x34
  hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 800095a:	4b19      	ldr	r3, [pc, #100]	; (80009c0 <MX_FSMC_Init+0xec>)
 800095c:	2200      	movs	r2, #0
 800095e:	639a      	str	r2, [r3, #56]	; 0x38
  hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 8000960:	4b17      	ldr	r3, [pc, #92]	; (80009c0 <MX_FSMC_Init+0xec>)
 8000962:	2200      	movs	r2, #0
 8000964:	645a      	str	r2, [r3, #68]	; 0x44
  /* Timing */
  Timing.AddressSetupTime = 0xf;
 8000966:	230f      	movs	r3, #15
 8000968:	61fb      	str	r3, [r7, #28]
  Timing.AddressHoldTime = 15;
 800096a:	230f      	movs	r3, #15
 800096c:	623b      	str	r3, [r7, #32]
  Timing.DataSetupTime = 60;
 800096e:	233c      	movs	r3, #60	; 0x3c
 8000970:	627b      	str	r3, [r7, #36]	; 0x24
  Timing.BusTurnAroundDuration = 0;
 8000972:	2300      	movs	r3, #0
 8000974:	62bb      	str	r3, [r7, #40]	; 0x28
  Timing.CLKDivision = 16;
 8000976:	2310      	movs	r3, #16
 8000978:	62fb      	str	r3, [r7, #44]	; 0x2c
  Timing.DataLatency = 17;
 800097a:	2311      	movs	r3, #17
 800097c:	633b      	str	r3, [r7, #48]	; 0x30
  Timing.AccessMode = FSMC_ACCESS_MODE_A;
 800097e:	2300      	movs	r3, #0
 8000980:	637b      	str	r3, [r7, #52]	; 0x34
  /* ExtTiming */
  ExtTiming.AddressSetupTime = 8;
 8000982:	2308      	movs	r3, #8
 8000984:	603b      	str	r3, [r7, #0]
  ExtTiming.AddressHoldTime = 15;
 8000986:	230f      	movs	r3, #15
 8000988:	607b      	str	r3, [r7, #4]
  ExtTiming.DataSetupTime = 9;
 800098a:	2309      	movs	r3, #9
 800098c:	60bb      	str	r3, [r7, #8]
  ExtTiming.BusTurnAroundDuration = 0;
 800098e:	2300      	movs	r3, #0
 8000990:	60fb      	str	r3, [r7, #12]
  ExtTiming.CLKDivision = 16;
 8000992:	2310      	movs	r3, #16
 8000994:	613b      	str	r3, [r7, #16]
  ExtTiming.DataLatency = 17;
 8000996:	2311      	movs	r3, #17
 8000998:	617b      	str	r3, [r7, #20]
  ExtTiming.AccessMode = FSMC_ACCESS_MODE_A;
 800099a:	2300      	movs	r3, #0
 800099c:	61bb      	str	r3, [r7, #24]

  if (HAL_SRAM_Init(&hsram1, &Timing, &ExtTiming) != HAL_OK)
 800099e:	463a      	mov	r2, r7
 80009a0:	f107 031c 	add.w	r3, r7, #28
 80009a4:	4619      	mov	r1, r3
 80009a6:	4806      	ldr	r0, [pc, #24]	; (80009c0 <MX_FSMC_Init+0xec>)
 80009a8:	f004 fdcc 	bl	8005544 <HAL_SRAM_Init>
 80009ac:	4603      	mov	r3, r0
 80009ae:	2b00      	cmp	r3, #0
 80009b0:	d001      	beq.n	80009b6 <MX_FSMC_Init+0xe2>
  {
    Error_Handler( );
 80009b2:	f001 f89b 	bl	8001aec <Error_Handler>
  }

  /* USER CODE BEGIN FSMC_Init 2 */

  /* USER CODE END FSMC_Init 2 */
}
 80009b6:	bf00      	nop
 80009b8:	3738      	adds	r7, #56	; 0x38
 80009ba:	46bd      	mov	sp, r7
 80009bc:	bd80      	pop	{r7, pc}
 80009be:	bf00      	nop
 80009c0:	2000019c 	.word	0x2000019c
 80009c4:	a0000104 	.word	0xa0000104

080009c8 <HAL_FSMC_MspInit>:

static uint32_t FSMC_Initialized = 0;

static void HAL_FSMC_MspInit(void){
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b086      	sub	sp, #24
 80009cc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_MspInit 0 */

  /* USER CODE END FSMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009ce:	1d3b      	adds	r3, r7, #4
 80009d0:	2200      	movs	r2, #0
 80009d2:	601a      	str	r2, [r3, #0]
 80009d4:	605a      	str	r2, [r3, #4]
 80009d6:	609a      	str	r2, [r3, #8]
 80009d8:	60da      	str	r2, [r3, #12]
 80009da:	611a      	str	r2, [r3, #16]
  if (FSMC_Initialized) {
 80009dc:	4b1c      	ldr	r3, [pc, #112]	; (8000a50 <HAL_FSMC_MspInit+0x88>)
 80009de:	681b      	ldr	r3, [r3, #0]
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d131      	bne.n	8000a48 <HAL_FSMC_MspInit+0x80>
    return;
  }
  FSMC_Initialized = 1;
 80009e4:	4b1a      	ldr	r3, [pc, #104]	; (8000a50 <HAL_FSMC_MspInit+0x88>)
 80009e6:	2201      	movs	r2, #1
 80009e8:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FSMC_CLK_ENABLE();
 80009ea:	2300      	movs	r3, #0
 80009ec:	603b      	str	r3, [r7, #0]
 80009ee:	4b19      	ldr	r3, [pc, #100]	; (8000a54 <HAL_FSMC_MspInit+0x8c>)
 80009f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80009f2:	4a18      	ldr	r2, [pc, #96]	; (8000a54 <HAL_FSMC_MspInit+0x8c>)
 80009f4:	f043 0301 	orr.w	r3, r3, #1
 80009f8:	6393      	str	r3, [r2, #56]	; 0x38
 80009fa:	4b16      	ldr	r3, [pc, #88]	; (8000a54 <HAL_FSMC_MspInit+0x8c>)
 80009fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80009fe:	f003 0301 	and.w	r3, r3, #1
 8000a02:	603b      	str	r3, [r7, #0]
 8000a04:	683b      	ldr	r3, [r7, #0]
  PD4   ------> FSMC_NOE
  PD5   ------> FSMC_NWE
  PD7   ------> FSMC_NE1
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9
 8000a06:	f64f 7388 	movw	r3, #65416	; 0xff88
 8000a0a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13
                          |GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0c:	2302      	movs	r3, #2
 8000a0e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a10:	2300      	movs	r3, #0
 8000a12:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a14:	2303      	movs	r3, #3
 8000a16:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000a18:	230c      	movs	r3, #12
 8000a1a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000a1c:	1d3b      	adds	r3, r7, #4
 8000a1e:	4619      	mov	r1, r3
 8000a20:	480d      	ldr	r0, [pc, #52]	; (8000a58 <HAL_FSMC_MspInit+0x90>)
 8000a22:	f003 f879 	bl	8003b18 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8000a26:	f24c 73b3 	movw	r3, #51123	; 0xc7b3
 8000a2a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4
                          |GPIO_PIN_5|GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a2c:	2302      	movs	r3, #2
 8000a2e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a30:	2300      	movs	r3, #0
 8000a32:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a34:	2303      	movs	r3, #3
 8000a36:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000a38:	230c      	movs	r3, #12
 8000a3a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000a3c:	1d3b      	adds	r3, r7, #4
 8000a3e:	4619      	mov	r1, r3
 8000a40:	4806      	ldr	r0, [pc, #24]	; (8000a5c <HAL_FSMC_MspInit+0x94>)
 8000a42:	f003 f869 	bl	8003b18 <HAL_GPIO_Init>
 8000a46:	e000      	b.n	8000a4a <HAL_FSMC_MspInit+0x82>
    return;
 8000a48:	bf00      	nop

  /* USER CODE BEGIN FSMC_MspInit 1 */

  /* USER CODE END FSMC_MspInit 1 */
}
 8000a4a:	3718      	adds	r7, #24
 8000a4c:	46bd      	mov	sp, r7
 8000a4e:	bd80      	pop	{r7, pc}
 8000a50:	200000b0 	.word	0x200000b0
 8000a54:	40023800 	.word	0x40023800
 8000a58:	40021000 	.word	0x40021000
 8000a5c:	40020c00 	.word	0x40020c00

08000a60 <HAL_SRAM_MspInit>:

void HAL_SRAM_MspInit(SRAM_HandleTypeDef* sramHandle){
 8000a60:	b580      	push	{r7, lr}
 8000a62:	b082      	sub	sp, #8
 8000a64:	af00      	add	r7, sp, #0
 8000a66:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SRAM_MspInit 0 */

  /* USER CODE END SRAM_MspInit 0 */
  HAL_FSMC_MspInit();
 8000a68:	f7ff ffae 	bl	80009c8 <HAL_FSMC_MspInit>
  /* USER CODE BEGIN SRAM_MspInit 1 */

  /* USER CODE END SRAM_MspInit 1 */
}
 8000a6c:	bf00      	nop
 8000a6e:	3708      	adds	r7, #8
 8000a70:	46bd      	mov	sp, r7
 8000a72:	bd80      	pop	{r7, pc}

08000a74 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	b08e      	sub	sp, #56	; 0x38
 8000a78:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a7a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a7e:	2200      	movs	r2, #0
 8000a80:	601a      	str	r2, [r3, #0]
 8000a82:	605a      	str	r2, [r3, #4]
 8000a84:	609a      	str	r2, [r3, #8]
 8000a86:	60da      	str	r2, [r3, #12]
 8000a88:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	623b      	str	r3, [r7, #32]
 8000a8e:	4b8f      	ldr	r3, [pc, #572]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a92:	4a8e      	ldr	r2, [pc, #568]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000a94:	f043 0310 	orr.w	r3, r3, #16
 8000a98:	6313      	str	r3, [r2, #48]	; 0x30
 8000a9a:	4b8c      	ldr	r3, [pc, #560]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a9e:	f003 0310 	and.w	r3, r3, #16
 8000aa2:	623b      	str	r3, [r7, #32]
 8000aa4:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	61fb      	str	r3, [r7, #28]
 8000aaa:	4b88      	ldr	r3, [pc, #544]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000aac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000aae:	4a87      	ldr	r2, [pc, #540]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ab0:	f043 0304 	orr.w	r3, r3, #4
 8000ab4:	6313      	str	r3, [r2, #48]	; 0x30
 8000ab6:	4b85      	ldr	r3, [pc, #532]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ab8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000aba:	f003 0304 	and.w	r3, r3, #4
 8000abe:	61fb      	str	r3, [r7, #28]
 8000ac0:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	61bb      	str	r3, [r7, #24]
 8000ac6:	4b81      	ldr	r3, [pc, #516]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000aca:	4a80      	ldr	r2, [pc, #512]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000acc:	f043 0320 	orr.w	r3, r3, #32
 8000ad0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ad2:	4b7e      	ldr	r3, [pc, #504]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ad4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ad6:	f003 0320 	and.w	r3, r3, #32
 8000ada:	61bb      	str	r3, [r7, #24]
 8000adc:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000ade:	2300      	movs	r3, #0
 8000ae0:	617b      	str	r3, [r7, #20]
 8000ae2:	4b7a      	ldr	r3, [pc, #488]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ae6:	4a79      	ldr	r2, [pc, #484]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000ae8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aec:	6313      	str	r3, [r2, #48]	; 0x30
 8000aee:	4b77      	ldr	r3, [pc, #476]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000af0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000af2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000af6:	617b      	str	r3, [r7, #20]
 8000af8:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000afa:	2300      	movs	r3, #0
 8000afc:	613b      	str	r3, [r7, #16]
 8000afe:	4b73      	ldr	r3, [pc, #460]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b02:	4a72      	ldr	r2, [pc, #456]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b04:	f043 0301 	orr.w	r3, r3, #1
 8000b08:	6313      	str	r3, [r2, #48]	; 0x30
 8000b0a:	4b70      	ldr	r3, [pc, #448]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b0e:	f003 0301 	and.w	r3, r3, #1
 8000b12:	613b      	str	r3, [r7, #16]
 8000b14:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b16:	2300      	movs	r3, #0
 8000b18:	60fb      	str	r3, [r7, #12]
 8000b1a:	4b6c      	ldr	r3, [pc, #432]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b1e:	4a6b      	ldr	r2, [pc, #428]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b20:	f043 0302 	orr.w	r3, r3, #2
 8000b24:	6313      	str	r3, [r2, #48]	; 0x30
 8000b26:	4b69      	ldr	r3, [pc, #420]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b2a:	f003 0302 	and.w	r3, r3, #2
 8000b2e:	60fb      	str	r3, [r7, #12]
 8000b30:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b32:	2300      	movs	r3, #0
 8000b34:	60bb      	str	r3, [r7, #8]
 8000b36:	4b65      	ldr	r3, [pc, #404]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b3a:	4a64      	ldr	r2, [pc, #400]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b3c:	f043 0308 	orr.w	r3, r3, #8
 8000b40:	6313      	str	r3, [r2, #48]	; 0x30
 8000b42:	4b62      	ldr	r3, [pc, #392]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b46:	f003 0308 	and.w	r3, r3, #8
 8000b4a:	60bb      	str	r3, [r7, #8]
 8000b4c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000b4e:	2300      	movs	r3, #0
 8000b50:	607b      	str	r3, [r7, #4]
 8000b52:	4b5e      	ldr	r3, [pc, #376]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b56:	4a5d      	ldr	r2, [pc, #372]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b58:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b5c:	6313      	str	r3, [r2, #48]	; 0x30
 8000b5e:	4b5b      	ldr	r3, [pc, #364]	; (8000ccc <MX_GPIO_Init+0x258>)
 8000b60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000b66:	607b      	str	r3, [r7, #4]
 8000b68:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, DEBUG_LED_Pin|OUTPUT_Y0_Pin|OUTPUT_Y1_Pin, GPIO_PIN_RESET);
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	2170      	movs	r1, #112	; 0x70
 8000b6e:	4858      	ldr	r0, [pc, #352]	; (8000cd0 <MX_GPIO_Init+0x25c>)
 8000b70:	f003 f96e 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, FSMC_RES_Pin|T_MOSI_Pin, GPIO_PIN_RESET);
 8000b74:	2200      	movs	r2, #0
 8000b76:	f44f 5108 	mov.w	r1, #8704	; 0x2200
 8000b7a:	4856      	ldr	r0, [pc, #344]	; (8000cd4 <MX_GPIO_Init+0x260>)
 8000b7c:	f003 f968 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ESP12_PWR_GPIO_Port, ESP12_PWR_Pin, GPIO_PIN_RESET);
 8000b80:	2200      	movs	r2, #0
 8000b82:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000b86:	4854      	ldr	r0, [pc, #336]	; (8000cd8 <MX_GPIO_Init+0x264>)
 8000b88:	f003 f962 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, LD_LATCH_Pin|T_CS_Pin|T_CLK_Pin, GPIO_PIN_RESET);
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	f44f 71e0 	mov.w	r1, #448	; 0x1c0
 8000b92:	4852      	ldr	r0, [pc, #328]	; (8000cdc <MX_GPIO_Init+0x268>)
 8000b94:	f003 f95c 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(FSMC_BLK_GPIO_Port, FSMC_BLK_Pin, GPIO_PIN_RESET);
 8000b98:	2200      	movs	r2, #0
 8000b9a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000b9e:	4850      	ldr	r0, [pc, #320]	; (8000ce0 <MX_GPIO_Init+0x26c>)
 8000ba0:	f003 f956 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(BTN_LOAD_GPIO_Port, BTN_LOAD_Pin, GPIO_PIN_RESET);
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	2108      	movs	r1, #8
 8000ba8:	484e      	ldr	r0, [pc, #312]	; (8000ce4 <MX_GPIO_Init+0x270>)
 8000baa:	f003 f951 	bl	8003e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEPin PEPin PEPin */
  GPIO_InitStruct.Pin = DEBUG_LED_Pin|OUTPUT_Y0_Pin|OUTPUT_Y1_Pin;
 8000bae:	2370      	movs	r3, #112	; 0x70
 8000bb0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bb2:	2301      	movs	r3, #1
 8000bb4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bba:	2300      	movs	r3, #0
 8000bbc:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000bbe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000bc2:	4619      	mov	r1, r3
 8000bc4:	4842      	ldr	r0, [pc, #264]	; (8000cd0 <MX_GPIO_Init+0x25c>)
 8000bc6:	f002 ffa7 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = FSMC_RES_Pin|T_MOSI_Pin;
 8000bca:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8000bce:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bd0:	2301      	movs	r3, #1
 8000bd2:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bd8:	2300      	movs	r3, #0
 8000bda:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000bdc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000be0:	4619      	mov	r1, r3
 8000be2:	483c      	ldr	r0, [pc, #240]	; (8000cd4 <MX_GPIO_Init+0x260>)
 8000be4:	f002 ff98 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = ESP12_BUSY_Pin;
 8000be8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000bec:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000bee:	2300      	movs	r3, #0
 8000bf0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(ESP12_BUSY_GPIO_Port, &GPIO_InitStruct);
 8000bf6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000bfa:	4619      	mov	r1, r3
 8000bfc:	4836      	ldr	r0, [pc, #216]	; (8000cd8 <MX_GPIO_Init+0x264>)
 8000bfe:	f002 ff8b 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = ESP12_PWR_Pin;
 8000c02:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c06:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c08:	2301      	movs	r3, #1
 8000c0a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c10:	2300      	movs	r3, #0
 8000c12:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ESP12_PWR_GPIO_Port, &GPIO_InitStruct);
 8000c14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c18:	4619      	mov	r1, r3
 8000c1a:	482f      	ldr	r0, [pc, #188]	; (8000cd8 <MX_GPIO_Init+0x264>)
 8000c1c:	f002 ff7c 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = INPUT_X0_Pin|INPUT_X1_Pin;
 8000c20:	23c0      	movs	r3, #192	; 0xc0
 8000c22:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c24:	2300      	movs	r3, #0
 8000c26:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c28:	2300      	movs	r3, #0
 8000c2a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c2c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c30:	4619      	mov	r1, r3
 8000c32:	482b      	ldr	r0, [pc, #172]	; (8000ce0 <MX_GPIO_Init+0x26c>)
 8000c34:	f002 ff70 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = INPUT_X2_Pin|INPUT_X3_Pin;
 8000c38:	2330      	movs	r3, #48	; 0x30
 8000c3a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c40:	2300      	movs	r3, #0
 8000c42:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c44:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c48:	4619      	mov	r1, r3
 8000c4a:	4822      	ldr	r0, [pc, #136]	; (8000cd4 <MX_GPIO_Init+0x260>)
 8000c4c:	f002 ff64 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PGPin PGPin PGPin */
  GPIO_InitStruct.Pin = LD_LATCH_Pin|T_CS_Pin|T_CLK_Pin;
 8000c50:	f44f 73e0 	mov.w	r3, #448	; 0x1c0
 8000c54:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c56:	2301      	movs	r3, #1
 8000c58:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c5e:	2300      	movs	r3, #0
 8000c60:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000c62:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c66:	4619      	mov	r1, r3
 8000c68:	481c      	ldr	r0, [pc, #112]	; (8000cdc <MX_GPIO_Init+0x268>)
 8000c6a:	f002 ff55 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = T_PEN_Pin|T_MISO_Pin;
 8000c6e:	f44f 5388 	mov.w	r3, #4352	; 0x1100
 8000c72:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c74:	2300      	movs	r3, #0
 8000c76:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000c78:	2301      	movs	r3, #1
 8000c7a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c7c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c80:	4619      	mov	r1, r3
 8000c82:	4814      	ldr	r0, [pc, #80]	; (8000cd4 <MX_GPIO_Init+0x260>)
 8000c84:	f002 ff48 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = FSMC_BLK_Pin;
 8000c88:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000c8c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c8e:	2301      	movs	r3, #1
 8000c90:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c92:	2300      	movs	r3, #0
 8000c94:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c96:	2300      	movs	r3, #0
 8000c98:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(FSMC_BLK_GPIO_Port, &GPIO_InitStruct);
 8000c9a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c9e:	4619      	mov	r1, r3
 8000ca0:	480f      	ldr	r0, [pc, #60]	; (8000ce0 <MX_GPIO_Init+0x26c>)
 8000ca2:	f002 ff39 	bl	8003b18 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = BTN_LOAD_Pin;
 8000ca6:	2308      	movs	r3, #8
 8000ca8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000caa:	2301      	movs	r3, #1
 8000cac:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cae:	2300      	movs	r3, #0
 8000cb0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(BTN_LOAD_GPIO_Port, &GPIO_InitStruct);
 8000cb6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cba:	4619      	mov	r1, r3
 8000cbc:	4809      	ldr	r0, [pc, #36]	; (8000ce4 <MX_GPIO_Init+0x270>)
 8000cbe:	f002 ff2b 	bl	8003b18 <HAL_GPIO_Init>

}
 8000cc2:	bf00      	nop
 8000cc4:	3738      	adds	r7, #56	; 0x38
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	bd80      	pop	{r7, pc}
 8000cca:	bf00      	nop
 8000ccc:	40023800 	.word	0x40023800
 8000cd0:	40021000 	.word	0x40021000
 8000cd4:	40020800 	.word	0x40020800
 8000cd8:	40021400 	.word	0x40021400
 8000cdc:	40021800 	.word	0x40021800
 8000ce0:	40020000 	.word	0x40020000
 8000ce4:	40020c00 	.word	0x40020c00

08000ce8 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000cec:	4b12      	ldr	r3, [pc, #72]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000cee:	4a13      	ldr	r2, [pc, #76]	; (8000d3c <MX_I2C1_Init+0x54>)
 8000cf0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000cf2:	4b11      	ldr	r3, [pc, #68]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000cf4:	4a12      	ldr	r2, [pc, #72]	; (8000d40 <MX_I2C1_Init+0x58>)
 8000cf6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000cf8:	4b0f      	ldr	r3, [pc, #60]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000cfe:	4b0e      	ldr	r3, [pc, #56]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d00:	2200      	movs	r2, #0
 8000d02:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d04:	4b0c      	ldr	r3, [pc, #48]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d06:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d0a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000d0c:	4b0a      	ldr	r3, [pc, #40]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d0e:	2200      	movs	r2, #0
 8000d10:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000d12:	4b09      	ldr	r3, [pc, #36]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d14:	2200      	movs	r2, #0
 8000d16:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000d18:	4b07      	ldr	r3, [pc, #28]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d1e:	4b06      	ldr	r3, [pc, #24]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d20:	2200      	movs	r2, #0
 8000d22:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000d24:	4804      	ldr	r0, [pc, #16]	; (8000d38 <MX_I2C1_Init+0x50>)
 8000d26:	f003 f8ad 	bl	8003e84 <HAL_I2C_Init>
 8000d2a:	4603      	mov	r3, r0
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	d001      	beq.n	8000d34 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000d30:	f000 fedc 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	200001ec 	.word	0x200001ec
 8000d3c:	40005400 	.word	0x40005400
 8000d40:	000186a0 	.word	0x000186a0

08000d44 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b08a      	sub	sp, #40	; 0x28
 8000d48:	af00      	add	r7, sp, #0
 8000d4a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d4c:	f107 0314 	add.w	r3, r7, #20
 8000d50:	2200      	movs	r2, #0
 8000d52:	601a      	str	r2, [r3, #0]
 8000d54:	605a      	str	r2, [r3, #4]
 8000d56:	609a      	str	r2, [r3, #8]
 8000d58:	60da      	str	r2, [r3, #12]
 8000d5a:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	4a19      	ldr	r2, [pc, #100]	; (8000dc8 <HAL_I2C_MspInit+0x84>)
 8000d62:	4293      	cmp	r3, r2
 8000d64:	d12b      	bne.n	8000dbe <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d66:	2300      	movs	r3, #0
 8000d68:	613b      	str	r3, [r7, #16]
 8000d6a:	4b18      	ldr	r3, [pc, #96]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d6e:	4a17      	ldr	r2, [pc, #92]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000d70:	f043 0302 	orr.w	r3, r3, #2
 8000d74:	6313      	str	r3, [r2, #48]	; 0x30
 8000d76:	4b15      	ldr	r3, [pc, #84]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000d78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d7a:	f003 0302 	and.w	r3, r3, #2
 8000d7e:	613b      	str	r3, [r7, #16]
 8000d80:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d82:	23c0      	movs	r3, #192	; 0xc0
 8000d84:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d86:	2312      	movs	r3, #18
 8000d88:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d8e:	2303      	movs	r3, #3
 8000d90:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000d92:	2304      	movs	r3, #4
 8000d94:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d96:	f107 0314 	add.w	r3, r7, #20
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	480c      	ldr	r0, [pc, #48]	; (8000dd0 <HAL_I2C_MspInit+0x8c>)
 8000d9e:	f002 febb 	bl	8003b18 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000da2:	2300      	movs	r3, #0
 8000da4:	60fb      	str	r3, [r7, #12]
 8000da6:	4b09      	ldr	r3, [pc, #36]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000da8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000daa:	4a08      	ldr	r2, [pc, #32]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000dac:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000db0:	6413      	str	r3, [r2, #64]	; 0x40
 8000db2:	4b06      	ldr	r3, [pc, #24]	; (8000dcc <HAL_I2C_MspInit+0x88>)
 8000db4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000db6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000dba:	60fb      	str	r3, [r7, #12]
 8000dbc:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8000dbe:	bf00      	nop
 8000dc0:	3728      	adds	r7, #40	; 0x28
 8000dc2:	46bd      	mov	sp, r7
 8000dc4:	bd80      	pop	{r7, pc}
 8000dc6:	bf00      	nop
 8000dc8:	40005400 	.word	0x40005400
 8000dcc:	40023800 	.word	0x40023800
 8000dd0:	40020400 	.word	0x40020400

08000dd4 <LCD_WR_REG>:
unsigned char s[50];

_lcd_dev lcddev;

void LCD_WR_REG(uint16_t reg)
{
 8000dd4:	b480      	push	{r7}
 8000dd6:	b083      	sub	sp, #12
 8000dd8:	af00      	add	r7, sp, #0
 8000dda:	4603      	mov	r3, r0
 8000ddc:	80fb      	strh	r3, [r7, #6]
	LCD->LCD_REG=reg;
 8000dde:	4a04      	ldr	r2, [pc, #16]	; (8000df0 <LCD_WR_REG+0x1c>)
 8000de0:	88fb      	ldrh	r3, [r7, #6]
 8000de2:	8013      	strh	r3, [r2, #0]
}
 8000de4:	bf00      	nop
 8000de6:	370c      	adds	r7, #12
 8000de8:	46bd      	mov	sp, r7
 8000dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dee:	4770      	bx	lr
 8000df0:	600ffffe 	.word	0x600ffffe

08000df4 <LCD_WR_DATA>:

void LCD_WR_DATA(uint16_t data)
{
 8000df4:	b480      	push	{r7}
 8000df6:	b083      	sub	sp, #12
 8000df8:	af00      	add	r7, sp, #0
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	80fb      	strh	r3, [r7, #6]
	LCD->LCD_RAM=data;
 8000dfe:	4a04      	ldr	r2, [pc, #16]	; (8000e10 <LCD_WR_DATA+0x1c>)
 8000e00:	88fb      	ldrh	r3, [r7, #6]
 8000e02:	8053      	strh	r3, [r2, #2]
}
 8000e04:	bf00      	nop
 8000e06:	370c      	adds	r7, #12
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e0e:	4770      	bx	lr
 8000e10:	600ffffe 	.word	0x600ffffe

08000e14 <LCD_RD_DATA>:

uint16_t LCD_RD_DATA(void)
{
 8000e14:	b480      	push	{r7}
 8000e16:	b083      	sub	sp, #12
 8000e18:	af00      	add	r7, sp, #0
	__IO uint16_t ram;
	ram=LCD->LCD_RAM;
 8000e1a:	4b06      	ldr	r3, [pc, #24]	; (8000e34 <LCD_RD_DATA+0x20>)
 8000e1c:	885b      	ldrh	r3, [r3, #2]
 8000e1e:	b29b      	uxth	r3, r3
 8000e20:	80fb      	strh	r3, [r7, #6]
	return ram;
 8000e22:	88fb      	ldrh	r3, [r7, #6]
 8000e24:	b29b      	uxth	r3, r3
}
 8000e26:	4618      	mov	r0, r3
 8000e28:	370c      	adds	r7, #12
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e30:	4770      	bx	lr
 8000e32:	bf00      	nop
 8000e34:	600ffffe 	.word	0x600ffffe

08000e38 <lcd_AddressSet>:


void lcd_AddressSet(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2)
{
 8000e38:	b590      	push	{r4, r7, lr}
 8000e3a:	b083      	sub	sp, #12
 8000e3c:	af00      	add	r7, sp, #0
 8000e3e:	4604      	mov	r4, r0
 8000e40:	4608      	mov	r0, r1
 8000e42:	4611      	mov	r1, r2
 8000e44:	461a      	mov	r2, r3
 8000e46:	4623      	mov	r3, r4
 8000e48:	80fb      	strh	r3, [r7, #6]
 8000e4a:	4603      	mov	r3, r0
 8000e4c:	80bb      	strh	r3, [r7, #4]
 8000e4e:	460b      	mov	r3, r1
 8000e50:	807b      	strh	r3, [r7, #2]
 8000e52:	4613      	mov	r3, r2
 8000e54:	803b      	strh	r3, [r7, #0]
		LCD_WR_REG(0x2a);
 8000e56:	202a      	movs	r0, #42	; 0x2a
 8000e58:	f7ff ffbc 	bl	8000dd4 <LCD_WR_REG>
		LCD_WR_DATA(x1>>8);
 8000e5c:	88fb      	ldrh	r3, [r7, #6]
 8000e5e:	0a1b      	lsrs	r3, r3, #8
 8000e60:	b29b      	uxth	r3, r3
 8000e62:	4618      	mov	r0, r3
 8000e64:	f7ff ffc6 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(x1&0xff);
 8000e68:	88fb      	ldrh	r3, [r7, #6]
 8000e6a:	b2db      	uxtb	r3, r3
 8000e6c:	b29b      	uxth	r3, r3
 8000e6e:	4618      	mov	r0, r3
 8000e70:	f7ff ffc0 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(x2>>8);
 8000e74:	887b      	ldrh	r3, [r7, #2]
 8000e76:	0a1b      	lsrs	r3, r3, #8
 8000e78:	b29b      	uxth	r3, r3
 8000e7a:	4618      	mov	r0, r3
 8000e7c:	f7ff ffba 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(x2&0xff);
 8000e80:	887b      	ldrh	r3, [r7, #2]
 8000e82:	b2db      	uxtb	r3, r3
 8000e84:	b29b      	uxth	r3, r3
 8000e86:	4618      	mov	r0, r3
 8000e88:	f7ff ffb4 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_REG(0x2b);
 8000e8c:	202b      	movs	r0, #43	; 0x2b
 8000e8e:	f7ff ffa1 	bl	8000dd4 <LCD_WR_REG>
		LCD_WR_DATA(y1>>8);
 8000e92:	88bb      	ldrh	r3, [r7, #4]
 8000e94:	0a1b      	lsrs	r3, r3, #8
 8000e96:	b29b      	uxth	r3, r3
 8000e98:	4618      	mov	r0, r3
 8000e9a:	f7ff ffab 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(y1&0xff);
 8000e9e:	88bb      	ldrh	r3, [r7, #4]
 8000ea0:	b2db      	uxtb	r3, r3
 8000ea2:	b29b      	uxth	r3, r3
 8000ea4:	4618      	mov	r0, r3
 8000ea6:	f7ff ffa5 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(y2>>8);
 8000eaa:	883b      	ldrh	r3, [r7, #0]
 8000eac:	0a1b      	lsrs	r3, r3, #8
 8000eae:	b29b      	uxth	r3, r3
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	f7ff ff9f 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_DATA(y2&0xff);
 8000eb6:	883b      	ldrh	r3, [r7, #0]
 8000eb8:	b2db      	uxtb	r3, r3
 8000eba:	b29b      	uxth	r3, r3
 8000ebc:	4618      	mov	r0, r3
 8000ebe:	f7ff ff99 	bl	8000df4 <LCD_WR_DATA>
		LCD_WR_REG(0x2c);
 8000ec2:	202c      	movs	r0, #44	; 0x2c
 8000ec4:	f7ff ff86 	bl	8000dd4 <LCD_WR_REG>
}
 8000ec8:	bf00      	nop
 8000eca:	370c      	adds	r7, #12
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bd90      	pop	{r4, r7, pc}

08000ed0 <lcd_Clear>:
  * @brief  Fill all pixels with a color
  * @param  color Color to fill the screen
  * @retval None
  */
void lcd_Clear(uint16_t color) //
{
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b084      	sub	sp, #16
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	4603      	mov	r3, r0
 8000ed8:	80fb      	strh	r3, [r7, #6]
	uint16_t i,j;
	lcd_AddressSet(0,0,lcddev.width-1,lcddev.height-1);
 8000eda:	4b15      	ldr	r3, [pc, #84]	; (8000f30 <lcd_Clear+0x60>)
 8000edc:	881b      	ldrh	r3, [r3, #0]
 8000ede:	3b01      	subs	r3, #1
 8000ee0:	b29a      	uxth	r2, r3
 8000ee2:	4b13      	ldr	r3, [pc, #76]	; (8000f30 <lcd_Clear+0x60>)
 8000ee4:	885b      	ldrh	r3, [r3, #2]
 8000ee6:	3b01      	subs	r3, #1
 8000ee8:	b29b      	uxth	r3, r3
 8000eea:	2100      	movs	r1, #0
 8000eec:	2000      	movs	r0, #0
 8000eee:	f7ff ffa3 	bl	8000e38 <lcd_AddressSet>
	for(i=0;i<lcddev.width;i++)
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	81fb      	strh	r3, [r7, #14]
 8000ef6:	e011      	b.n	8000f1c <lcd_Clear+0x4c>
	{
		for(j=0;j<lcddev.height;j++)
 8000ef8:	2300      	movs	r3, #0
 8000efa:	81bb      	strh	r3, [r7, #12]
 8000efc:	e006      	b.n	8000f0c <lcd_Clear+0x3c>
		{
			LCD_WR_DATA(color);
 8000efe:	88fb      	ldrh	r3, [r7, #6]
 8000f00:	4618      	mov	r0, r3
 8000f02:	f7ff ff77 	bl	8000df4 <LCD_WR_DATA>
		for(j=0;j<lcddev.height;j++)
 8000f06:	89bb      	ldrh	r3, [r7, #12]
 8000f08:	3301      	adds	r3, #1
 8000f0a:	81bb      	strh	r3, [r7, #12]
 8000f0c:	4b08      	ldr	r3, [pc, #32]	; (8000f30 <lcd_Clear+0x60>)
 8000f0e:	885b      	ldrh	r3, [r3, #2]
 8000f10:	89ba      	ldrh	r2, [r7, #12]
 8000f12:	429a      	cmp	r2, r3
 8000f14:	d3f3      	bcc.n	8000efe <lcd_Clear+0x2e>
	for(i=0;i<lcddev.width;i++)
 8000f16:	89fb      	ldrh	r3, [r7, #14]
 8000f18:	3301      	adds	r3, #1
 8000f1a:	81fb      	strh	r3, [r7, #14]
 8000f1c:	4b04      	ldr	r3, [pc, #16]	; (8000f30 <lcd_Clear+0x60>)
 8000f1e:	881b      	ldrh	r3, [r3, #0]
 8000f20:	89fa      	ldrh	r2, [r7, #14]
 8000f22:	429a      	cmp	r2, r3
 8000f24:	d3e8      	bcc.n	8000ef8 <lcd_Clear+0x28>
		}
	}
}
 8000f26:	bf00      	nop
 8000f28:	bf00      	nop
 8000f2a:	3710      	adds	r7, #16
 8000f2c:	46bd      	mov	sp, r7
 8000f2e:	bd80      	pop	{r7, pc}
 8000f30:	20000240 	.word	0x20000240

08000f34 <lcd_Fill>:
  * @param  yend	End row
  * @param  color Color to fill
  * @retval None
  */
void lcd_Fill(uint16_t xsta,uint16_t ysta,uint16_t xend,uint16_t yend,uint16_t color) //add a hcn = 1 mau car been trogn
{
 8000f34:	b590      	push	{r4, r7, lr}
 8000f36:	b085      	sub	sp, #20
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	4604      	mov	r4, r0
 8000f3c:	4608      	mov	r0, r1
 8000f3e:	4611      	mov	r1, r2
 8000f40:	461a      	mov	r2, r3
 8000f42:	4623      	mov	r3, r4
 8000f44:	80fb      	strh	r3, [r7, #6]
 8000f46:	4603      	mov	r3, r0
 8000f48:	80bb      	strh	r3, [r7, #4]
 8000f4a:	460b      	mov	r3, r1
 8000f4c:	807b      	strh	r3, [r7, #2]
 8000f4e:	4613      	mov	r3, r2
 8000f50:	803b      	strh	r3, [r7, #0]
	uint16_t i,j;
	lcd_AddressSet(xsta,ysta,xend-1,yend-1);
 8000f52:	887b      	ldrh	r3, [r7, #2]
 8000f54:	3b01      	subs	r3, #1
 8000f56:	b29a      	uxth	r2, r3
 8000f58:	883b      	ldrh	r3, [r7, #0]
 8000f5a:	3b01      	subs	r3, #1
 8000f5c:	b29b      	uxth	r3, r3
 8000f5e:	88b9      	ldrh	r1, [r7, #4]
 8000f60:	88f8      	ldrh	r0, [r7, #6]
 8000f62:	f7ff ff69 	bl	8000e38 <lcd_AddressSet>
	for(i=ysta;i<yend;i++)
 8000f66:	88bb      	ldrh	r3, [r7, #4]
 8000f68:	81fb      	strh	r3, [r7, #14]
 8000f6a:	e010      	b.n	8000f8e <lcd_Fill+0x5a>
	{
		for(j=xsta;j<xend;j++)
 8000f6c:	88fb      	ldrh	r3, [r7, #6]
 8000f6e:	81bb      	strh	r3, [r7, #12]
 8000f70:	e006      	b.n	8000f80 <lcd_Fill+0x4c>
		{
			LCD_WR_DATA(color);
 8000f72:	8c3b      	ldrh	r3, [r7, #32]
 8000f74:	4618      	mov	r0, r3
 8000f76:	f7ff ff3d 	bl	8000df4 <LCD_WR_DATA>
		for(j=xsta;j<xend;j++)
 8000f7a:	89bb      	ldrh	r3, [r7, #12]
 8000f7c:	3301      	adds	r3, #1
 8000f7e:	81bb      	strh	r3, [r7, #12]
 8000f80:	89ba      	ldrh	r2, [r7, #12]
 8000f82:	887b      	ldrh	r3, [r7, #2]
 8000f84:	429a      	cmp	r2, r3
 8000f86:	d3f4      	bcc.n	8000f72 <lcd_Fill+0x3e>
	for(i=ysta;i<yend;i++)
 8000f88:	89fb      	ldrh	r3, [r7, #14]
 8000f8a:	3301      	adds	r3, #1
 8000f8c:	81fb      	strh	r3, [r7, #14]
 8000f8e:	89fa      	ldrh	r2, [r7, #14]
 8000f90:	883b      	ldrh	r3, [r7, #0]
 8000f92:	429a      	cmp	r2, r3
 8000f94:	d3ea      	bcc.n	8000f6c <lcd_Fill+0x38>
		}
	}
}
 8000f96:	bf00      	nop
 8000f98:	bf00      	nop
 8000f9a:	3714      	adds	r7, #20
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	bd90      	pop	{r4, r7, pc}

08000fa0 <lcd_DrawPoint>:
  * @param  y Y coordinate
  * @param  color Color to fill
  * @retval None
  */
void lcd_DrawPoint(uint16_t x,uint16_t y,uint16_t color) // 1 ddieemr anhr
{
 8000fa0:	b580      	push	{r7, lr}
 8000fa2:	b082      	sub	sp, #8
 8000fa4:	af00      	add	r7, sp, #0
 8000fa6:	4603      	mov	r3, r0
 8000fa8:	80fb      	strh	r3, [r7, #6]
 8000faa:	460b      	mov	r3, r1
 8000fac:	80bb      	strh	r3, [r7, #4]
 8000fae:	4613      	mov	r3, r2
 8000fb0:	807b      	strh	r3, [r7, #2]
	lcd_AddressSet(x,y,x,y);//ÉèÖÃ¹â±êÎ»ÖÃ
 8000fb2:	88bb      	ldrh	r3, [r7, #4]
 8000fb4:	88fa      	ldrh	r2, [r7, #6]
 8000fb6:	88b9      	ldrh	r1, [r7, #4]
 8000fb8:	88f8      	ldrh	r0, [r7, #6]
 8000fba:	f7ff ff3d 	bl	8000e38 <lcd_AddressSet>
	LCD_WR_DATA(color);
 8000fbe:	887b      	ldrh	r3, [r7, #2]
 8000fc0:	4618      	mov	r0, r3
 8000fc2:	f7ff ff17 	bl	8000df4 <LCD_WR_DATA>
}
 8000fc6:	bf00      	nop
 8000fc8:	3708      	adds	r7, #8
 8000fca:	46bd      	mov	sp, r7
 8000fcc:	bd80      	pop	{r7, pc}

08000fce <lcd_DrawLine>:
  * @param  y2 Y coordinate of end point
  * @param  color Color to fill
  * @retval None
  */
void lcd_DrawLine(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2,uint16_t color) // ve duong
{
 8000fce:	b590      	push	{r4, r7, lr}
 8000fd0:	b08d      	sub	sp, #52	; 0x34
 8000fd2:	af00      	add	r7, sp, #0
 8000fd4:	4604      	mov	r4, r0
 8000fd6:	4608      	mov	r0, r1
 8000fd8:	4611      	mov	r1, r2
 8000fda:	461a      	mov	r2, r3
 8000fdc:	4623      	mov	r3, r4
 8000fde:	80fb      	strh	r3, [r7, #6]
 8000fe0:	4603      	mov	r3, r0
 8000fe2:	80bb      	strh	r3, [r7, #4]
 8000fe4:	460b      	mov	r3, r1
 8000fe6:	807b      	strh	r3, [r7, #2]
 8000fe8:	4613      	mov	r3, r2
 8000fea:	803b      	strh	r3, [r7, #0]
	uint16_t t;
	int xerr=0,yerr=0,delta_x,delta_y,distance;
 8000fec:	2300      	movs	r3, #0
 8000fee:	62bb      	str	r3, [r7, #40]	; 0x28
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	627b      	str	r3, [r7, #36]	; 0x24
	int incx,incy,uRow,uCol;
	delta_x=x2-x1;
 8000ff4:	887a      	ldrh	r2, [r7, #2]
 8000ff6:	88fb      	ldrh	r3, [r7, #6]
 8000ff8:	1ad3      	subs	r3, r2, r3
 8000ffa:	623b      	str	r3, [r7, #32]
	delta_y=y2-y1;
 8000ffc:	883a      	ldrh	r2, [r7, #0]
 8000ffe:	88bb      	ldrh	r3, [r7, #4]
 8001000:	1ad3      	subs	r3, r2, r3
 8001002:	61fb      	str	r3, [r7, #28]
	uRow=x1;
 8001004:	88fb      	ldrh	r3, [r7, #6]
 8001006:	60fb      	str	r3, [r7, #12]
	uCol=y1;
 8001008:	88bb      	ldrh	r3, [r7, #4]
 800100a:	60bb      	str	r3, [r7, #8]
	if(delta_x>0)incx=1;
 800100c:	6a3b      	ldr	r3, [r7, #32]
 800100e:	2b00      	cmp	r3, #0
 8001010:	dd02      	ble.n	8001018 <lcd_DrawLine+0x4a>
 8001012:	2301      	movs	r3, #1
 8001014:	617b      	str	r3, [r7, #20]
 8001016:	e00b      	b.n	8001030 <lcd_DrawLine+0x62>
	else if (delta_x==0)incx=0;
 8001018:	6a3b      	ldr	r3, [r7, #32]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d102      	bne.n	8001024 <lcd_DrawLine+0x56>
 800101e:	2300      	movs	r3, #0
 8001020:	617b      	str	r3, [r7, #20]
 8001022:	e005      	b.n	8001030 <lcd_DrawLine+0x62>
	else {incx=-1;delta_x=-delta_x;}
 8001024:	f04f 33ff 	mov.w	r3, #4294967295
 8001028:	617b      	str	r3, [r7, #20]
 800102a:	6a3b      	ldr	r3, [r7, #32]
 800102c:	425b      	negs	r3, r3
 800102e:	623b      	str	r3, [r7, #32]
	if(delta_y>0)incy=1;
 8001030:	69fb      	ldr	r3, [r7, #28]
 8001032:	2b00      	cmp	r3, #0
 8001034:	dd02      	ble.n	800103c <lcd_DrawLine+0x6e>
 8001036:	2301      	movs	r3, #1
 8001038:	613b      	str	r3, [r7, #16]
 800103a:	e00b      	b.n	8001054 <lcd_DrawLine+0x86>
	else if (delta_y==0)incy=0;
 800103c:	69fb      	ldr	r3, [r7, #28]
 800103e:	2b00      	cmp	r3, #0
 8001040:	d102      	bne.n	8001048 <lcd_DrawLine+0x7a>
 8001042:	2300      	movs	r3, #0
 8001044:	613b      	str	r3, [r7, #16]
 8001046:	e005      	b.n	8001054 <lcd_DrawLine+0x86>
	else {incy=-1;delta_y=-delta_y;}
 8001048:	f04f 33ff 	mov.w	r3, #4294967295
 800104c:	613b      	str	r3, [r7, #16]
 800104e:	69fb      	ldr	r3, [r7, #28]
 8001050:	425b      	negs	r3, r3
 8001052:	61fb      	str	r3, [r7, #28]
	if(delta_x>delta_y)distance=delta_x;
 8001054:	6a3a      	ldr	r2, [r7, #32]
 8001056:	69fb      	ldr	r3, [r7, #28]
 8001058:	429a      	cmp	r2, r3
 800105a:	dd02      	ble.n	8001062 <lcd_DrawLine+0x94>
 800105c:	6a3b      	ldr	r3, [r7, #32]
 800105e:	61bb      	str	r3, [r7, #24]
 8001060:	e001      	b.n	8001066 <lcd_DrawLine+0x98>
	else distance=delta_y;
 8001062:	69fb      	ldr	r3, [r7, #28]
 8001064:	61bb      	str	r3, [r7, #24]
	for(t=0;t<distance+1;t++)
 8001066:	2300      	movs	r3, #0
 8001068:	85fb      	strh	r3, [r7, #46]	; 0x2e
 800106a:	e02b      	b.n	80010c4 <lcd_DrawLine+0xf6>
	{
		lcd_DrawPoint(uRow,uCol,color);
 800106c:	68fb      	ldr	r3, [r7, #12]
 800106e:	b29b      	uxth	r3, r3
 8001070:	68ba      	ldr	r2, [r7, #8]
 8001072:	b291      	uxth	r1, r2
 8001074:	f8b7 2040 	ldrh.w	r2, [r7, #64]	; 0x40
 8001078:	4618      	mov	r0, r3
 800107a:	f7ff ff91 	bl	8000fa0 <lcd_DrawPoint>
		xerr+=delta_x;
 800107e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001080:	6a3b      	ldr	r3, [r7, #32]
 8001082:	4413      	add	r3, r2
 8001084:	62bb      	str	r3, [r7, #40]	; 0x28
		yerr+=delta_y;
 8001086:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001088:	69fb      	ldr	r3, [r7, #28]
 800108a:	4413      	add	r3, r2
 800108c:	627b      	str	r3, [r7, #36]	; 0x24
		if(xerr>distance)
 800108e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001090:	69bb      	ldr	r3, [r7, #24]
 8001092:	429a      	cmp	r2, r3
 8001094:	dd07      	ble.n	80010a6 <lcd_DrawLine+0xd8>
		{
			xerr-=distance;
 8001096:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001098:	69bb      	ldr	r3, [r7, #24]
 800109a:	1ad3      	subs	r3, r2, r3
 800109c:	62bb      	str	r3, [r7, #40]	; 0x28
			uRow+=incx;
 800109e:	68fa      	ldr	r2, [r7, #12]
 80010a0:	697b      	ldr	r3, [r7, #20]
 80010a2:	4413      	add	r3, r2
 80010a4:	60fb      	str	r3, [r7, #12]
		}
		if(yerr>distance)
 80010a6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80010a8:	69bb      	ldr	r3, [r7, #24]
 80010aa:	429a      	cmp	r2, r3
 80010ac:	dd07      	ble.n	80010be <lcd_DrawLine+0xf0>
		{
			yerr-=distance;
 80010ae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80010b0:	69bb      	ldr	r3, [r7, #24]
 80010b2:	1ad3      	subs	r3, r2, r3
 80010b4:	627b      	str	r3, [r7, #36]	; 0x24
			uCol+=incy;
 80010b6:	68ba      	ldr	r2, [r7, #8]
 80010b8:	693b      	ldr	r3, [r7, #16]
 80010ba:	4413      	add	r3, r2
 80010bc:	60bb      	str	r3, [r7, #8]
	for(t=0;t<distance+1;t++)
 80010be:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 80010c0:	3301      	adds	r3, #1
 80010c2:	85fb      	strh	r3, [r7, #46]	; 0x2e
 80010c4:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 80010c6:	69ba      	ldr	r2, [r7, #24]
 80010c8:	429a      	cmp	r2, r3
 80010ca:	dacf      	bge.n	800106c <lcd_DrawLine+0x9e>
		}
	}
}
 80010cc:	bf00      	nop
 80010ce:	bf00      	nop
 80010d0:	3734      	adds	r7, #52	; 0x34
 80010d2:	46bd      	mov	sp, r7
 80010d4:	bd90      	pop	{r4, r7, pc}

080010d6 <lcd_DrawRectangle>:


void lcd_DrawRectangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2,uint16_t color) // ve hcn(vien
{
 80010d6:	b590      	push	{r4, r7, lr}
 80010d8:	b085      	sub	sp, #20
 80010da:	af02      	add	r7, sp, #8
 80010dc:	4604      	mov	r4, r0
 80010de:	4608      	mov	r0, r1
 80010e0:	4611      	mov	r1, r2
 80010e2:	461a      	mov	r2, r3
 80010e4:	4623      	mov	r3, r4
 80010e6:	80fb      	strh	r3, [r7, #6]
 80010e8:	4603      	mov	r3, r0
 80010ea:	80bb      	strh	r3, [r7, #4]
 80010ec:	460b      	mov	r3, r1
 80010ee:	807b      	strh	r3, [r7, #2]
 80010f0:	4613      	mov	r3, r2
 80010f2:	803b      	strh	r3, [r7, #0]
	lcd_DrawLine(x1,y1,x2,y1,color);
 80010f4:	88bc      	ldrh	r4, [r7, #4]
 80010f6:	887a      	ldrh	r2, [r7, #2]
 80010f8:	88b9      	ldrh	r1, [r7, #4]
 80010fa:	88f8      	ldrh	r0, [r7, #6]
 80010fc:	8b3b      	ldrh	r3, [r7, #24]
 80010fe:	9300      	str	r3, [sp, #0]
 8001100:	4623      	mov	r3, r4
 8001102:	f7ff ff64 	bl	8000fce <lcd_DrawLine>
	lcd_DrawLine(x1,y1,x1,y2,color);
 8001106:	883c      	ldrh	r4, [r7, #0]
 8001108:	88fa      	ldrh	r2, [r7, #6]
 800110a:	88b9      	ldrh	r1, [r7, #4]
 800110c:	88f8      	ldrh	r0, [r7, #6]
 800110e:	8b3b      	ldrh	r3, [r7, #24]
 8001110:	9300      	str	r3, [sp, #0]
 8001112:	4623      	mov	r3, r4
 8001114:	f7ff ff5b 	bl	8000fce <lcd_DrawLine>
	lcd_DrawLine(x1,y2,x2,y2,color);
 8001118:	883c      	ldrh	r4, [r7, #0]
 800111a:	887a      	ldrh	r2, [r7, #2]
 800111c:	8839      	ldrh	r1, [r7, #0]
 800111e:	88f8      	ldrh	r0, [r7, #6]
 8001120:	8b3b      	ldrh	r3, [r7, #24]
 8001122:	9300      	str	r3, [sp, #0]
 8001124:	4623      	mov	r3, r4
 8001126:	f7ff ff52 	bl	8000fce <lcd_DrawLine>
	lcd_DrawLine(x2,y1,x2,y2,color);
 800112a:	883c      	ldrh	r4, [r7, #0]
 800112c:	887a      	ldrh	r2, [r7, #2]
 800112e:	88b9      	ldrh	r1, [r7, #4]
 8001130:	8878      	ldrh	r0, [r7, #2]
 8001132:	8b3b      	ldrh	r3, [r7, #24]
 8001134:	9300      	str	r3, [sp, #0]
 8001136:	4623      	mov	r3, r4
 8001138:	f7ff ff49 	bl	8000fce <lcd_DrawLine>
}
 800113c:	bf00      	nop
 800113e:	370c      	adds	r7, #12
 8001140:	46bd      	mov	sp, r7
 8001142:	bd90      	pop	{r4, r7, pc}

08001144 <lcd_ShowChar>:

void lcd_ShowChar(uint16_t x,uint16_t y,uint8_t character,uint16_t fc,uint16_t bc,uint8_t sizey,uint8_t mode) // 1ky tu size = 12 16 24 32, fc: mau chuw, bc, mauf neefn, mode: hien neen
{
 8001144:	b590      	push	{r4, r7, lr}
 8001146:	b087      	sub	sp, #28
 8001148:	af00      	add	r7, sp, #0
 800114a:	4604      	mov	r4, r0
 800114c:	4608      	mov	r0, r1
 800114e:	4611      	mov	r1, r2
 8001150:	461a      	mov	r2, r3
 8001152:	4623      	mov	r3, r4
 8001154:	80fb      	strh	r3, [r7, #6]
 8001156:	4603      	mov	r3, r0
 8001158:	80bb      	strh	r3, [r7, #4]
 800115a:	460b      	mov	r3, r1
 800115c:	70fb      	strb	r3, [r7, #3]
 800115e:	4613      	mov	r3, r2
 8001160:	803b      	strh	r3, [r7, #0]
	uint8_t temp,sizex,t,m=0;
 8001162:	2300      	movs	r3, #0
 8001164:	757b      	strb	r3, [r7, #21]
	uint16_t i,TypefaceNum;
	uint16_t x0=x;
 8001166:	88fb      	ldrh	r3, [r7, #6]
 8001168:	823b      	strh	r3, [r7, #16]
	sizex=sizey/2;
 800116a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800116e:	085b      	lsrs	r3, r3, #1
 8001170:	73fb      	strb	r3, [r7, #15]
	TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
 8001172:	7bfb      	ldrb	r3, [r7, #15]
 8001174:	08db      	lsrs	r3, r3, #3
 8001176:	b2db      	uxtb	r3, r3
 8001178:	461a      	mov	r2, r3
 800117a:	7bfb      	ldrb	r3, [r7, #15]
 800117c:	f003 0307 	and.w	r3, r3, #7
 8001180:	b2db      	uxtb	r3, r3
 8001182:	2b00      	cmp	r3, #0
 8001184:	bf14      	ite	ne
 8001186:	2301      	movne	r3, #1
 8001188:	2300      	moveq	r3, #0
 800118a:	b2db      	uxtb	r3, r3
 800118c:	4413      	add	r3, r2
 800118e:	b29a      	uxth	r2, r3
 8001190:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001194:	b29b      	uxth	r3, r3
 8001196:	fb12 f303 	smulbb	r3, r2, r3
 800119a:	81bb      	strh	r3, [r7, #12]
	character=character-' ';
 800119c:	78fb      	ldrb	r3, [r7, #3]
 800119e:	3b20      	subs	r3, #32
 80011a0:	70fb      	strb	r3, [r7, #3]
	lcd_AddressSet(x,y,x+sizex-1,y+sizey-1);
 80011a2:	7bfb      	ldrb	r3, [r7, #15]
 80011a4:	b29a      	uxth	r2, r3
 80011a6:	88fb      	ldrh	r3, [r7, #6]
 80011a8:	4413      	add	r3, r2
 80011aa:	b29b      	uxth	r3, r3
 80011ac:	3b01      	subs	r3, #1
 80011ae:	b29c      	uxth	r4, r3
 80011b0:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80011b4:	b29a      	uxth	r2, r3
 80011b6:	88bb      	ldrh	r3, [r7, #4]
 80011b8:	4413      	add	r3, r2
 80011ba:	b29b      	uxth	r3, r3
 80011bc:	3b01      	subs	r3, #1
 80011be:	b29b      	uxth	r3, r3
 80011c0:	88b9      	ldrh	r1, [r7, #4]
 80011c2:	88f8      	ldrh	r0, [r7, #6]
 80011c4:	4622      	mov	r2, r4
 80011c6:	f7ff fe37 	bl	8000e38 <lcd_AddressSet>
	for(i=0;i<TypefaceNum;i++)
 80011ca:	2300      	movs	r3, #0
 80011cc:	827b      	strh	r3, [r7, #18]
 80011ce:	e07a      	b.n	80012c6 <lcd_ShowChar+0x182>
	{
		if(sizey==12);
 80011d0:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80011d4:	2b0c      	cmp	r3, #12
 80011d6:	d028      	beq.n	800122a <lcd_ShowChar+0xe6>
		else if(sizey==16)temp=ascii_1608[character][i];
 80011d8:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80011dc:	2b10      	cmp	r3, #16
 80011de:	d108      	bne.n	80011f2 <lcd_ShowChar+0xae>
 80011e0:	78fa      	ldrb	r2, [r7, #3]
 80011e2:	8a7b      	ldrh	r3, [r7, #18]
 80011e4:	493c      	ldr	r1, [pc, #240]	; (80012d8 <lcd_ShowChar+0x194>)
 80011e6:	0112      	lsls	r2, r2, #4
 80011e8:	440a      	add	r2, r1
 80011ea:	4413      	add	r3, r2
 80011ec:	781b      	ldrb	r3, [r3, #0]
 80011ee:	75fb      	strb	r3, [r7, #23]
 80011f0:	e01b      	b.n	800122a <lcd_ShowChar+0xe6>
		else if(sizey==24)temp=ascii_2412[character][i];
 80011f2:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80011f6:	2b18      	cmp	r3, #24
 80011f8:	d10b      	bne.n	8001212 <lcd_ShowChar+0xce>
 80011fa:	78fa      	ldrb	r2, [r7, #3]
 80011fc:	8a79      	ldrh	r1, [r7, #18]
 80011fe:	4837      	ldr	r0, [pc, #220]	; (80012dc <lcd_ShowChar+0x198>)
 8001200:	4613      	mov	r3, r2
 8001202:	005b      	lsls	r3, r3, #1
 8001204:	4413      	add	r3, r2
 8001206:	011b      	lsls	r3, r3, #4
 8001208:	4403      	add	r3, r0
 800120a:	440b      	add	r3, r1
 800120c:	781b      	ldrb	r3, [r3, #0]
 800120e:	75fb      	strb	r3, [r7, #23]
 8001210:	e00b      	b.n	800122a <lcd_ShowChar+0xe6>
		else if(sizey==32)temp=ascii_3216[character][i];
 8001212:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001216:	2b20      	cmp	r3, #32
 8001218:	d15a      	bne.n	80012d0 <lcd_ShowChar+0x18c>
 800121a:	78fa      	ldrb	r2, [r7, #3]
 800121c:	8a7b      	ldrh	r3, [r7, #18]
 800121e:	4930      	ldr	r1, [pc, #192]	; (80012e0 <lcd_ShowChar+0x19c>)
 8001220:	0192      	lsls	r2, r2, #6
 8001222:	440a      	add	r2, r1
 8001224:	4413      	add	r3, r2
 8001226:	781b      	ldrb	r3, [r3, #0]
 8001228:	75fb      	strb	r3, [r7, #23]
		else return;
		for(t=0;t<8;t++)
 800122a:	2300      	movs	r3, #0
 800122c:	75bb      	strb	r3, [r7, #22]
 800122e:	e044      	b.n	80012ba <lcd_ShowChar+0x176>
		{
			if(!mode)
 8001230:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 8001234:	2b00      	cmp	r3, #0
 8001236:	d120      	bne.n	800127a <lcd_ShowChar+0x136>
			{
				if(temp&(0x01<<t))LCD_WR_DATA(fc);
 8001238:	7dfa      	ldrb	r2, [r7, #23]
 800123a:	7dbb      	ldrb	r3, [r7, #22]
 800123c:	fa42 f303 	asr.w	r3, r2, r3
 8001240:	f003 0301 	and.w	r3, r3, #1
 8001244:	2b00      	cmp	r3, #0
 8001246:	d004      	beq.n	8001252 <lcd_ShowChar+0x10e>
 8001248:	883b      	ldrh	r3, [r7, #0]
 800124a:	4618      	mov	r0, r3
 800124c:	f7ff fdd2 	bl	8000df4 <LCD_WR_DATA>
 8001250:	e003      	b.n	800125a <lcd_ShowChar+0x116>
				else LCD_WR_DATA(bc);
 8001252:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001254:	4618      	mov	r0, r3
 8001256:	f7ff fdcd 	bl	8000df4 <LCD_WR_DATA>
				m++;
 800125a:	7d7b      	ldrb	r3, [r7, #21]
 800125c:	3301      	adds	r3, #1
 800125e:	757b      	strb	r3, [r7, #21]
				if(m%sizex==0)
 8001260:	7d7b      	ldrb	r3, [r7, #21]
 8001262:	7bfa      	ldrb	r2, [r7, #15]
 8001264:	fbb3 f1f2 	udiv	r1, r3, r2
 8001268:	fb02 f201 	mul.w	r2, r2, r1
 800126c:	1a9b      	subs	r3, r3, r2
 800126e:	b2db      	uxtb	r3, r3
 8001270:	2b00      	cmp	r3, #0
 8001272:	d11f      	bne.n	80012b4 <lcd_ShowChar+0x170>
				{
					m=0;
 8001274:	2300      	movs	r3, #0
 8001276:	757b      	strb	r3, [r7, #21]
					break;
 8001278:	e022      	b.n	80012c0 <lcd_ShowChar+0x17c>
				}
			}
			else
			{
				if(temp&(0x01<<t))lcd_DrawPoint(x,y,fc);
 800127a:	7dfa      	ldrb	r2, [r7, #23]
 800127c:	7dbb      	ldrb	r3, [r7, #22]
 800127e:	fa42 f303 	asr.w	r3, r2, r3
 8001282:	f003 0301 	and.w	r3, r3, #1
 8001286:	2b00      	cmp	r3, #0
 8001288:	d005      	beq.n	8001296 <lcd_ShowChar+0x152>
 800128a:	883a      	ldrh	r2, [r7, #0]
 800128c:	88b9      	ldrh	r1, [r7, #4]
 800128e:	88fb      	ldrh	r3, [r7, #6]
 8001290:	4618      	mov	r0, r3
 8001292:	f7ff fe85 	bl	8000fa0 <lcd_DrawPoint>
				x++;
 8001296:	88fb      	ldrh	r3, [r7, #6]
 8001298:	3301      	adds	r3, #1
 800129a:	80fb      	strh	r3, [r7, #6]
				if((x-x0)==sizex)
 800129c:	88fa      	ldrh	r2, [r7, #6]
 800129e:	8a3b      	ldrh	r3, [r7, #16]
 80012a0:	1ad2      	subs	r2, r2, r3
 80012a2:	7bfb      	ldrb	r3, [r7, #15]
 80012a4:	429a      	cmp	r2, r3
 80012a6:	d105      	bne.n	80012b4 <lcd_ShowChar+0x170>
				{
					x=x0;
 80012a8:	8a3b      	ldrh	r3, [r7, #16]
 80012aa:	80fb      	strh	r3, [r7, #6]
					y++;
 80012ac:	88bb      	ldrh	r3, [r7, #4]
 80012ae:	3301      	adds	r3, #1
 80012b0:	80bb      	strh	r3, [r7, #4]
					break;
 80012b2:	e005      	b.n	80012c0 <lcd_ShowChar+0x17c>
		for(t=0;t<8;t++)
 80012b4:	7dbb      	ldrb	r3, [r7, #22]
 80012b6:	3301      	adds	r3, #1
 80012b8:	75bb      	strb	r3, [r7, #22]
 80012ba:	7dbb      	ldrb	r3, [r7, #22]
 80012bc:	2b07      	cmp	r3, #7
 80012be:	d9b7      	bls.n	8001230 <lcd_ShowChar+0xec>
	for(i=0;i<TypefaceNum;i++)
 80012c0:	8a7b      	ldrh	r3, [r7, #18]
 80012c2:	3301      	adds	r3, #1
 80012c4:	827b      	strh	r3, [r7, #18]
 80012c6:	8a7a      	ldrh	r2, [r7, #18]
 80012c8:	89bb      	ldrh	r3, [r7, #12]
 80012ca:	429a      	cmp	r2, r3
 80012cc:	d380      	bcc.n	80011d0 <lcd_ShowChar+0x8c>
 80012ce:	e000      	b.n	80012d2 <lcd_ShowChar+0x18e>
		else return;
 80012d0:	bf00      	nop
				}
			}
		}
	}
}
 80012d2:	371c      	adds	r7, #28
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd90      	pop	{r4, r7, pc}
 80012d8:	08008738 	.word	0x08008738
 80012dc:	08008d28 	.word	0x08008d28
 80012e0:	08009ef8 	.word	0x08009ef8

080012e4 <mypow>:

uint32_t mypow(uint8_t m,uint8_t n)
{
 80012e4:	b480      	push	{r7}
 80012e6:	b085      	sub	sp, #20
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	4603      	mov	r3, r0
 80012ec:	460a      	mov	r2, r1
 80012ee:	71fb      	strb	r3, [r7, #7]
 80012f0:	4613      	mov	r3, r2
 80012f2:	71bb      	strb	r3, [r7, #6]
	uint32_t result=1;
 80012f4:	2301      	movs	r3, #1
 80012f6:	60fb      	str	r3, [r7, #12]
	while(n--)result*=m;
 80012f8:	e004      	b.n	8001304 <mypow+0x20>
 80012fa:	79fa      	ldrb	r2, [r7, #7]
 80012fc:	68fb      	ldr	r3, [r7, #12]
 80012fe:	fb02 f303 	mul.w	r3, r2, r3
 8001302:	60fb      	str	r3, [r7, #12]
 8001304:	79bb      	ldrb	r3, [r7, #6]
 8001306:	1e5a      	subs	r2, r3, #1
 8001308:	71ba      	strb	r2, [r7, #6]
 800130a:	2b00      	cmp	r3, #0
 800130c:	d1f5      	bne.n	80012fa <mypow+0x16>
	return result;
 800130e:	68fb      	ldr	r3, [r7, #12]
}
 8001310:	4618      	mov	r0, r3
 8001312:	3714      	adds	r7, #20
 8001314:	46bd      	mov	sp, r7
 8001316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800131a:	4770      	bx	lr

0800131c <lcd_ShowIntNum>:

void lcd_ShowIntNum(uint16_t x,uint16_t y,uint16_t num,uint8_t len,uint16_t fc,uint16_t bc,uint8_t sizey) //len: ddooj daif cuar so
{
 800131c:	b590      	push	{r4, r7, lr}
 800131e:	b089      	sub	sp, #36	; 0x24
 8001320:	af04      	add	r7, sp, #16
 8001322:	4604      	mov	r4, r0
 8001324:	4608      	mov	r0, r1
 8001326:	4611      	mov	r1, r2
 8001328:	461a      	mov	r2, r3
 800132a:	4623      	mov	r3, r4
 800132c:	80fb      	strh	r3, [r7, #6]
 800132e:	4603      	mov	r3, r0
 8001330:	80bb      	strh	r3, [r7, #4]
 8001332:	460b      	mov	r3, r1
 8001334:	807b      	strh	r3, [r7, #2]
 8001336:	4613      	mov	r3, r2
 8001338:	707b      	strb	r3, [r7, #1]
	uint8_t t,temp;
	uint8_t enshow=0;
 800133a:	2300      	movs	r3, #0
 800133c:	73bb      	strb	r3, [r7, #14]
	uint8_t sizex=sizey/2;
 800133e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8001342:	085b      	lsrs	r3, r3, #1
 8001344:	737b      	strb	r3, [r7, #13]
	for(t=0;t<len;t++)
 8001346:	2300      	movs	r3, #0
 8001348:	73fb      	strb	r3, [r7, #15]
 800134a:	e059      	b.n	8001400 <lcd_ShowIntNum+0xe4>
	{
		temp=(num/mypow(10,len-t-1))%10;
 800134c:	887c      	ldrh	r4, [r7, #2]
 800134e:	787a      	ldrb	r2, [r7, #1]
 8001350:	7bfb      	ldrb	r3, [r7, #15]
 8001352:	1ad3      	subs	r3, r2, r3
 8001354:	b2db      	uxtb	r3, r3
 8001356:	3b01      	subs	r3, #1
 8001358:	b2db      	uxtb	r3, r3
 800135a:	4619      	mov	r1, r3
 800135c:	200a      	movs	r0, #10
 800135e:	f7ff ffc1 	bl	80012e4 <mypow>
 8001362:	4603      	mov	r3, r0
 8001364:	fbb4 f1f3 	udiv	r1, r4, r3
 8001368:	4b2a      	ldr	r3, [pc, #168]	; (8001414 <lcd_ShowIntNum+0xf8>)
 800136a:	fba3 2301 	umull	r2, r3, r3, r1
 800136e:	08da      	lsrs	r2, r3, #3
 8001370:	4613      	mov	r3, r2
 8001372:	009b      	lsls	r3, r3, #2
 8001374:	4413      	add	r3, r2
 8001376:	005b      	lsls	r3, r3, #1
 8001378:	1aca      	subs	r2, r1, r3
 800137a:	4613      	mov	r3, r2
 800137c:	733b      	strb	r3, [r7, #12]
		if(enshow==0&&t<(len-1))
 800137e:	7bbb      	ldrb	r3, [r7, #14]
 8001380:	2b00      	cmp	r3, #0
 8001382:	d121      	bne.n	80013c8 <lcd_ShowIntNum+0xac>
 8001384:	7bfa      	ldrb	r2, [r7, #15]
 8001386:	787b      	ldrb	r3, [r7, #1]
 8001388:	3b01      	subs	r3, #1
 800138a:	429a      	cmp	r2, r3
 800138c:	da1c      	bge.n	80013c8 <lcd_ShowIntNum+0xac>
		{
			if(temp==0)
 800138e:	7b3b      	ldrb	r3, [r7, #12]
 8001390:	2b00      	cmp	r3, #0
 8001392:	d117      	bne.n	80013c4 <lcd_ShowIntNum+0xa8>
			{
				lcd_ShowChar(x+t*sizex,y,' ',fc,bc,sizey,0);
 8001394:	7bfb      	ldrb	r3, [r7, #15]
 8001396:	b29a      	uxth	r2, r3
 8001398:	7b7b      	ldrb	r3, [r7, #13]
 800139a:	b29b      	uxth	r3, r3
 800139c:	fb12 f303 	smulbb	r3, r2, r3
 80013a0:	b29a      	uxth	r2, r3
 80013a2:	88fb      	ldrh	r3, [r7, #6]
 80013a4:	4413      	add	r3, r2
 80013a6:	b298      	uxth	r0, r3
 80013a8:	8c3a      	ldrh	r2, [r7, #32]
 80013aa:	88b9      	ldrh	r1, [r7, #4]
 80013ac:	2300      	movs	r3, #0
 80013ae:	9302      	str	r3, [sp, #8]
 80013b0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80013b4:	9301      	str	r3, [sp, #4]
 80013b6:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80013b8:	9300      	str	r3, [sp, #0]
 80013ba:	4613      	mov	r3, r2
 80013bc:	2220      	movs	r2, #32
 80013be:	f7ff fec1 	bl	8001144 <lcd_ShowChar>
				continue;
 80013c2:	e01a      	b.n	80013fa <lcd_ShowIntNum+0xde>
			}else enshow=1;
 80013c4:	2301      	movs	r3, #1
 80013c6:	73bb      	strb	r3, [r7, #14]

		}
	 	lcd_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 80013c8:	7bfb      	ldrb	r3, [r7, #15]
 80013ca:	b29a      	uxth	r2, r3
 80013cc:	7b7b      	ldrb	r3, [r7, #13]
 80013ce:	b29b      	uxth	r3, r3
 80013d0:	fb12 f303 	smulbb	r3, r2, r3
 80013d4:	b29a      	uxth	r2, r3
 80013d6:	88fb      	ldrh	r3, [r7, #6]
 80013d8:	4413      	add	r3, r2
 80013da:	b298      	uxth	r0, r3
 80013dc:	7b3b      	ldrb	r3, [r7, #12]
 80013de:	3330      	adds	r3, #48	; 0x30
 80013e0:	b2da      	uxtb	r2, r3
 80013e2:	8c3c      	ldrh	r4, [r7, #32]
 80013e4:	88b9      	ldrh	r1, [r7, #4]
 80013e6:	2300      	movs	r3, #0
 80013e8:	9302      	str	r3, [sp, #8]
 80013ea:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80013ee:	9301      	str	r3, [sp, #4]
 80013f0:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80013f2:	9300      	str	r3, [sp, #0]
 80013f4:	4623      	mov	r3, r4
 80013f6:	f7ff fea5 	bl	8001144 <lcd_ShowChar>
	for(t=0;t<len;t++)
 80013fa:	7bfb      	ldrb	r3, [r7, #15]
 80013fc:	3301      	adds	r3, #1
 80013fe:	73fb      	strb	r3, [r7, #15]
 8001400:	7bfa      	ldrb	r2, [r7, #15]
 8001402:	787b      	ldrb	r3, [r7, #1]
 8001404:	429a      	cmp	r2, r3
 8001406:	d3a1      	bcc.n	800134c <lcd_ShowIntNum+0x30>
	}
}
 8001408:	bf00      	nop
 800140a:	bf00      	nop
 800140c:	3714      	adds	r7, #20
 800140e:	46bd      	mov	sp, r7
 8001410:	bd90      	pop	{r4, r7, pc}
 8001412:	bf00      	nop
 8001414:	cccccccd 	.word	0xcccccccd

08001418 <lcd_SetDir>:
}



void lcd_SetDir(uint8_t dir) //chinh huong man hinh
{
 8001418:	b480      	push	{r7}
 800141a:	b083      	sub	sp, #12
 800141c:	af00      	add	r7, sp, #0
 800141e:	4603      	mov	r3, r0
 8001420:	71fb      	strb	r3, [r7, #7]
	if((dir>>4)%4)
 8001422:	79fb      	ldrb	r3, [r7, #7]
 8001424:	091b      	lsrs	r3, r3, #4
 8001426:	b2db      	uxtb	r3, r3
 8001428:	f003 0303 	and.w	r3, r3, #3
 800142c:	b2db      	uxtb	r3, r3
 800142e:	2b00      	cmp	r3, #0
 8001430:	d007      	beq.n	8001442 <lcd_SetDir+0x2a>
	{
		lcddev.width=320;
 8001432:	4b0a      	ldr	r3, [pc, #40]	; (800145c <lcd_SetDir+0x44>)
 8001434:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001438:	801a      	strh	r2, [r3, #0]
		lcddev.height=240;
 800143a:	4b08      	ldr	r3, [pc, #32]	; (800145c <lcd_SetDir+0x44>)
 800143c:	22f0      	movs	r2, #240	; 0xf0
 800143e:	805a      	strh	r2, [r3, #2]
	}else
	{
		lcddev.width=240;
		lcddev.height=320;
	}
}
 8001440:	e006      	b.n	8001450 <lcd_SetDir+0x38>
		lcddev.width=240;
 8001442:	4b06      	ldr	r3, [pc, #24]	; (800145c <lcd_SetDir+0x44>)
 8001444:	22f0      	movs	r2, #240	; 0xf0
 8001446:	801a      	strh	r2, [r3, #0]
		lcddev.height=320;
 8001448:	4b04      	ldr	r3, [pc, #16]	; (800145c <lcd_SetDir+0x44>)
 800144a:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800144e:	805a      	strh	r2, [r3, #2]
}
 8001450:	bf00      	nop
 8001452:	370c      	adds	r7, #12
 8001454:	46bd      	mov	sp, r7
 8001456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145a:	4770      	bx	lr
 800145c:	20000240 	.word	0x20000240

08001460 <lcd_init>:


void lcd_init(void)
{
 8001460:	b580      	push	{r7, lr}
 8001462:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(FSMC_RES_GPIO_Port, FSMC_RES_Pin, GPIO_PIN_RESET);
 8001464:	2200      	movs	r2, #0
 8001466:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800146a:	48aa      	ldr	r0, [pc, #680]	; (8001714 <lcd_init+0x2b4>)
 800146c:	f002 fcf0 	bl	8003e50 <HAL_GPIO_WritePin>
	HAL_Delay(500);
 8001470:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001474:	f001 fc3c 	bl	8002cf0 <HAL_Delay>
	HAL_GPIO_WritePin(FSMC_RES_GPIO_Port, FSMC_RES_Pin, GPIO_PIN_SET);
 8001478:	2201      	movs	r2, #1
 800147a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800147e:	48a5      	ldr	r0, [pc, #660]	; (8001714 <lcd_init+0x2b4>)
 8001480:	f002 fce6 	bl	8003e50 <HAL_GPIO_WritePin>
	HAL_Delay(500);
 8001484:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001488:	f001 fc32 	bl	8002cf0 <HAL_Delay>
	lcd_SetDir(DFT_SCAN_DIR);
 800148c:	2000      	movs	r0, #0
 800148e:	f7ff ffc3 	bl	8001418 <lcd_SetDir>
	LCD_WR_REG(0XD3);
 8001492:	20d3      	movs	r0, #211	; 0xd3
 8001494:	f7ff fc9e 	bl	8000dd4 <LCD_WR_REG>
	lcddev.id=LCD_RD_DATA();	//dummy read
 8001498:	f7ff fcbc 	bl	8000e14 <LCD_RD_DATA>
 800149c:	4603      	mov	r3, r0
 800149e:	461a      	mov	r2, r3
 80014a0:	4b9d      	ldr	r3, [pc, #628]	; (8001718 <lcd_init+0x2b8>)
 80014a2:	809a      	strh	r2, [r3, #4]
	lcddev.id=LCD_RD_DATA();
 80014a4:	f7ff fcb6 	bl	8000e14 <LCD_RD_DATA>
 80014a8:	4603      	mov	r3, r0
 80014aa:	461a      	mov	r2, r3
 80014ac:	4b9a      	ldr	r3, [pc, #616]	; (8001718 <lcd_init+0x2b8>)
 80014ae:	809a      	strh	r2, [r3, #4]
	lcddev.id=LCD_RD_DATA();
 80014b0:	f7ff fcb0 	bl	8000e14 <LCD_RD_DATA>
 80014b4:	4603      	mov	r3, r0
 80014b6:	461a      	mov	r2, r3
 80014b8:	4b97      	ldr	r3, [pc, #604]	; (8001718 <lcd_init+0x2b8>)
 80014ba:	809a      	strh	r2, [r3, #4]
	lcddev.id<<=8;
 80014bc:	4b96      	ldr	r3, [pc, #600]	; (8001718 <lcd_init+0x2b8>)
 80014be:	889b      	ldrh	r3, [r3, #4]
 80014c0:	021b      	lsls	r3, r3, #8
 80014c2:	b29a      	uxth	r2, r3
 80014c4:	4b94      	ldr	r3, [pc, #592]	; (8001718 <lcd_init+0x2b8>)
 80014c6:	809a      	strh	r2, [r3, #4]
	lcddev.id|=LCD_RD_DATA();
 80014c8:	f7ff fca4 	bl	8000e14 <LCD_RD_DATA>
 80014cc:	4603      	mov	r3, r0
 80014ce:	461a      	mov	r2, r3
 80014d0:	4b91      	ldr	r3, [pc, #580]	; (8001718 <lcd_init+0x2b8>)
 80014d2:	889b      	ldrh	r3, [r3, #4]
 80014d4:	4313      	orrs	r3, r2
 80014d6:	b29a      	uxth	r2, r3
 80014d8:	4b8f      	ldr	r3, [pc, #572]	; (8001718 <lcd_init+0x2b8>)
 80014da:	809a      	strh	r2, [r3, #4]

	LCD_WR_REG(0xCF);
 80014dc:	20cf      	movs	r0, #207	; 0xcf
 80014de:	f7ff fc79 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80014e2:	2000      	movs	r0, #0
 80014e4:	f7ff fc86 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80014e8:	20c1      	movs	r0, #193	; 0xc1
 80014ea:	f7ff fc83 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0X30);
 80014ee:	2030      	movs	r0, #48	; 0x30
 80014f0:	f7ff fc80 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xED);
 80014f4:	20ed      	movs	r0, #237	; 0xed
 80014f6:	f7ff fc6d 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 80014fa:	2064      	movs	r0, #100	; 0x64
 80014fc:	f7ff fc7a 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8001500:	2003      	movs	r0, #3
 8001502:	f7ff fc77 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0X12);
 8001506:	2012      	movs	r0, #18
 8001508:	f7ff fc74 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0X81);
 800150c:	2081      	movs	r0, #129	; 0x81
 800150e:	f7ff fc71 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xE8);
 8001512:	20e8      	movs	r0, #232	; 0xe8
 8001514:	f7ff fc5e 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 8001518:	2085      	movs	r0, #133	; 0x85
 800151a:	f7ff fc6b 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800151e:	2010      	movs	r0, #16
 8001520:	f7ff fc68 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x7A);
 8001524:	207a      	movs	r0, #122	; 0x7a
 8001526:	f7ff fc65 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xCB);
 800152a:	20cb      	movs	r0, #203	; 0xcb
 800152c:	f7ff fc52 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 8001530:	2039      	movs	r0, #57	; 0x39
 8001532:	f7ff fc5f 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 8001536:	202c      	movs	r0, #44	; 0x2c
 8001538:	f7ff fc5c 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800153c:	2000      	movs	r0, #0
 800153e:	f7ff fc59 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 8001542:	2034      	movs	r0, #52	; 0x34
 8001544:	f7ff fc56 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 8001548:	2002      	movs	r0, #2
 800154a:	f7ff fc53 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xF7);
 800154e:	20f7      	movs	r0, #247	; 0xf7
 8001550:	f7ff fc40 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8001554:	2020      	movs	r0, #32
 8001556:	f7ff fc4d 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xEA);
 800155a:	20ea      	movs	r0, #234	; 0xea
 800155c:	f7ff fc3a 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8001560:	2000      	movs	r0, #0
 8001562:	f7ff fc47 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8001566:	2000      	movs	r0, #0
 8001568:	f7ff fc44 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xC0);    //Power control
 800156c:	20c0      	movs	r0, #192	; 0xc0
 800156e:	f7ff fc31 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x1B);   //VRH[5:0]
 8001572:	201b      	movs	r0, #27
 8001574:	f7ff fc3e 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xC1);    //Power control
 8001578:	20c1      	movs	r0, #193	; 0xc1
 800157a:	f7ff fc2b 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x01);   //SAP[2:0];BT[3:0]
 800157e:	2001      	movs	r0, #1
 8001580:	f7ff fc38 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xC5);    //VCM control
 8001584:	20c5      	movs	r0, #197	; 0xc5
 8001586:	f7ff fc25 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x30); 	 //3F
 800158a:	2030      	movs	r0, #48	; 0x30
 800158c:	f7ff fc32 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x30); 	 //3C
 8001590:	2030      	movs	r0, #48	; 0x30
 8001592:	f7ff fc2f 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xC7);    //VCM control2
 8001596:	20c7      	movs	r0, #199	; 0xc7
 8001598:	f7ff fc1c 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0XB7);
 800159c:	20b7      	movs	r0, #183	; 0xb7
 800159e:	f7ff fc29 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x36);    // Memory Access Control
 80015a2:	2036      	movs	r0, #54	; 0x36
 80015a4:	f7ff fc16 	bl	8000dd4 <LCD_WR_REG>

	LCD_WR_DATA(0x08|DFT_SCAN_DIR);
 80015a8:	2008      	movs	r0, #8
 80015aa:	f7ff fc23 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x3A);
 80015ae:	203a      	movs	r0, #58	; 0x3a
 80015b0:	f7ff fc10 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x55);
 80015b4:	2055      	movs	r0, #85	; 0x55
 80015b6:	f7ff fc1d 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 80015ba:	20b1      	movs	r0, #177	; 0xb1
 80015bc:	f7ff fc0a 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80015c0:	2000      	movs	r0, #0
 80015c2:	f7ff fc17 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x1A);
 80015c6:	201a      	movs	r0, #26
 80015c8:	f7ff fc14 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xB6);    // Display Function Control
 80015cc:	20b6      	movs	r0, #182	; 0xb6
 80015ce:	f7ff fc01 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x0A);
 80015d2:	200a      	movs	r0, #10
 80015d4:	f7ff fc0e 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0xA2);
 80015d8:	20a2      	movs	r0, #162	; 0xa2
 80015da:	f7ff fc0b 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xF2);    // 3Gamma Function Disable
 80015de:	20f2      	movs	r0, #242	; 0xf2
 80015e0:	f7ff fbf8 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80015e4:	2000      	movs	r0, #0
 80015e6:	f7ff fc05 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x26);    //Gamma curve selected
 80015ea:	2026      	movs	r0, #38	; 0x26
 80015ec:	f7ff fbf2 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x01);
 80015f0:	2001      	movs	r0, #1
 80015f2:	f7ff fbff 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0xE0);    //Set Gamma
 80015f6:	20e0      	movs	r0, #224	; 0xe0
 80015f8:	f7ff fbec 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80015fc:	200f      	movs	r0, #15
 80015fe:	f7ff fbf9 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x2A);
 8001602:	202a      	movs	r0, #42	; 0x2a
 8001604:	f7ff fbf6 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8001608:	2028      	movs	r0, #40	; 0x28
 800160a:	f7ff fbf3 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 800160e:	2008      	movs	r0, #8
 8001610:	f7ff fbf0 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8001614:	200e      	movs	r0, #14
 8001616:	f7ff fbed 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 800161a:	2008      	movs	r0, #8
 800161c:	f7ff fbea 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x54);
 8001620:	2054      	movs	r0, #84	; 0x54
 8001622:	f7ff fbe7 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0XA9);
 8001626:	20a9      	movs	r0, #169	; 0xa9
 8001628:	f7ff fbe4 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x43);
 800162c:	2043      	movs	r0, #67	; 0x43
 800162e:	f7ff fbe1 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x0A);
 8001632:	200a      	movs	r0, #10
 8001634:	f7ff fbde 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8001638:	200f      	movs	r0, #15
 800163a:	f7ff fbdb 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800163e:	2000      	movs	r0, #0
 8001640:	f7ff fbd8 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8001644:	2000      	movs	r0, #0
 8001646:	f7ff fbd5 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800164a:	2000      	movs	r0, #0
 800164c:	f7ff fbd2 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8001650:	2000      	movs	r0, #0
 8001652:	f7ff fbcf 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0XE1);    //Set Gamma
 8001656:	20e1      	movs	r0, #225	; 0xe1
 8001658:	f7ff fbbc 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800165c:	2000      	movs	r0, #0
 800165e:	f7ff fbc9 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x15);
 8001662:	2015      	movs	r0, #21
 8001664:	f7ff fbc6 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x17);
 8001668:	2017      	movs	r0, #23
 800166a:	f7ff fbc3 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 800166e:	2007      	movs	r0, #7
 8001670:	f7ff fbc0 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 8001674:	2011      	movs	r0, #17
 8001676:	f7ff fbbd 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x06);
 800167a:	2006      	movs	r0, #6
 800167c:	f7ff fbba 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 8001680:	202b      	movs	r0, #43	; 0x2b
 8001682:	f7ff fbb7 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x56);
 8001686:	2056      	movs	r0, #86	; 0x56
 8001688:	f7ff fbb4 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x3C);
 800168c:	203c      	movs	r0, #60	; 0x3c
 800168e:	f7ff fbb1 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x05);
 8001692:	2005      	movs	r0, #5
 8001694:	f7ff fbae 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 8001698:	2010      	movs	r0, #16
 800169a:	f7ff fbab 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800169e:	200f      	movs	r0, #15
 80016a0:	f7ff fba8 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x3F);
 80016a4:	203f      	movs	r0, #63	; 0x3f
 80016a6:	f7ff fba5 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x3F);
 80016aa:	203f      	movs	r0, #63	; 0x3f
 80016ac:	f7ff fba2 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 80016b0:	200f      	movs	r0, #15
 80016b2:	f7ff fb9f 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x2B);
 80016b6:	202b      	movs	r0, #43	; 0x2b
 80016b8:	f7ff fb8c 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80016bc:	2000      	movs	r0, #0
 80016be:	f7ff fb99 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80016c2:	2000      	movs	r0, #0
 80016c4:	f7ff fb96 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
 80016c8:	2001      	movs	r0, #1
 80016ca:	f7ff fb93 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x3f);
 80016ce:	203f      	movs	r0, #63	; 0x3f
 80016d0:	f7ff fb90 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x2A);
 80016d4:	202a      	movs	r0, #42	; 0x2a
 80016d6:	f7ff fb7d 	bl	8000dd4 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80016da:	2000      	movs	r0, #0
 80016dc:	f7ff fb8a 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80016e0:	2000      	movs	r0, #0
 80016e2:	f7ff fb87 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80016e6:	2000      	movs	r0, #0
 80016e8:	f7ff fb84 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_DATA(0xef);
 80016ec:	20ef      	movs	r0, #239	; 0xef
 80016ee:	f7ff fb81 	bl	8000df4 <LCD_WR_DATA>
	LCD_WR_REG(0x11); //Exit Sleep
 80016f2:	2011      	movs	r0, #17
 80016f4:	f7ff fb6e 	bl	8000dd4 <LCD_WR_REG>
	HAL_Delay(120);
 80016f8:	2078      	movs	r0, #120	; 0x78
 80016fa:	f001 faf9 	bl	8002cf0 <HAL_Delay>
	LCD_WR_REG(0x29); //display on
 80016fe:	2029      	movs	r0, #41	; 0x29
 8001700:	f7ff fb68 	bl	8000dd4 <LCD_WR_REG>
	HAL_GPIO_WritePin(FSMC_BLK_GPIO_Port, FSMC_BLK_Pin, 1);
 8001704:	2201      	movs	r2, #1
 8001706:	f44f 7180 	mov.w	r1, #256	; 0x100
 800170a:	4804      	ldr	r0, [pc, #16]	; (800171c <lcd_init+0x2bc>)
 800170c:	f002 fba0 	bl	8003e50 <HAL_GPIO_WritePin>
}
 8001710:	bf00      	nop
 8001712:	bd80      	pop	{r7, pc}
 8001714:	40020800 	.word	0x40020800
 8001718:	20000240 	.word	0x20000240
 800171c:	40020000 	.word	0x40020000

08001720 <lcd_ShowStr>:
		}
	}
}

void lcd_ShowStr(uint16_t x, uint16_t y,char *str,uint16_t fc, uint16_t bc,uint8_t sizey,uint8_t mode)
{
 8001720:	b590      	push	{r4, r7, lr}
 8001722:	b08b      	sub	sp, #44	; 0x2c
 8001724:	af04      	add	r7, sp, #16
 8001726:	60ba      	str	r2, [r7, #8]
 8001728:	461a      	mov	r2, r3
 800172a:	4603      	mov	r3, r0
 800172c:	81fb      	strh	r3, [r7, #14]
 800172e:	460b      	mov	r3, r1
 8001730:	81bb      	strh	r3, [r7, #12]
 8001732:	4613      	mov	r3, r2
 8001734:	80fb      	strh	r3, [r7, #6]
	uint16_t x0=x;
 8001736:	89fb      	ldrh	r3, [r7, #14]
 8001738:	82bb      	strh	r3, [r7, #20]
    uint8_t bHz=0;
 800173a:	2300      	movs	r3, #0
 800173c:	75fb      	strb	r3, [r7, #23]
	while(*str!=0)
 800173e:	e048      	b.n	80017d2 <lcd_ShowStr+0xb2>
	{
		if(!bHz)
 8001740:	7dfb      	ldrb	r3, [r7, #23]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d145      	bne.n	80017d2 <lcd_ShowStr+0xb2>
		{
			if(x>(lcddev.width-sizey/2)||y>(lcddev.height-sizey)) return;
 8001746:	89fa      	ldrh	r2, [r7, #14]
 8001748:	4b26      	ldr	r3, [pc, #152]	; (80017e4 <lcd_ShowStr+0xc4>)
 800174a:	881b      	ldrh	r3, [r3, #0]
 800174c:	4619      	mov	r1, r3
 800174e:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001752:	085b      	lsrs	r3, r3, #1
 8001754:	b2db      	uxtb	r3, r3
 8001756:	1acb      	subs	r3, r1, r3
 8001758:	429a      	cmp	r2, r3
 800175a:	dc3f      	bgt.n	80017dc <lcd_ShowStr+0xbc>
 800175c:	89ba      	ldrh	r2, [r7, #12]
 800175e:	4b21      	ldr	r3, [pc, #132]	; (80017e4 <lcd_ShowStr+0xc4>)
 8001760:	885b      	ldrh	r3, [r3, #2]
 8001762:	4619      	mov	r1, r3
 8001764:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001768:	1acb      	subs	r3, r1, r3
 800176a:	429a      	cmp	r2, r3
 800176c:	dc36      	bgt.n	80017dc <lcd_ShowStr+0xbc>
			if(*str>0x80)bHz=1;
 800176e:	68bb      	ldr	r3, [r7, #8]
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	2b80      	cmp	r3, #128	; 0x80
 8001774:	d902      	bls.n	800177c <lcd_ShowStr+0x5c>
 8001776:	2301      	movs	r3, #1
 8001778:	75fb      	strb	r3, [r7, #23]
 800177a:	e02a      	b.n	80017d2 <lcd_ShowStr+0xb2>
			else
			{
				if(*str==0x0D)
 800177c:	68bb      	ldr	r3, [r7, #8]
 800177e:	781b      	ldrb	r3, [r3, #0]
 8001780:	2b0d      	cmp	r3, #13
 8001782:	d10b      	bne.n	800179c <lcd_ShowStr+0x7c>
				{
					y+=sizey;
 8001784:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001788:	b29a      	uxth	r2, r3
 800178a:	89bb      	ldrh	r3, [r7, #12]
 800178c:	4413      	add	r3, r2
 800178e:	81bb      	strh	r3, [r7, #12]
					x=x0;
 8001790:	8abb      	ldrh	r3, [r7, #20]
 8001792:	81fb      	strh	r3, [r7, #14]
					str++;
 8001794:	68bb      	ldr	r3, [r7, #8]
 8001796:	3301      	adds	r3, #1
 8001798:	60bb      	str	r3, [r7, #8]
 800179a:	e017      	b.n	80017cc <lcd_ShowStr+0xac>
				}else
				{
					lcd_ShowChar(x,y,*str,fc,bc,sizey,mode);
 800179c:	68bb      	ldr	r3, [r7, #8]
 800179e:	781a      	ldrb	r2, [r3, #0]
 80017a0:	88fc      	ldrh	r4, [r7, #6]
 80017a2:	89b9      	ldrh	r1, [r7, #12]
 80017a4:	89f8      	ldrh	r0, [r7, #14]
 80017a6:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 80017aa:	9302      	str	r3, [sp, #8]
 80017ac:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80017b0:	9301      	str	r3, [sp, #4]
 80017b2:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80017b4:	9300      	str	r3, [sp, #0]
 80017b6:	4623      	mov	r3, r4
 80017b8:	f7ff fcc4 	bl	8001144 <lcd_ShowChar>
					x+=sizey/2;
 80017bc:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80017c0:	085b      	lsrs	r3, r3, #1
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	b29a      	uxth	r2, r3
 80017c6:	89fb      	ldrh	r3, [r7, #14]
 80017c8:	4413      	add	r3, r2
 80017ca:	81fb      	strh	r3, [r7, #14]
				}
			  str++;
 80017cc:	68bb      	ldr	r3, [r7, #8]
 80017ce:	3301      	adds	r3, #1
 80017d0:	60bb      	str	r3, [r7, #8]
	while(*str!=0)
 80017d2:	68bb      	ldr	r3, [r7, #8]
 80017d4:	781b      	ldrb	r3, [r3, #0]
 80017d6:	2b00      	cmp	r3, #0
 80017d8:	d1b2      	bne.n	8001740 <lcd_ShowStr+0x20>
 80017da:	e000      	b.n	80017de <lcd_ShowStr+0xbe>
			if(x>(lcddev.width-sizey/2)||y>(lcddev.height-sizey)) return;
 80017dc:	bf00      	nop
			}
		}
	}
}
 80017de:	371c      	adds	r7, #28
 80017e0:	46bd      	mov	sp, r7
 80017e2:	bd90      	pop	{r4, r7, pc}
 80017e4:	20000240 	.word	0x20000240

080017e8 <led7_init>:
uint8_t arrayOfNum[10] = {0x03, 0x9f, 0x25, 0x0d, 0x99, 0x49, 0x41, 0x1f, 0x01, 0x09};// 9 numbers
uint16_t spi_buffer = 0xffff;

int led7_index = 0;

void led7_init(){
 80017e8:	b580      	push	{r7, lr}
 80017ea:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 1);
 80017ec:	2201      	movs	r2, #1
 80017ee:	2140      	movs	r1, #64	; 0x40
 80017f0:	4802      	ldr	r0, [pc, #8]	; (80017fc <led7_init+0x14>)
 80017f2:	f002 fb2d 	bl	8003e50 <HAL_GPIO_WritePin>
}
 80017f6:	bf00      	nop
 80017f8:	bd80      	pop	{r7, pc}
 80017fa:	bf00      	nop
 80017fc:	40021800 	.word	0x40021800

08001800 <led7_Scan>:

void led7_Scan(){
 8001800:	b580      	push	{r7, lr}
 8001802:	af00      	add	r7, sp, #0
	spi_buffer &= 0x00ff;
 8001804:	4b3f      	ldr	r3, [pc, #252]	; (8001904 <led7_Scan+0x104>)
 8001806:	881b      	ldrh	r3, [r3, #0]
 8001808:	b2db      	uxtb	r3, r3
 800180a:	b29a      	uxth	r2, r3
 800180c:	4b3d      	ldr	r3, [pc, #244]	; (8001904 <led7_Scan+0x104>)
 800180e:	801a      	strh	r2, [r3, #0]
	spi_buffer |= led7seg[led7_index] << 8;
 8001810:	4b3d      	ldr	r3, [pc, #244]	; (8001908 <led7_Scan+0x108>)
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4a3d      	ldr	r2, [pc, #244]	; (800190c <led7_Scan+0x10c>)
 8001816:	5cd3      	ldrb	r3, [r2, r3]
 8001818:	021b      	lsls	r3, r3, #8
 800181a:	b21a      	sxth	r2, r3
 800181c:	4b39      	ldr	r3, [pc, #228]	; (8001904 <led7_Scan+0x104>)
 800181e:	881b      	ldrh	r3, [r3, #0]
 8001820:	b21b      	sxth	r3, r3
 8001822:	4313      	orrs	r3, r2
 8001824:	b21b      	sxth	r3, r3
 8001826:	b29a      	uxth	r2, r3
 8001828:	4b36      	ldr	r3, [pc, #216]	; (8001904 <led7_Scan+0x104>)
 800182a:	801a      	strh	r2, [r3, #0]
	switch(led7_index){
 800182c:	4b36      	ldr	r3, [pc, #216]	; (8001908 <led7_Scan+0x108>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	2b03      	cmp	r3, #3
 8001832:	d847      	bhi.n	80018c4 <led7_Scan+0xc4>
 8001834:	a201      	add	r2, pc, #4	; (adr r2, 800183c <led7_Scan+0x3c>)
 8001836:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800183a:	bf00      	nop
 800183c:	0800184d 	.word	0x0800184d
 8001840:	0800186b 	.word	0x0800186b
 8001844:	08001889 	.word	0x08001889
 8001848:	080018a7 	.word	0x080018a7
	case 0:
		spi_buffer |= 0x00b0;
 800184c:	4b2d      	ldr	r3, [pc, #180]	; (8001904 <led7_Scan+0x104>)
 800184e:	881b      	ldrh	r3, [r3, #0]
 8001850:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8001854:	b29a      	uxth	r2, r3
 8001856:	4b2b      	ldr	r3, [pc, #172]	; (8001904 <led7_Scan+0x104>)
 8001858:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffbf;//1011
 800185a:	4b2a      	ldr	r3, [pc, #168]	; (8001904 <led7_Scan+0x104>)
 800185c:	881b      	ldrh	r3, [r3, #0]
 800185e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001862:	b29a      	uxth	r2, r3
 8001864:	4b27      	ldr	r3, [pc, #156]	; (8001904 <led7_Scan+0x104>)
 8001866:	801a      	strh	r2, [r3, #0]
		break;
 8001868:	e02d      	b.n	80018c6 <led7_Scan+0xc6>
	case 1:
		spi_buffer |= 0x00d0;
 800186a:	4b26      	ldr	r3, [pc, #152]	; (8001904 <led7_Scan+0x104>)
 800186c:	881b      	ldrh	r3, [r3, #0]
 800186e:	f043 03d0 	orr.w	r3, r3, #208	; 0xd0
 8001872:	b29a      	uxth	r2, r3
 8001874:	4b23      	ldr	r3, [pc, #140]	; (8001904 <led7_Scan+0x104>)
 8001876:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffdf;//1101
 8001878:	4b22      	ldr	r3, [pc, #136]	; (8001904 <led7_Scan+0x104>)
 800187a:	881b      	ldrh	r3, [r3, #0]
 800187c:	f023 0320 	bic.w	r3, r3, #32
 8001880:	b29a      	uxth	r2, r3
 8001882:	4b20      	ldr	r3, [pc, #128]	; (8001904 <led7_Scan+0x104>)
 8001884:	801a      	strh	r2, [r3, #0]
		break;
 8001886:	e01e      	b.n	80018c6 <led7_Scan+0xc6>
	case 2:
		spi_buffer |= 0x00e0;
 8001888:	4b1e      	ldr	r3, [pc, #120]	; (8001904 <led7_Scan+0x104>)
 800188a:	881b      	ldrh	r3, [r3, #0]
 800188c:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8001890:	b29a      	uxth	r2, r3
 8001892:	4b1c      	ldr	r3, [pc, #112]	; (8001904 <led7_Scan+0x104>)
 8001894:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xffef;//1110
 8001896:	4b1b      	ldr	r3, [pc, #108]	; (8001904 <led7_Scan+0x104>)
 8001898:	881b      	ldrh	r3, [r3, #0]
 800189a:	f023 0310 	bic.w	r3, r3, #16
 800189e:	b29a      	uxth	r2, r3
 80018a0:	4b18      	ldr	r3, [pc, #96]	; (8001904 <led7_Scan+0x104>)
 80018a2:	801a      	strh	r2, [r3, #0]
		break;
 80018a4:	e00f      	b.n	80018c6 <led7_Scan+0xc6>
	case 3:
		spi_buffer |= 0x0070;
 80018a6:	4b17      	ldr	r3, [pc, #92]	; (8001904 <led7_Scan+0x104>)
 80018a8:	881b      	ldrh	r3, [r3, #0]
 80018aa:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 80018ae:	b29a      	uxth	r2, r3
 80018b0:	4b14      	ldr	r3, [pc, #80]	; (8001904 <led7_Scan+0x104>)
 80018b2:	801a      	strh	r2, [r3, #0]
		spi_buffer &= 0xff7f;//0111
 80018b4:	4b13      	ldr	r3, [pc, #76]	; (8001904 <led7_Scan+0x104>)
 80018b6:	881b      	ldrh	r3, [r3, #0]
 80018b8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80018bc:	b29a      	uxth	r2, r3
 80018be:	4b11      	ldr	r3, [pc, #68]	; (8001904 <led7_Scan+0x104>)
 80018c0:	801a      	strh	r2, [r3, #0]
		break;
 80018c2:	e000      	b.n	80018c6 <led7_Scan+0xc6>
	default:
		break;
 80018c4:	bf00      	nop
	}
	led7_index = (led7_index + 1)%4;
 80018c6:	4b10      	ldr	r3, [pc, #64]	; (8001908 <led7_Scan+0x108>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	3301      	adds	r3, #1
 80018cc:	425a      	negs	r2, r3
 80018ce:	f003 0303 	and.w	r3, r3, #3
 80018d2:	f002 0203 	and.w	r2, r2, #3
 80018d6:	bf58      	it	pl
 80018d8:	4253      	negpl	r3, r2
 80018da:	4a0b      	ldr	r2, [pc, #44]	; (8001908 <led7_Scan+0x108>)
 80018dc:	6013      	str	r3, [r2, #0]
	HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 0);
 80018de:	2200      	movs	r2, #0
 80018e0:	2140      	movs	r1, #64	; 0x40
 80018e2:	480b      	ldr	r0, [pc, #44]	; (8001910 <led7_Scan+0x110>)
 80018e4:	f002 fab4 	bl	8003e50 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, (void*)&spi_buffer, 2, 1);
 80018e8:	2301      	movs	r3, #1
 80018ea:	2202      	movs	r2, #2
 80018ec:	4905      	ldr	r1, [pc, #20]	; (8001904 <led7_Scan+0x104>)
 80018ee:	4809      	ldr	r0, [pc, #36]	; (8001914 <led7_Scan+0x114>)
 80018f0:	f003 f909 	bl	8004b06 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(LD_LATCH_GPIO_Port, LD_LATCH_Pin, 1);
 80018f4:	2201      	movs	r2, #1
 80018f6:	2140      	movs	r1, #64	; 0x40
 80018f8:	4805      	ldr	r0, [pc, #20]	; (8001910 <led7_Scan+0x110>)
 80018fa:	f002 faa9 	bl	8003e50 <HAL_GPIO_WritePin>
}
 80018fe:	bf00      	nop
 8001900:	bd80      	pop	{r7, pc}
 8001902:	bf00      	nop
 8001904:	2000000e 	.word	0x2000000e
 8001908:	200000b4 	.word	0x200000b4
 800190c:	20000000 	.word	0x20000000
 8001910:	40021800 	.word	0x40021800
 8001914:	20000280 	.word	0x20000280

08001918 <led7_SetDigit>:

void led7_SetDigit(int num, int position, uint8_t show_dot){
 8001918:	b480      	push	{r7}
 800191a:	b085      	sub	sp, #20
 800191c:	af00      	add	r7, sp, #0
 800191e:	60f8      	str	r0, [r7, #12]
 8001920:	60b9      	str	r1, [r7, #8]
 8001922:	4613      	mov	r3, r2
 8001924:	71fb      	strb	r3, [r7, #7]
	if(num >= 0 && num <= 9){
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	2b00      	cmp	r3, #0
 800192a:	db0e      	blt.n	800194a <led7_SetDigit+0x32>
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	2b09      	cmp	r3, #9
 8001930:	dc0b      	bgt.n	800194a <led7_SetDigit+0x32>
		led7seg[position] = arrayOfNum[num] - show_dot;
 8001932:	4a09      	ldr	r2, [pc, #36]	; (8001958 <led7_SetDigit+0x40>)
 8001934:	68fb      	ldr	r3, [r7, #12]
 8001936:	4413      	add	r3, r2
 8001938:	781a      	ldrb	r2, [r3, #0]
 800193a:	79fb      	ldrb	r3, [r7, #7]
 800193c:	1ad3      	subs	r3, r2, r3
 800193e:	b2d9      	uxtb	r1, r3
 8001940:	4a06      	ldr	r2, [pc, #24]	; (800195c <led7_SetDigit+0x44>)
 8001942:	68bb      	ldr	r3, [r7, #8]
 8001944:	4413      	add	r3, r2
 8001946:	460a      	mov	r2, r1
 8001948:	701a      	strb	r2, [r3, #0]
	}
}
 800194a:	bf00      	nop
 800194c:	3714      	adds	r7, #20
 800194e:	46bd      	mov	sp, r7
 8001950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001954:	4770      	bx	lr
 8001956:	bf00      	nop
 8001958:	20000004 	.word	0x20000004
 800195c:	20000000 	.word	0x20000000

08001960 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001960:	b580      	push	{r7, lr}
 8001962:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001964:	f001 f952 	bl	8002c0c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001968:	f000 f82e 	bl	80019c8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800196c:	f7ff f882 	bl	8000a74 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001970:	f000 fed2 	bl	8002718 <MX_TIM2_Init>
  MX_SPI1_Init();
 8001974:	f000 fcb0 	bl	80022d8 <MX_SPI1_Init>
  MX_FSMC_Init();
 8001978:	f7fe ffac 	bl	80008d4 <MX_FSMC_Init>
  MX_I2C1_Init();
 800197c:	f7ff f9b4 	bl	8000ce8 <MX_I2C1_Init>
  MX_TIM13_Init();
 8001980:	f000 ff16 	bl	80027b0 <MX_TIM13_Init>
  MX_DMA_Init();
 8001984:	f7fe ff86 	bl	8000894 <MX_DMA_Init>
  MX_ADC1_Init();
 8001988:	f7fe fdee 	bl	8000568 <MX_ADC1_Init>
  MX_TIM1_Init();
 800198c:	f000 fe74 	bl	8002678 <MX_TIM1_Init>
  MX_USART2_UART_Init();
 8001990:	f001 f85c 	bl	8002a4c <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8001994:	f001 f830 	bl	80029f8 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  system_init();
 8001998:	f000 f880 	bl	8001a9c <system_init>
  lcd_Clear(WHITE);
 800199c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80019a0:	f7ff fa96 	bl	8000ed0 <lcd_Clear>
  snake_init();
 80019a4:	f000 f8c4 	bl	8001b30 <snake_init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

    while (1)
    {
  	  while(!flag_timer2);
 80019a8:	bf00      	nop
 80019aa:	4b06      	ldr	r3, [pc, #24]	; (80019c4 <main+0x64>)
 80019ac:	881b      	ldrh	r3, [r3, #0]
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d0fb      	beq.n	80019aa <main+0x4a>
	  flag_timer2 = 0;
 80019b2:	4b04      	ldr	r3, [pc, #16]	; (80019c4 <main+0x64>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	801a      	strh	r2, [r3, #0]
	  button_Scan();
 80019b8:	f7fe ff00 	bl	80007bc <button_Scan>
//	  test_button();
//	  test_7seg();
	  test_lcd();
 80019bc:	f000 f88e 	bl	8001adc <test_lcd>
  	  while(!flag_timer2);
 80019c0:	e7f2      	b.n	80019a8 <main+0x48>
 80019c2:	bf00      	nop
 80019c4:	200000be 	.word	0x200000be

080019c8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80019c8:	b580      	push	{r7, lr}
 80019ca:	b094      	sub	sp, #80	; 0x50
 80019cc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80019ce:	f107 0320 	add.w	r3, r7, #32
 80019d2:	2230      	movs	r2, #48	; 0x30
 80019d4:	2100      	movs	r1, #0
 80019d6:	4618      	mov	r0, r3
 80019d8:	f005 fe70 	bl	80076bc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80019dc:	f107 030c 	add.w	r3, r7, #12
 80019e0:	2200      	movs	r2, #0
 80019e2:	601a      	str	r2, [r3, #0]
 80019e4:	605a      	str	r2, [r3, #4]
 80019e6:	609a      	str	r2, [r3, #8]
 80019e8:	60da      	str	r2, [r3, #12]
 80019ea:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ec:	2300      	movs	r3, #0
 80019ee:	60bb      	str	r3, [r7, #8]
 80019f0:	4b28      	ldr	r3, [pc, #160]	; (8001a94 <SystemClock_Config+0xcc>)
 80019f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019f4:	4a27      	ldr	r2, [pc, #156]	; (8001a94 <SystemClock_Config+0xcc>)
 80019f6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80019fa:	6413      	str	r3, [r2, #64]	; 0x40
 80019fc:	4b25      	ldr	r3, [pc, #148]	; (8001a94 <SystemClock_Config+0xcc>)
 80019fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a00:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a04:	60bb      	str	r3, [r7, #8]
 8001a06:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a08:	2300      	movs	r3, #0
 8001a0a:	607b      	str	r3, [r7, #4]
 8001a0c:	4b22      	ldr	r3, [pc, #136]	; (8001a98 <SystemClock_Config+0xd0>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4a21      	ldr	r2, [pc, #132]	; (8001a98 <SystemClock_Config+0xd0>)
 8001a12:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001a16:	6013      	str	r3, [r2, #0]
 8001a18:	4b1f      	ldr	r3, [pc, #124]	; (8001a98 <SystemClock_Config+0xd0>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001a20:	607b      	str	r3, [r7, #4]
 8001a22:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001a24:	2302      	movs	r3, #2
 8001a26:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001a28:	2301      	movs	r3, #1
 8001a2a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001a2c:	2310      	movs	r3, #16
 8001a2e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001a30:	2302      	movs	r3, #2
 8001a32:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001a34:	2300      	movs	r3, #0
 8001a36:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001a38:	2308      	movs	r3, #8
 8001a3a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001a3c:	23a8      	movs	r3, #168	; 0xa8
 8001a3e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a40:	2302      	movs	r3, #2
 8001a42:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a44:	2304      	movs	r3, #4
 8001a46:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a48:	f107 0320 	add.w	r3, r7, #32
 8001a4c:	4618      	mov	r0, r3
 8001a4e:	f002 fb5d 	bl	800410c <HAL_RCC_OscConfig>
 8001a52:	4603      	mov	r3, r0
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d001      	beq.n	8001a5c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001a58:	f000 f848 	bl	8001aec <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a5c:	230f      	movs	r3, #15
 8001a5e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a60:	2302      	movs	r3, #2
 8001a62:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a64:	2300      	movs	r3, #0
 8001a66:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001a68:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001a6c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 8001a6e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001a72:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001a74:	f107 030c 	add.w	r3, r7, #12
 8001a78:	2105      	movs	r1, #5
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	f002 fdbe 	bl	80045fc <HAL_RCC_ClockConfig>
 8001a80:	4603      	mov	r3, r0
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	d001      	beq.n	8001a8a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8001a86:	f000 f831 	bl	8001aec <Error_Handler>
  }
}
 8001a8a:	bf00      	nop
 8001a8c:	3750      	adds	r7, #80	; 0x50
 8001a8e:	46bd      	mov	sp, r7
 8001a90:	bd80      	pop	{r7, pc}
 8001a92:	bf00      	nop
 8001a94:	40023800 	.word	0x40023800
 8001a98:	40007000 	.word	0x40007000

08001a9c <system_init>:

/* USER CODE BEGIN 4 */
void system_init(){
 8001a9c:	b580      	push	{r7, lr}
 8001a9e:	af00      	add	r7, sp, #0
	  HAL_GPIO_WritePin(OUTPUT_Y0_GPIO_Port, OUTPUT_Y0_Pin, 0);
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	2120      	movs	r1, #32
 8001aa4:	480c      	ldr	r0, [pc, #48]	; (8001ad8 <system_init+0x3c>)
 8001aa6:	f002 f9d3 	bl	8003e50 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(OUTPUT_Y1_GPIO_Port, OUTPUT_Y1_Pin, 0);
 8001aaa:	2200      	movs	r2, #0
 8001aac:	2140      	movs	r1, #64	; 0x40
 8001aae:	480a      	ldr	r0, [pc, #40]	; (8001ad8 <system_init+0x3c>)
 8001ab0:	f002 f9ce 	bl	8003e50 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(DEBUG_LED_GPIO_Port, DEBUG_LED_Pin, 0);
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	2110      	movs	r1, #16
 8001ab8:	4807      	ldr	r0, [pc, #28]	; (8001ad8 <system_init+0x3c>)
 8001aba:	f002 f9c9 	bl	8003e50 <HAL_GPIO_WritePin>
	  timer_init();
 8001abe:	f000 fbb7 	bl	8002230 <timer_init>
	  led7_init();
 8001ac2:	f7ff fe91 	bl	80017e8 <led7_init>
	  button_init();
 8001ac6:	f7fe fe6d 	bl	80007a4 <button_init>
	  lcd_init();
 8001aca:	f7ff fcc9 	bl	8001460 <lcd_init>
	  setTimer2(50);
 8001ace:	2032      	movs	r0, #50	; 0x32
 8001ad0:	f000 fbbc 	bl	800224c <setTimer2>
}
 8001ad4:	bf00      	nop
 8001ad6:	bd80      	pop	{r7, pc}
 8001ad8:	40021000 	.word	0x40021000

08001adc <test_lcd>:
			lcd_ShowIntNum(140, 105, i, 2, BRED, WHITE, 32);
			//di chuyển
		}
	}
}
void test_lcd(){
 8001adc:	b580      	push	{r7, lr}
 8001ade:	af00      	add	r7, sp, #0
//	snake_init();
	wall();
 8001ae0:	f000 fb90 	bl	8002204 <wall>
	move();
 8001ae4:	f000 faec 	bl	80020c0 <move>
}
 8001ae8:	bf00      	nop
 8001aea:	bd80      	pop	{r7, pc}

08001aec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001aec:	b480      	push	{r7}
 8001aee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001af0:	b672      	cpsid	i
}
 8001af2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001af4:	e7fe      	b.n	8001af4 <Error_Handler+0x8>

08001af6 <random_eat>:
#include "led_7seg.h"

uint16_t x_max = 239, y_max = 319;
uint16_t x1 = 120, y1 = 150, x2 = 130, y2 = 160;

uint16_t random_eat(uint16_t minN, uint16_t maxN) {
 8001af6:	b580      	push	{r7, lr}
 8001af8:	b082      	sub	sp, #8
 8001afa:	af00      	add	r7, sp, #0
 8001afc:	4603      	mov	r3, r0
 8001afe:	460a      	mov	r2, r1
 8001b00:	80fb      	strh	r3, [r7, #6]
 8001b02:	4613      	mov	r3, r2
 8001b04:	80bb      	strh	r3, [r7, #4]
	return minN + rand()%(maxN + 1 - minN);
 8001b06:	f005 fde1 	bl	80076cc <rand>
 8001b0a:	4602      	mov	r2, r0
 8001b0c:	88bb      	ldrh	r3, [r7, #4]
 8001b0e:	1c59      	adds	r1, r3, #1
 8001b10:	88fb      	ldrh	r3, [r7, #6]
 8001b12:	1acb      	subs	r3, r1, r3
 8001b14:	fb92 f1f3 	sdiv	r1, r2, r3
 8001b18:	fb03 f301 	mul.w	r3, r3, r1
 8001b1c:	1ad3      	subs	r3, r2, r3
 8001b1e:	b29a      	uxth	r2, r3
 8001b20:	88fb      	ldrh	r3, [r7, #6]
 8001b22:	4413      	add	r3, r2
 8001b24:	b29b      	uxth	r3, r3
}
 8001b26:	4618      	mov	r0, r3
 8001b28:	3708      	adds	r7, #8
 8001b2a:	46bd      	mov	sp, r7
 8001b2c:	bd80      	pop	{r7, pc}
	...

08001b30 <snake_init>:

uint16_t count = 0;
//uint16_t pre_count = 0;
uint16_t CREATE_FOOD = 1;

void snake_init() {
 8001b30:	b590      	push	{r4, r7, lr}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af02      	add	r7, sp, #8
	lcd_Fill(x1, y1, x2, y2, BLUE);
 8001b36:	4b08      	ldr	r3, [pc, #32]	; (8001b58 <snake_init+0x28>)
 8001b38:	8818      	ldrh	r0, [r3, #0]
 8001b3a:	4b08      	ldr	r3, [pc, #32]	; (8001b5c <snake_init+0x2c>)
 8001b3c:	8819      	ldrh	r1, [r3, #0]
 8001b3e:	4b08      	ldr	r3, [pc, #32]	; (8001b60 <snake_init+0x30>)
 8001b40:	881a      	ldrh	r2, [r3, #0]
 8001b42:	4b08      	ldr	r3, [pc, #32]	; (8001b64 <snake_init+0x34>)
 8001b44:	881b      	ldrh	r3, [r3, #0]
 8001b46:	241f      	movs	r4, #31
 8001b48:	9400      	str	r4, [sp, #0]
 8001b4a:	f7ff f9f3 	bl	8000f34 <lcd_Fill>
}
 8001b4e:	bf00      	nop
 8001b50:	3704      	adds	r7, #4
 8001b52:	46bd      	mov	sp, r7
 8001b54:	bd90      	pop	{r4, r7, pc}
 8001b56:	bf00      	nop
 8001b58:	20000014 	.word	0x20000014
 8001b5c:	20000016 	.word	0x20000016
 8001b60:	20000018 	.word	0x20000018
 8001b64:	2000001a 	.word	0x2000001a

08001b68 <display>:
void display() {
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b084      	sub	sp, #16
 8001b6c:	af04      	add	r7, sp, #16
	lcd_ShowStr(50,30,"Game Over!!!",WHITE,BLACK,24,0);
 8001b6e:	2300      	movs	r3, #0
 8001b70:	9302      	str	r3, [sp, #8]
 8001b72:	2318      	movs	r3, #24
 8001b74:	9301      	str	r3, [sp, #4]
 8001b76:	2300      	movs	r3, #0
 8001b78:	9300      	str	r3, [sp, #0]
 8001b7a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b7e:	4a0e      	ldr	r2, [pc, #56]	; (8001bb8 <display+0x50>)
 8001b80:	211e      	movs	r1, #30
 8001b82:	2032      	movs	r0, #50	; 0x32
 8001b84:	f7ff fdcc 	bl	8001720 <lcd_ShowStr>
	HAL_Delay(1000);
 8001b88:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001b8c:	f001 f8b0 	bl	8002cf0 <HAL_Delay>
	lcd_ShowStr(50,30,"Game Over!!!",BLUE,YELLOW,24,0);
 8001b90:	2300      	movs	r3, #0
 8001b92:	9302      	str	r3, [sp, #8]
 8001b94:	2318      	movs	r3, #24
 8001b96:	9301      	str	r3, [sp, #4]
 8001b98:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8001b9c:	9300      	str	r3, [sp, #0]
 8001b9e:	231f      	movs	r3, #31
 8001ba0:	4a05      	ldr	r2, [pc, #20]	; (8001bb8 <display+0x50>)
 8001ba2:	211e      	movs	r1, #30
 8001ba4:	2032      	movs	r0, #50	; 0x32
 8001ba6:	f7ff fdbb 	bl	8001720 <lcd_ShowStr>
	HAL_Delay(1000);
 8001baa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001bae:	f001 f89f 	bl	8002cf0 <HAL_Delay>
}
 8001bb2:	bf00      	nop
 8001bb4:	46bd      	mov	sp, r7
 8001bb6:	bd80      	pop	{r7, pc}
 8001bb8:	080086e8 	.word	0x080086e8

08001bbc <game_over>:
void game_over(){
 8001bbc:	b590      	push	{r4, r7, lr}
 8001bbe:	b085      	sub	sp, #20
 8001bc0:	af04      	add	r7, sp, #16
//	lcd_ShowStr(50,30,"Game Over!!!",WHITE,BLACK,24,0);
//	lcd_ShowStr(50,30,"Game Over!!!",WHITE,YELLOW,24,0);
	lcd_ShowStr(25,120,"May choi ngu vl!",WHITE,RED,24,0);
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	9302      	str	r3, [sp, #8]
 8001bc6:	2318      	movs	r3, #24
 8001bc8:	9301      	str	r3, [sp, #4]
 8001bca:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001bce:	9300      	str	r3, [sp, #0]
 8001bd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001bd4:	4a2b      	ldr	r2, [pc, #172]	; (8001c84 <game_over+0xc8>)
 8001bd6:	2178      	movs	r1, #120	; 0x78
 8001bd8:	2019      	movs	r0, #25
 8001bda:	f7ff fda1 	bl	8001720 <lcd_ShowStr>
	lcd_ShowStr(10,200,"Diem cua ban la: ",BLUE,WHITE,24,0);
 8001bde:	2300      	movs	r3, #0
 8001be0:	9302      	str	r3, [sp, #8]
 8001be2:	2318      	movs	r3, #24
 8001be4:	9301      	str	r3, [sp, #4]
 8001be6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001bea:	9300      	str	r3, [sp, #0]
 8001bec:	231f      	movs	r3, #31
 8001bee:	4a26      	ldr	r2, [pc, #152]	; (8001c88 <game_over+0xcc>)
 8001bf0:	21c8      	movs	r1, #200	; 0xc8
 8001bf2:	200a      	movs	r0, #10
 8001bf4:	f7ff fd94 	bl	8001720 <lcd_ShowStr>
	if(count < 10)
 8001bf8:	4b24      	ldr	r3, [pc, #144]	; (8001c8c <game_over+0xd0>)
 8001bfa:	881b      	ldrh	r3, [r3, #0]
 8001bfc:	2b09      	cmp	r3, #9
 8001bfe:	d80e      	bhi.n	8001c1e <game_over+0x62>
		lcd_ShowIntNum(210,200,count,1,BLUE,WHITE,24);
 8001c00:	4b22      	ldr	r3, [pc, #136]	; (8001c8c <game_over+0xd0>)
 8001c02:	881a      	ldrh	r2, [r3, #0]
 8001c04:	2318      	movs	r3, #24
 8001c06:	9302      	str	r3, [sp, #8]
 8001c08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001c0c:	9301      	str	r3, [sp, #4]
 8001c0e:	231f      	movs	r3, #31
 8001c10:	9300      	str	r3, [sp, #0]
 8001c12:	2301      	movs	r3, #1
 8001c14:	21c8      	movs	r1, #200	; 0xc8
 8001c16:	20d2      	movs	r0, #210	; 0xd2
 8001c18:	f7ff fb80 	bl	800131c <lcd_ShowIntNum>
 8001c1c:	e00d      	b.n	8001c3a <game_over+0x7e>
	else
		lcd_ShowIntNum(210,200,count,2,BLUE,WHITE,24);
 8001c1e:	4b1b      	ldr	r3, [pc, #108]	; (8001c8c <game_over+0xd0>)
 8001c20:	881a      	ldrh	r2, [r3, #0]
 8001c22:	2318      	movs	r3, #24
 8001c24:	9302      	str	r3, [sp, #8]
 8001c26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001c2a:	9301      	str	r3, [sp, #4]
 8001c2c:	231f      	movs	r3, #31
 8001c2e:	9300      	str	r3, [sp, #0]
 8001c30:	2302      	movs	r3, #2
 8001c32:	21c8      	movs	r1, #200	; 0xc8
 8001c34:	20d2      	movs	r0, #210	; 0xd2
 8001c36:	f7ff fb71 	bl	800131c <lcd_ShowIntNum>
	lcd_Fill(x1, y1, x2, y2, WHITE);
 8001c3a:	4b15      	ldr	r3, [pc, #84]	; (8001c90 <game_over+0xd4>)
 8001c3c:	8818      	ldrh	r0, [r3, #0]
 8001c3e:	4b15      	ldr	r3, [pc, #84]	; (8001c94 <game_over+0xd8>)
 8001c40:	8819      	ldrh	r1, [r3, #0]
 8001c42:	4b15      	ldr	r3, [pc, #84]	; (8001c98 <game_over+0xdc>)
 8001c44:	881a      	ldrh	r2, [r3, #0]
 8001c46:	4b15      	ldr	r3, [pc, #84]	; (8001c9c <game_over+0xe0>)
 8001c48:	881b      	ldrh	r3, [r3, #0]
 8001c4a:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001c4e:	9400      	str	r4, [sp, #0]
 8001c50:	f7ff f970 	bl	8000f34 <lcd_Fill>
	lcd_Fill(x_food, y_food, x_food+5, y_food+5, WHITE);
 8001c54:	4b12      	ldr	r3, [pc, #72]	; (8001ca0 <game_over+0xe4>)
 8001c56:	8818      	ldrh	r0, [r3, #0]
 8001c58:	4b12      	ldr	r3, [pc, #72]	; (8001ca4 <game_over+0xe8>)
 8001c5a:	8819      	ldrh	r1, [r3, #0]
 8001c5c:	4b10      	ldr	r3, [pc, #64]	; (8001ca0 <game_over+0xe4>)
 8001c5e:	881b      	ldrh	r3, [r3, #0]
 8001c60:	3305      	adds	r3, #5
 8001c62:	b29a      	uxth	r2, r3
 8001c64:	4b0f      	ldr	r3, [pc, #60]	; (8001ca4 <game_over+0xe8>)
 8001c66:	881b      	ldrh	r3, [r3, #0]
 8001c68:	3305      	adds	r3, #5
 8001c6a:	b29b      	uxth	r3, r3
 8001c6c:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001c70:	9400      	str	r4, [sp, #0]
 8001c72:	f7ff f95f 	bl	8000f34 <lcd_Fill>
	display();
 8001c76:	f7ff ff77 	bl	8001b68 <display>
}
 8001c7a:	bf00      	nop
 8001c7c:	3704      	adds	r7, #4
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	bd90      	pop	{r4, r7, pc}
 8001c82:	bf00      	nop
 8001c84:	080086f8 	.word	0x080086f8
 8001c88:	0800870c 	.word	0x0800870c
 8001c8c:	200000ba 	.word	0x200000ba
 8001c90:	20000014 	.word	0x20000014
 8001c94:	20000016 	.word	0x20000016
 8001c98:	20000018 	.word	0x20000018
 8001c9c:	2000001a 	.word	0x2000001a
 8001ca0:	2000027a 	.word	0x2000027a
 8001ca4:	2000027c 	.word	0x2000027c

08001ca8 <right>:

void right() {
 8001ca8:	b590      	push	{r4, r7, lr}
 8001caa:	b083      	sub	sp, #12
 8001cac:	af02      	add	r7, sp, #8
	lcd_Fill(x1, y1, x2, y2, WHITE);
 8001cae:	4b14      	ldr	r3, [pc, #80]	; (8001d00 <right+0x58>)
 8001cb0:	8818      	ldrh	r0, [r3, #0]
 8001cb2:	4b14      	ldr	r3, [pc, #80]	; (8001d04 <right+0x5c>)
 8001cb4:	8819      	ldrh	r1, [r3, #0]
 8001cb6:	4b14      	ldr	r3, [pc, #80]	; (8001d08 <right+0x60>)
 8001cb8:	881a      	ldrh	r2, [r3, #0]
 8001cba:	4b14      	ldr	r3, [pc, #80]	; (8001d0c <right+0x64>)
 8001cbc:	881b      	ldrh	r3, [r3, #0]
 8001cbe:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001cc2:	9400      	str	r4, [sp, #0]
 8001cc4:	f7ff f936 	bl	8000f34 <lcd_Fill>
	x1 += 1;
 8001cc8:	4b0d      	ldr	r3, [pc, #52]	; (8001d00 <right+0x58>)
 8001cca:	881b      	ldrh	r3, [r3, #0]
 8001ccc:	3301      	adds	r3, #1
 8001cce:	b29a      	uxth	r2, r3
 8001cd0:	4b0b      	ldr	r3, [pc, #44]	; (8001d00 <right+0x58>)
 8001cd2:	801a      	strh	r2, [r3, #0]
	x2 += 1;
 8001cd4:	4b0c      	ldr	r3, [pc, #48]	; (8001d08 <right+0x60>)
 8001cd6:	881b      	ldrh	r3, [r3, #0]
 8001cd8:	3301      	adds	r3, #1
 8001cda:	b29a      	uxth	r2, r3
 8001cdc:	4b0a      	ldr	r3, [pc, #40]	; (8001d08 <right+0x60>)
 8001cde:	801a      	strh	r2, [r3, #0]
	lcd_Fill(x1, y1, x2, y2, BLUE);
 8001ce0:	4b07      	ldr	r3, [pc, #28]	; (8001d00 <right+0x58>)
 8001ce2:	8818      	ldrh	r0, [r3, #0]
 8001ce4:	4b07      	ldr	r3, [pc, #28]	; (8001d04 <right+0x5c>)
 8001ce6:	8819      	ldrh	r1, [r3, #0]
 8001ce8:	4b07      	ldr	r3, [pc, #28]	; (8001d08 <right+0x60>)
 8001cea:	881a      	ldrh	r2, [r3, #0]
 8001cec:	4b07      	ldr	r3, [pc, #28]	; (8001d0c <right+0x64>)
 8001cee:	881b      	ldrh	r3, [r3, #0]
 8001cf0:	241f      	movs	r4, #31
 8001cf2:	9400      	str	r4, [sp, #0]
 8001cf4:	f7ff f91e 	bl	8000f34 <lcd_Fill>
}
 8001cf8:	bf00      	nop
 8001cfa:	3704      	adds	r7, #4
 8001cfc:	46bd      	mov	sp, r7
 8001cfe:	bd90      	pop	{r4, r7, pc}
 8001d00:	20000014 	.word	0x20000014
 8001d04:	20000016 	.word	0x20000016
 8001d08:	20000018 	.word	0x20000018
 8001d0c:	2000001a 	.word	0x2000001a

08001d10 <left>:

void left() {
 8001d10:	b590      	push	{r4, r7, lr}
 8001d12:	b083      	sub	sp, #12
 8001d14:	af02      	add	r7, sp, #8
	lcd_Fill(x1, y1, x2, y2, WHITE);
 8001d16:	4b14      	ldr	r3, [pc, #80]	; (8001d68 <left+0x58>)
 8001d18:	8818      	ldrh	r0, [r3, #0]
 8001d1a:	4b14      	ldr	r3, [pc, #80]	; (8001d6c <left+0x5c>)
 8001d1c:	8819      	ldrh	r1, [r3, #0]
 8001d1e:	4b14      	ldr	r3, [pc, #80]	; (8001d70 <left+0x60>)
 8001d20:	881a      	ldrh	r2, [r3, #0]
 8001d22:	4b14      	ldr	r3, [pc, #80]	; (8001d74 <left+0x64>)
 8001d24:	881b      	ldrh	r3, [r3, #0]
 8001d26:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001d2a:	9400      	str	r4, [sp, #0]
 8001d2c:	f7ff f902 	bl	8000f34 <lcd_Fill>
	x1 -= 1;
 8001d30:	4b0d      	ldr	r3, [pc, #52]	; (8001d68 <left+0x58>)
 8001d32:	881b      	ldrh	r3, [r3, #0]
 8001d34:	3b01      	subs	r3, #1
 8001d36:	b29a      	uxth	r2, r3
 8001d38:	4b0b      	ldr	r3, [pc, #44]	; (8001d68 <left+0x58>)
 8001d3a:	801a      	strh	r2, [r3, #0]
	x2 -= 1;
 8001d3c:	4b0c      	ldr	r3, [pc, #48]	; (8001d70 <left+0x60>)
 8001d3e:	881b      	ldrh	r3, [r3, #0]
 8001d40:	3b01      	subs	r3, #1
 8001d42:	b29a      	uxth	r2, r3
 8001d44:	4b0a      	ldr	r3, [pc, #40]	; (8001d70 <left+0x60>)
 8001d46:	801a      	strh	r2, [r3, #0]
	lcd_Fill(x1, y1, x2, y2, BLUE);
 8001d48:	4b07      	ldr	r3, [pc, #28]	; (8001d68 <left+0x58>)
 8001d4a:	8818      	ldrh	r0, [r3, #0]
 8001d4c:	4b07      	ldr	r3, [pc, #28]	; (8001d6c <left+0x5c>)
 8001d4e:	8819      	ldrh	r1, [r3, #0]
 8001d50:	4b07      	ldr	r3, [pc, #28]	; (8001d70 <left+0x60>)
 8001d52:	881a      	ldrh	r2, [r3, #0]
 8001d54:	4b07      	ldr	r3, [pc, #28]	; (8001d74 <left+0x64>)
 8001d56:	881b      	ldrh	r3, [r3, #0]
 8001d58:	241f      	movs	r4, #31
 8001d5a:	9400      	str	r4, [sp, #0]
 8001d5c:	f7ff f8ea 	bl	8000f34 <lcd_Fill>
}
 8001d60:	bf00      	nop
 8001d62:	3704      	adds	r7, #4
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bd90      	pop	{r4, r7, pc}
 8001d68:	20000014 	.word	0x20000014
 8001d6c:	20000016 	.word	0x20000016
 8001d70:	20000018 	.word	0x20000018
 8001d74:	2000001a 	.word	0x2000001a

08001d78 <up>:

void up() {
 8001d78:	b590      	push	{r4, r7, lr}
 8001d7a:	b083      	sub	sp, #12
 8001d7c:	af02      	add	r7, sp, #8
	lcd_Fill(x1, y1, x2, y2, WHITE);
 8001d7e:	4b14      	ldr	r3, [pc, #80]	; (8001dd0 <up+0x58>)
 8001d80:	8818      	ldrh	r0, [r3, #0]
 8001d82:	4b14      	ldr	r3, [pc, #80]	; (8001dd4 <up+0x5c>)
 8001d84:	8819      	ldrh	r1, [r3, #0]
 8001d86:	4b14      	ldr	r3, [pc, #80]	; (8001dd8 <up+0x60>)
 8001d88:	881a      	ldrh	r2, [r3, #0]
 8001d8a:	4b14      	ldr	r3, [pc, #80]	; (8001ddc <up+0x64>)
 8001d8c:	881b      	ldrh	r3, [r3, #0]
 8001d8e:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001d92:	9400      	str	r4, [sp, #0]
 8001d94:	f7ff f8ce 	bl	8000f34 <lcd_Fill>
	y1 -= 1;
 8001d98:	4b0e      	ldr	r3, [pc, #56]	; (8001dd4 <up+0x5c>)
 8001d9a:	881b      	ldrh	r3, [r3, #0]
 8001d9c:	3b01      	subs	r3, #1
 8001d9e:	b29a      	uxth	r2, r3
 8001da0:	4b0c      	ldr	r3, [pc, #48]	; (8001dd4 <up+0x5c>)
 8001da2:	801a      	strh	r2, [r3, #0]
	y2 -= 1;
 8001da4:	4b0d      	ldr	r3, [pc, #52]	; (8001ddc <up+0x64>)
 8001da6:	881b      	ldrh	r3, [r3, #0]
 8001da8:	3b01      	subs	r3, #1
 8001daa:	b29a      	uxth	r2, r3
 8001dac:	4b0b      	ldr	r3, [pc, #44]	; (8001ddc <up+0x64>)
 8001dae:	801a      	strh	r2, [r3, #0]
	lcd_Fill(x1, y1, x2, y2, BLUE);
 8001db0:	4b07      	ldr	r3, [pc, #28]	; (8001dd0 <up+0x58>)
 8001db2:	8818      	ldrh	r0, [r3, #0]
 8001db4:	4b07      	ldr	r3, [pc, #28]	; (8001dd4 <up+0x5c>)
 8001db6:	8819      	ldrh	r1, [r3, #0]
 8001db8:	4b07      	ldr	r3, [pc, #28]	; (8001dd8 <up+0x60>)
 8001dba:	881a      	ldrh	r2, [r3, #0]
 8001dbc:	4b07      	ldr	r3, [pc, #28]	; (8001ddc <up+0x64>)
 8001dbe:	881b      	ldrh	r3, [r3, #0]
 8001dc0:	241f      	movs	r4, #31
 8001dc2:	9400      	str	r4, [sp, #0]
 8001dc4:	f7ff f8b6 	bl	8000f34 <lcd_Fill>
}
 8001dc8:	bf00      	nop
 8001dca:	3704      	adds	r7, #4
 8001dcc:	46bd      	mov	sp, r7
 8001dce:	bd90      	pop	{r4, r7, pc}
 8001dd0:	20000014 	.word	0x20000014
 8001dd4:	20000016 	.word	0x20000016
 8001dd8:	20000018 	.word	0x20000018
 8001ddc:	2000001a 	.word	0x2000001a

08001de0 <down>:

void down() {
 8001de0:	b590      	push	{r4, r7, lr}
 8001de2:	b083      	sub	sp, #12
 8001de4:	af02      	add	r7, sp, #8
	lcd_Fill(x1, y1, x2, y2, WHITE);
 8001de6:	4b14      	ldr	r3, [pc, #80]	; (8001e38 <down+0x58>)
 8001de8:	8818      	ldrh	r0, [r3, #0]
 8001dea:	4b14      	ldr	r3, [pc, #80]	; (8001e3c <down+0x5c>)
 8001dec:	8819      	ldrh	r1, [r3, #0]
 8001dee:	4b14      	ldr	r3, [pc, #80]	; (8001e40 <down+0x60>)
 8001df0:	881a      	ldrh	r2, [r3, #0]
 8001df2:	4b14      	ldr	r3, [pc, #80]	; (8001e44 <down+0x64>)
 8001df4:	881b      	ldrh	r3, [r3, #0]
 8001df6:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001dfa:	9400      	str	r4, [sp, #0]
 8001dfc:	f7ff f89a 	bl	8000f34 <lcd_Fill>
	y1 += 1;
 8001e00:	4b0e      	ldr	r3, [pc, #56]	; (8001e3c <down+0x5c>)
 8001e02:	881b      	ldrh	r3, [r3, #0]
 8001e04:	3301      	adds	r3, #1
 8001e06:	b29a      	uxth	r2, r3
 8001e08:	4b0c      	ldr	r3, [pc, #48]	; (8001e3c <down+0x5c>)
 8001e0a:	801a      	strh	r2, [r3, #0]
	y2 += 1;
 8001e0c:	4b0d      	ldr	r3, [pc, #52]	; (8001e44 <down+0x64>)
 8001e0e:	881b      	ldrh	r3, [r3, #0]
 8001e10:	3301      	adds	r3, #1
 8001e12:	b29a      	uxth	r2, r3
 8001e14:	4b0b      	ldr	r3, [pc, #44]	; (8001e44 <down+0x64>)
 8001e16:	801a      	strh	r2, [r3, #0]
	lcd_Fill(x1, y1, x2, y2, BLUE);
 8001e18:	4b07      	ldr	r3, [pc, #28]	; (8001e38 <down+0x58>)
 8001e1a:	8818      	ldrh	r0, [r3, #0]
 8001e1c:	4b07      	ldr	r3, [pc, #28]	; (8001e3c <down+0x5c>)
 8001e1e:	8819      	ldrh	r1, [r3, #0]
 8001e20:	4b07      	ldr	r3, [pc, #28]	; (8001e40 <down+0x60>)
 8001e22:	881a      	ldrh	r2, [r3, #0]
 8001e24:	4b07      	ldr	r3, [pc, #28]	; (8001e44 <down+0x64>)
 8001e26:	881b      	ldrh	r3, [r3, #0]
 8001e28:	241f      	movs	r4, #31
 8001e2a:	9400      	str	r4, [sp, #0]
 8001e2c:	f7ff f882 	bl	8000f34 <lcd_Fill>
}
 8001e30:	bf00      	nop
 8001e32:	3704      	adds	r7, #4
 8001e34:	46bd      	mov	sp, r7
 8001e36:	bd90      	pop	{r4, r7, pc}
 8001e38:	20000014 	.word	0x20000014
 8001e3c:	20000016 	.word	0x20000016
 8001e40:	20000018 	.word	0x20000018
 8001e44:	2000001a 	.word	0x2000001a

08001e48 <eat_food_success>:

void eat_food_success() {
 8001e48:	b590      	push	{r4, r7, lr}
 8001e4a:	b083      	sub	sp, #12
 8001e4c:	af02      	add	r7, sp, #8
	CREATE_FOOD = 1; //QUAY LAI HÀM TẠO FRUIT
 8001e4e:	4b0f      	ldr	r3, [pc, #60]	; (8001e8c <eat_food_success+0x44>)
 8001e50:	2201      	movs	r2, #1
 8001e52:	801a      	strh	r2, [r3, #0]
	count++; //tăng số điểm
 8001e54:	4b0e      	ldr	r3, [pc, #56]	; (8001e90 <eat_food_success+0x48>)
 8001e56:	881b      	ldrh	r3, [r3, #0]
 8001e58:	3301      	adds	r3, #1
 8001e5a:	b29a      	uxth	r2, r3
 8001e5c:	4b0c      	ldr	r3, [pc, #48]	; (8001e90 <eat_food_success+0x48>)
 8001e5e:	801a      	strh	r2, [r3, #0]
	lcd_Fill(x_food, y_food, x_food+5, y_food+5, WHITE);
 8001e60:	4b0c      	ldr	r3, [pc, #48]	; (8001e94 <eat_food_success+0x4c>)
 8001e62:	8818      	ldrh	r0, [r3, #0]
 8001e64:	4b0c      	ldr	r3, [pc, #48]	; (8001e98 <eat_food_success+0x50>)
 8001e66:	8819      	ldrh	r1, [r3, #0]
 8001e68:	4b0a      	ldr	r3, [pc, #40]	; (8001e94 <eat_food_success+0x4c>)
 8001e6a:	881b      	ldrh	r3, [r3, #0]
 8001e6c:	3305      	adds	r3, #5
 8001e6e:	b29a      	uxth	r2, r3
 8001e70:	4b09      	ldr	r3, [pc, #36]	; (8001e98 <eat_food_success+0x50>)
 8001e72:	881b      	ldrh	r3, [r3, #0]
 8001e74:	3305      	adds	r3, #5
 8001e76:	b29b      	uxth	r3, r3
 8001e78:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8001e7c:	9400      	str	r4, [sp, #0]
 8001e7e:	f7ff f859 	bl	8000f34 <lcd_Fill>
}
 8001e82:	bf00      	nop
 8001e84:	3704      	adds	r7, #4
 8001e86:	46bd      	mov	sp, r7
 8001e88:	bd90      	pop	{r4, r7, pc}
 8001e8a:	bf00      	nop
 8001e8c:	2000001c 	.word	0x2000001c
 8001e90:	200000ba 	.word	0x200000ba
 8001e94:	2000027a 	.word	0x2000027a
 8001e98:	2000027c 	.word	0x2000027c

08001e9c <food>:

void food() {
 8001e9c:	b590      	push	{r4, r7, lr}
 8001e9e:	b083      	sub	sp, #12
 8001ea0:	af02      	add	r7, sp, #8
	if(CREATE_FOOD == 1) { // Tạo mồi nhậu lần đầu tiên
 8001ea2:	4b7e      	ldr	r3, [pc, #504]	; (800209c <food+0x200>)
 8001ea4:	881b      	ldrh	r3, [r3, #0]
 8001ea6:	2b01      	cmp	r3, #1
 8001ea8:	d12c      	bne.n	8001f04 <food+0x68>
		x_food = random_eat(0,x_max-5);
 8001eaa:	4b7d      	ldr	r3, [pc, #500]	; (80020a0 <food+0x204>)
 8001eac:	881b      	ldrh	r3, [r3, #0]
 8001eae:	3b05      	subs	r3, #5
 8001eb0:	b29b      	uxth	r3, r3
 8001eb2:	4619      	mov	r1, r3
 8001eb4:	2000      	movs	r0, #0
 8001eb6:	f7ff fe1e 	bl	8001af6 <random_eat>
 8001eba:	4603      	mov	r3, r0
 8001ebc:	461a      	mov	r2, r3
 8001ebe:	4b79      	ldr	r3, [pc, #484]	; (80020a4 <food+0x208>)
 8001ec0:	801a      	strh	r2, [r3, #0]
		y_food = random_eat(0,y_max-5);
 8001ec2:	4b79      	ldr	r3, [pc, #484]	; (80020a8 <food+0x20c>)
 8001ec4:	881b      	ldrh	r3, [r3, #0]
 8001ec6:	3b05      	subs	r3, #5
 8001ec8:	b29b      	uxth	r3, r3
 8001eca:	4619      	mov	r1, r3
 8001ecc:	2000      	movs	r0, #0
 8001ece:	f7ff fe12 	bl	8001af6 <random_eat>
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	461a      	mov	r2, r3
 8001ed6:	4b75      	ldr	r3, [pc, #468]	; (80020ac <food+0x210>)
 8001ed8:	801a      	strh	r2, [r3, #0]
		lcd_Fill(x_food, y_food, x_food+5, y_food+5, RED);
 8001eda:	4b72      	ldr	r3, [pc, #456]	; (80020a4 <food+0x208>)
 8001edc:	8818      	ldrh	r0, [r3, #0]
 8001ede:	4b73      	ldr	r3, [pc, #460]	; (80020ac <food+0x210>)
 8001ee0:	8819      	ldrh	r1, [r3, #0]
 8001ee2:	4b70      	ldr	r3, [pc, #448]	; (80020a4 <food+0x208>)
 8001ee4:	881b      	ldrh	r3, [r3, #0]
 8001ee6:	3305      	adds	r3, #5
 8001ee8:	b29a      	uxth	r2, r3
 8001eea:	4b70      	ldr	r3, [pc, #448]	; (80020ac <food+0x210>)
 8001eec:	881b      	ldrh	r3, [r3, #0]
 8001eee:	3305      	adds	r3, #5
 8001ef0:	b29b      	uxth	r3, r3
 8001ef2:	f44f 4478 	mov.w	r4, #63488	; 0xf800
 8001ef6:	9400      	str	r4, [sp, #0]
 8001ef8:	f7ff f81c 	bl	8000f34 <lcd_Fill>
		CREATE_FOOD = 0; // tránh tạo liên tục mồi nhậu
 8001efc:	4b67      	ldr	r3, [pc, #412]	; (800209c <food+0x200>)
 8001efe:	2200      	movs	r2, #0
 8001f00:	801a      	strh	r2, [r3, #0]
			)
			) {
			eat_food_success();
		}
	}
}
 8001f02:	e0c7      	b.n	8002094 <food+0x1f8>
		if((x2 == x_food) && (
 8001f04:	4b6a      	ldr	r3, [pc, #424]	; (80020b0 <food+0x214>)
 8001f06:	881a      	ldrh	r2, [r3, #0]
 8001f08:	4b66      	ldr	r3, [pc, #408]	; (80020a4 <food+0x208>)
 8001f0a:	881b      	ldrh	r3, [r3, #0]
 8001f0c:	429a      	cmp	r2, r3
 8001f0e:	d12a      	bne.n	8001f66 <food+0xca>
				(y1 >= y_food && y1 <= y_food+5)
 8001f10:	4b68      	ldr	r3, [pc, #416]	; (80020b4 <food+0x218>)
 8001f12:	881a      	ldrh	r2, [r3, #0]
 8001f14:	4b65      	ldr	r3, [pc, #404]	; (80020ac <food+0x210>)
 8001f16:	881b      	ldrh	r3, [r3, #0]
		if((x2 == x_food) && (
 8001f18:	429a      	cmp	r2, r3
 8001f1a:	d307      	bcc.n	8001f2c <food+0x90>
				(y1 >= y_food && y1 <= y_food+5)
 8001f1c:	4b65      	ldr	r3, [pc, #404]	; (80020b4 <food+0x218>)
 8001f1e:	881b      	ldrh	r3, [r3, #0]
 8001f20:	461a      	mov	r2, r3
 8001f22:	4b62      	ldr	r3, [pc, #392]	; (80020ac <food+0x210>)
 8001f24:	881b      	ldrh	r3, [r3, #0]
 8001f26:	3305      	adds	r3, #5
 8001f28:	429a      	cmp	r2, r3
 8001f2a:	dd1a      	ble.n	8001f62 <food+0xc6>
			||	(y2 >= y_food && y2 <= y_food+5)
 8001f2c:	4b62      	ldr	r3, [pc, #392]	; (80020b8 <food+0x21c>)
 8001f2e:	881a      	ldrh	r2, [r3, #0]
 8001f30:	4b5e      	ldr	r3, [pc, #376]	; (80020ac <food+0x210>)
 8001f32:	881b      	ldrh	r3, [r3, #0]
 8001f34:	429a      	cmp	r2, r3
 8001f36:	d307      	bcc.n	8001f48 <food+0xac>
 8001f38:	4b5f      	ldr	r3, [pc, #380]	; (80020b8 <food+0x21c>)
 8001f3a:	881b      	ldrh	r3, [r3, #0]
 8001f3c:	461a      	mov	r2, r3
 8001f3e:	4b5b      	ldr	r3, [pc, #364]	; (80020ac <food+0x210>)
 8001f40:	881b      	ldrh	r3, [r3, #0]
 8001f42:	3305      	adds	r3, #5
 8001f44:	429a      	cmp	r2, r3
 8001f46:	dd0c      	ble.n	8001f62 <food+0xc6>
			||  (y1 <= y_food && y2 >= y_food+5)
 8001f48:	4b5a      	ldr	r3, [pc, #360]	; (80020b4 <food+0x218>)
 8001f4a:	881a      	ldrh	r2, [r3, #0]
 8001f4c:	4b57      	ldr	r3, [pc, #348]	; (80020ac <food+0x210>)
 8001f4e:	881b      	ldrh	r3, [r3, #0]
 8001f50:	429a      	cmp	r2, r3
 8001f52:	d808      	bhi.n	8001f66 <food+0xca>
 8001f54:	4b55      	ldr	r3, [pc, #340]	; (80020ac <food+0x210>)
 8001f56:	881b      	ldrh	r3, [r3, #0]
 8001f58:	3304      	adds	r3, #4
 8001f5a:	4a57      	ldr	r2, [pc, #348]	; (80020b8 <food+0x21c>)
 8001f5c:	8812      	ldrh	r2, [r2, #0]
 8001f5e:	4293      	cmp	r3, r2
 8001f60:	da01      	bge.n	8001f66 <food+0xca>
			eat_food_success();
 8001f62:	f7ff ff71 	bl	8001e48 <eat_food_success>
		if((x1 == x_food+5) && (
 8001f66:	4b55      	ldr	r3, [pc, #340]	; (80020bc <food+0x220>)
 8001f68:	881b      	ldrh	r3, [r3, #0]
 8001f6a:	461a      	mov	r2, r3
 8001f6c:	4b4d      	ldr	r3, [pc, #308]	; (80020a4 <food+0x208>)
 8001f6e:	881b      	ldrh	r3, [r3, #0]
 8001f70:	3305      	adds	r3, #5
 8001f72:	429a      	cmp	r2, r3
 8001f74:	d12a      	bne.n	8001fcc <food+0x130>
				(y1 >= y_food && y1 <= y_food+5)
 8001f76:	4b4f      	ldr	r3, [pc, #316]	; (80020b4 <food+0x218>)
 8001f78:	881a      	ldrh	r2, [r3, #0]
 8001f7a:	4b4c      	ldr	r3, [pc, #304]	; (80020ac <food+0x210>)
 8001f7c:	881b      	ldrh	r3, [r3, #0]
		if((x1 == x_food+5) && (
 8001f7e:	429a      	cmp	r2, r3
 8001f80:	d307      	bcc.n	8001f92 <food+0xf6>
				(y1 >= y_food && y1 <= y_food+5)
 8001f82:	4b4c      	ldr	r3, [pc, #304]	; (80020b4 <food+0x218>)
 8001f84:	881b      	ldrh	r3, [r3, #0]
 8001f86:	461a      	mov	r2, r3
 8001f88:	4b48      	ldr	r3, [pc, #288]	; (80020ac <food+0x210>)
 8001f8a:	881b      	ldrh	r3, [r3, #0]
 8001f8c:	3305      	adds	r3, #5
 8001f8e:	429a      	cmp	r2, r3
 8001f90:	dd1a      	ble.n	8001fc8 <food+0x12c>
			||	(y2 >= y_food && y2 <= y_food+5)
 8001f92:	4b49      	ldr	r3, [pc, #292]	; (80020b8 <food+0x21c>)
 8001f94:	881a      	ldrh	r2, [r3, #0]
 8001f96:	4b45      	ldr	r3, [pc, #276]	; (80020ac <food+0x210>)
 8001f98:	881b      	ldrh	r3, [r3, #0]
 8001f9a:	429a      	cmp	r2, r3
 8001f9c:	d307      	bcc.n	8001fae <food+0x112>
 8001f9e:	4b46      	ldr	r3, [pc, #280]	; (80020b8 <food+0x21c>)
 8001fa0:	881b      	ldrh	r3, [r3, #0]
 8001fa2:	461a      	mov	r2, r3
 8001fa4:	4b41      	ldr	r3, [pc, #260]	; (80020ac <food+0x210>)
 8001fa6:	881b      	ldrh	r3, [r3, #0]
 8001fa8:	3305      	adds	r3, #5
 8001faa:	429a      	cmp	r2, r3
 8001fac:	dd0c      	ble.n	8001fc8 <food+0x12c>
			||  (y1 <= y_food && y2 >= y_food+5)
 8001fae:	4b41      	ldr	r3, [pc, #260]	; (80020b4 <food+0x218>)
 8001fb0:	881a      	ldrh	r2, [r3, #0]
 8001fb2:	4b3e      	ldr	r3, [pc, #248]	; (80020ac <food+0x210>)
 8001fb4:	881b      	ldrh	r3, [r3, #0]
 8001fb6:	429a      	cmp	r2, r3
 8001fb8:	d808      	bhi.n	8001fcc <food+0x130>
 8001fba:	4b3c      	ldr	r3, [pc, #240]	; (80020ac <food+0x210>)
 8001fbc:	881b      	ldrh	r3, [r3, #0]
 8001fbe:	3304      	adds	r3, #4
 8001fc0:	4a3d      	ldr	r2, [pc, #244]	; (80020b8 <food+0x21c>)
 8001fc2:	8812      	ldrh	r2, [r2, #0]
 8001fc4:	4293      	cmp	r3, r2
 8001fc6:	da01      	bge.n	8001fcc <food+0x130>
			eat_food_success();
 8001fc8:	f7ff ff3e 	bl	8001e48 <eat_food_success>
		if((y2 == y_food) && (
 8001fcc:	4b3a      	ldr	r3, [pc, #232]	; (80020b8 <food+0x21c>)
 8001fce:	881a      	ldrh	r2, [r3, #0]
 8001fd0:	4b36      	ldr	r3, [pc, #216]	; (80020ac <food+0x210>)
 8001fd2:	881b      	ldrh	r3, [r3, #0]
 8001fd4:	429a      	cmp	r2, r3
 8001fd6:	d12a      	bne.n	800202e <food+0x192>
				(x1 >= x_food && x1 <= x_food+5)
 8001fd8:	4b38      	ldr	r3, [pc, #224]	; (80020bc <food+0x220>)
 8001fda:	881a      	ldrh	r2, [r3, #0]
 8001fdc:	4b31      	ldr	r3, [pc, #196]	; (80020a4 <food+0x208>)
 8001fde:	881b      	ldrh	r3, [r3, #0]
		if((y2 == y_food) && (
 8001fe0:	429a      	cmp	r2, r3
 8001fe2:	d307      	bcc.n	8001ff4 <food+0x158>
				(x1 >= x_food && x1 <= x_food+5)
 8001fe4:	4b35      	ldr	r3, [pc, #212]	; (80020bc <food+0x220>)
 8001fe6:	881b      	ldrh	r3, [r3, #0]
 8001fe8:	461a      	mov	r2, r3
 8001fea:	4b2e      	ldr	r3, [pc, #184]	; (80020a4 <food+0x208>)
 8001fec:	881b      	ldrh	r3, [r3, #0]
 8001fee:	3305      	adds	r3, #5
 8001ff0:	429a      	cmp	r2, r3
 8001ff2:	dd1a      	ble.n	800202a <food+0x18e>
			||	(x2 >= x_food && x2 <= x_food+5)
 8001ff4:	4b2e      	ldr	r3, [pc, #184]	; (80020b0 <food+0x214>)
 8001ff6:	881a      	ldrh	r2, [r3, #0]
 8001ff8:	4b2a      	ldr	r3, [pc, #168]	; (80020a4 <food+0x208>)
 8001ffa:	881b      	ldrh	r3, [r3, #0]
 8001ffc:	429a      	cmp	r2, r3
 8001ffe:	d307      	bcc.n	8002010 <food+0x174>
 8002000:	4b2b      	ldr	r3, [pc, #172]	; (80020b0 <food+0x214>)
 8002002:	881b      	ldrh	r3, [r3, #0]
 8002004:	461a      	mov	r2, r3
 8002006:	4b27      	ldr	r3, [pc, #156]	; (80020a4 <food+0x208>)
 8002008:	881b      	ldrh	r3, [r3, #0]
 800200a:	3305      	adds	r3, #5
 800200c:	429a      	cmp	r2, r3
 800200e:	dd0c      	ble.n	800202a <food+0x18e>
			||  (x1 <= x_food && x2 >= x_food+5)
 8002010:	4b2a      	ldr	r3, [pc, #168]	; (80020bc <food+0x220>)
 8002012:	881a      	ldrh	r2, [r3, #0]
 8002014:	4b23      	ldr	r3, [pc, #140]	; (80020a4 <food+0x208>)
 8002016:	881b      	ldrh	r3, [r3, #0]
 8002018:	429a      	cmp	r2, r3
 800201a:	d808      	bhi.n	800202e <food+0x192>
 800201c:	4b21      	ldr	r3, [pc, #132]	; (80020a4 <food+0x208>)
 800201e:	881b      	ldrh	r3, [r3, #0]
 8002020:	3304      	adds	r3, #4
 8002022:	4a23      	ldr	r2, [pc, #140]	; (80020b0 <food+0x214>)
 8002024:	8812      	ldrh	r2, [r2, #0]
 8002026:	4293      	cmp	r3, r2
 8002028:	da01      	bge.n	800202e <food+0x192>
			eat_food_success();
 800202a:	f7ff ff0d 	bl	8001e48 <eat_food_success>
		if((y1 == y_food+5) && (
 800202e:	4b21      	ldr	r3, [pc, #132]	; (80020b4 <food+0x218>)
 8002030:	881b      	ldrh	r3, [r3, #0]
 8002032:	461a      	mov	r2, r3
 8002034:	4b1d      	ldr	r3, [pc, #116]	; (80020ac <food+0x210>)
 8002036:	881b      	ldrh	r3, [r3, #0]
 8002038:	3305      	adds	r3, #5
 800203a:	429a      	cmp	r2, r3
 800203c:	d12a      	bne.n	8002094 <food+0x1f8>
				(x1 >= x_food && x1 <= x_food+5)
 800203e:	4b1f      	ldr	r3, [pc, #124]	; (80020bc <food+0x220>)
 8002040:	881a      	ldrh	r2, [r3, #0]
 8002042:	4b18      	ldr	r3, [pc, #96]	; (80020a4 <food+0x208>)
 8002044:	881b      	ldrh	r3, [r3, #0]
		if((y1 == y_food+5) && (
 8002046:	429a      	cmp	r2, r3
 8002048:	d307      	bcc.n	800205a <food+0x1be>
				(x1 >= x_food && x1 <= x_food+5)
 800204a:	4b1c      	ldr	r3, [pc, #112]	; (80020bc <food+0x220>)
 800204c:	881b      	ldrh	r3, [r3, #0]
 800204e:	461a      	mov	r2, r3
 8002050:	4b14      	ldr	r3, [pc, #80]	; (80020a4 <food+0x208>)
 8002052:	881b      	ldrh	r3, [r3, #0]
 8002054:	3305      	adds	r3, #5
 8002056:	429a      	cmp	r2, r3
 8002058:	dd1a      	ble.n	8002090 <food+0x1f4>
			||	(x2 >= x_food && x2 <= x_food+5)
 800205a:	4b15      	ldr	r3, [pc, #84]	; (80020b0 <food+0x214>)
 800205c:	881a      	ldrh	r2, [r3, #0]
 800205e:	4b11      	ldr	r3, [pc, #68]	; (80020a4 <food+0x208>)
 8002060:	881b      	ldrh	r3, [r3, #0]
 8002062:	429a      	cmp	r2, r3
 8002064:	d307      	bcc.n	8002076 <food+0x1da>
 8002066:	4b12      	ldr	r3, [pc, #72]	; (80020b0 <food+0x214>)
 8002068:	881b      	ldrh	r3, [r3, #0]
 800206a:	461a      	mov	r2, r3
 800206c:	4b0d      	ldr	r3, [pc, #52]	; (80020a4 <food+0x208>)
 800206e:	881b      	ldrh	r3, [r3, #0]
 8002070:	3305      	adds	r3, #5
 8002072:	429a      	cmp	r2, r3
 8002074:	dd0c      	ble.n	8002090 <food+0x1f4>
			||  (x1 <= x_food && x2 >= x_food+5)
 8002076:	4b11      	ldr	r3, [pc, #68]	; (80020bc <food+0x220>)
 8002078:	881a      	ldrh	r2, [r3, #0]
 800207a:	4b0a      	ldr	r3, [pc, #40]	; (80020a4 <food+0x208>)
 800207c:	881b      	ldrh	r3, [r3, #0]
 800207e:	429a      	cmp	r2, r3
 8002080:	d808      	bhi.n	8002094 <food+0x1f8>
 8002082:	4b08      	ldr	r3, [pc, #32]	; (80020a4 <food+0x208>)
 8002084:	881b      	ldrh	r3, [r3, #0]
 8002086:	3304      	adds	r3, #4
 8002088:	4a09      	ldr	r2, [pc, #36]	; (80020b0 <food+0x214>)
 800208a:	8812      	ldrh	r2, [r2, #0]
 800208c:	4293      	cmp	r3, r2
 800208e:	da01      	bge.n	8002094 <food+0x1f8>
			eat_food_success();
 8002090:	f7ff feda 	bl	8001e48 <eat_food_success>
}
 8002094:	bf00      	nop
 8002096:	3704      	adds	r7, #4
 8002098:	46bd      	mov	sp, r7
 800209a:	bd90      	pop	{r4, r7, pc}
 800209c:	2000001c 	.word	0x2000001c
 80020a0:	20000010 	.word	0x20000010
 80020a4:	2000027a 	.word	0x2000027a
 80020a8:	20000012 	.word	0x20000012
 80020ac:	2000027c 	.word	0x2000027c
 80020b0:	20000018 	.word	0x20000018
 80020b4:	20000016 	.word	0x20000016
 80020b8:	2000001a 	.word	0x2000001a
 80020bc:	20000014 	.word	0x20000014

080020c0 <move>:

enum state { goUp, goDown, goLeft, goRight };
enum state firstState = goUp;

void move() {
 80020c0:	b580      	push	{r7, lr}
 80020c2:	af00      	add	r7, sp, #0
	if(x1 == 0 || x1 == x_max || x2 == 0 || x2 == x_max
 80020c4:	4b45      	ldr	r3, [pc, #276]	; (80021dc <move+0x11c>)
 80020c6:	881b      	ldrh	r3, [r3, #0]
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d023      	beq.n	8002114 <move+0x54>
 80020cc:	4b43      	ldr	r3, [pc, #268]	; (80021dc <move+0x11c>)
 80020ce:	881a      	ldrh	r2, [r3, #0]
 80020d0:	4b43      	ldr	r3, [pc, #268]	; (80021e0 <move+0x120>)
 80020d2:	881b      	ldrh	r3, [r3, #0]
 80020d4:	429a      	cmp	r2, r3
 80020d6:	d01d      	beq.n	8002114 <move+0x54>
 80020d8:	4b42      	ldr	r3, [pc, #264]	; (80021e4 <move+0x124>)
 80020da:	881b      	ldrh	r3, [r3, #0]
 80020dc:	2b00      	cmp	r3, #0
 80020de:	d019      	beq.n	8002114 <move+0x54>
 80020e0:	4b40      	ldr	r3, [pc, #256]	; (80021e4 <move+0x124>)
 80020e2:	881a      	ldrh	r2, [r3, #0]
 80020e4:	4b3e      	ldr	r3, [pc, #248]	; (80021e0 <move+0x120>)
 80020e6:	881b      	ldrh	r3, [r3, #0]
 80020e8:	429a      	cmp	r2, r3
 80020ea:	d013      	beq.n	8002114 <move+0x54>
	|| y1 == 0 || y1 == y_max || y2 == 0 || y2 == y_max) { //đụng tường
 80020ec:	4b3e      	ldr	r3, [pc, #248]	; (80021e8 <move+0x128>)
 80020ee:	881b      	ldrh	r3, [r3, #0]
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d00f      	beq.n	8002114 <move+0x54>
 80020f4:	4b3c      	ldr	r3, [pc, #240]	; (80021e8 <move+0x128>)
 80020f6:	881a      	ldrh	r2, [r3, #0]
 80020f8:	4b3c      	ldr	r3, [pc, #240]	; (80021ec <move+0x12c>)
 80020fa:	881b      	ldrh	r3, [r3, #0]
 80020fc:	429a      	cmp	r2, r3
 80020fe:	d009      	beq.n	8002114 <move+0x54>
 8002100:	4b3b      	ldr	r3, [pc, #236]	; (80021f0 <move+0x130>)
 8002102:	881b      	ldrh	r3, [r3, #0]
 8002104:	2b00      	cmp	r3, #0
 8002106:	d005      	beq.n	8002114 <move+0x54>
 8002108:	4b39      	ldr	r3, [pc, #228]	; (80021f0 <move+0x130>)
 800210a:	881a      	ldrh	r2, [r3, #0]
 800210c:	4b37      	ldr	r3, [pc, #220]	; (80021ec <move+0x12c>)
 800210e:	881b      	ldrh	r3, [r3, #0]
 8002110:	429a      	cmp	r2, r3
 8002112:	d102      	bne.n	800211a <move+0x5a>
			game_over();
 8002114:	f7ff fd52 	bl	8001bbc <game_over>
			return;
 8002118:	e05e      	b.n	80021d8 <move+0x118>
	}
	led7_SetDigit(0, 0, 0);
 800211a:	2200      	movs	r2, #0
 800211c:	2100      	movs	r1, #0
 800211e:	2000      	movs	r0, #0
 8002120:	f7ff fbfa 	bl	8001918 <led7_SetDigit>
	led7_SetDigit(0, 1, 0);
 8002124:	2200      	movs	r2, #0
 8002126:	2101      	movs	r1, #1
 8002128:	2000      	movs	r0, #0
 800212a:	f7ff fbf5 	bl	8001918 <led7_SetDigit>
	led7_SetDigit(count/10, 2, 0);
 800212e:	4b31      	ldr	r3, [pc, #196]	; (80021f4 <move+0x134>)
 8002130:	881b      	ldrh	r3, [r3, #0]
 8002132:	4a31      	ldr	r2, [pc, #196]	; (80021f8 <move+0x138>)
 8002134:	fba2 2303 	umull	r2, r3, r2, r3
 8002138:	08db      	lsrs	r3, r3, #3
 800213a:	b29b      	uxth	r3, r3
 800213c:	2200      	movs	r2, #0
 800213e:	2102      	movs	r1, #2
 8002140:	4618      	mov	r0, r3
 8002142:	f7ff fbe9 	bl	8001918 <led7_SetDigit>
	led7_SetDigit(count%10, 3, 0); //hiển thị điểm số
 8002146:	4b2b      	ldr	r3, [pc, #172]	; (80021f4 <move+0x134>)
 8002148:	881a      	ldrh	r2, [r3, #0]
 800214a:	4b2b      	ldr	r3, [pc, #172]	; (80021f8 <move+0x138>)
 800214c:	fba3 1302 	umull	r1, r3, r3, r2
 8002150:	08d9      	lsrs	r1, r3, #3
 8002152:	460b      	mov	r3, r1
 8002154:	009b      	lsls	r3, r3, #2
 8002156:	440b      	add	r3, r1
 8002158:	005b      	lsls	r3, r3, #1
 800215a:	1ad3      	subs	r3, r2, r3
 800215c:	b29b      	uxth	r3, r3
 800215e:	2200      	movs	r2, #0
 8002160:	2103      	movs	r1, #3
 8002162:	4618      	mov	r0, r3
 8002164:	f7ff fbd8 	bl	8001918 <led7_SetDigit>
//	count++;

	food();
 8002168:	f7ff fe98 	bl	8001e9c <food>

	//snake move with button
	if (button_count[6] == 1) {
 800216c:	4b23      	ldr	r3, [pc, #140]	; (80021fc <move+0x13c>)
 800216e:	899b      	ldrh	r3, [r3, #12]
 8002170:	2b01      	cmp	r3, #1
 8002172:	d103      	bne.n	800217c <move+0xbc>
		firstState = goUp;
 8002174:	4b22      	ldr	r3, [pc, #136]	; (8002200 <move+0x140>)
 8002176:	2200      	movs	r2, #0
 8002178:	701a      	strb	r2, [r3, #0]
 800217a:	e016      	b.n	80021aa <move+0xea>
	}
	else if (button_count[14] == 1) {
 800217c:	4b1f      	ldr	r3, [pc, #124]	; (80021fc <move+0x13c>)
 800217e:	8b9b      	ldrh	r3, [r3, #28]
 8002180:	2b01      	cmp	r3, #1
 8002182:	d103      	bne.n	800218c <move+0xcc>
		firstState = goDown;
 8002184:	4b1e      	ldr	r3, [pc, #120]	; (8002200 <move+0x140>)
 8002186:	2201      	movs	r2, #1
 8002188:	701a      	strb	r2, [r3, #0]
 800218a:	e00e      	b.n	80021aa <move+0xea>
	}
	else if (button_count[11] == 1) {
 800218c:	4b1b      	ldr	r3, [pc, #108]	; (80021fc <move+0x13c>)
 800218e:	8adb      	ldrh	r3, [r3, #22]
 8002190:	2b01      	cmp	r3, #1
 8002192:	d103      	bne.n	800219c <move+0xdc>
		firstState = goRight;
 8002194:	4b1a      	ldr	r3, [pc, #104]	; (8002200 <move+0x140>)
 8002196:	2203      	movs	r2, #3
 8002198:	701a      	strb	r2, [r3, #0]
 800219a:	e006      	b.n	80021aa <move+0xea>
	}
	else if (button_count[9] == 1) {
 800219c:	4b17      	ldr	r3, [pc, #92]	; (80021fc <move+0x13c>)
 800219e:	8a5b      	ldrh	r3, [r3, #18]
 80021a0:	2b01      	cmp	r3, #1
 80021a2:	d102      	bne.n	80021aa <move+0xea>
		firstState = goLeft;
 80021a4:	4b16      	ldr	r3, [pc, #88]	; (8002200 <move+0x140>)
 80021a6:	2202      	movs	r2, #2
 80021a8:	701a      	strb	r2, [r3, #0]
	}
	switch (firstState) {
 80021aa:	4b15      	ldr	r3, [pc, #84]	; (8002200 <move+0x140>)
 80021ac:	781b      	ldrb	r3, [r3, #0]
 80021ae:	2b03      	cmp	r3, #3
 80021b0:	d00c      	beq.n	80021cc <move+0x10c>
 80021b2:	2b03      	cmp	r3, #3
 80021b4:	dc0d      	bgt.n	80021d2 <move+0x112>
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d002      	beq.n	80021c0 <move+0x100>
 80021ba:	2b01      	cmp	r3, #1
 80021bc:	d003      	beq.n	80021c6 <move+0x106>
 80021be:	e008      	b.n	80021d2 <move+0x112>
		case goUp:
			up();
 80021c0:	f7ff fdda 	bl	8001d78 <up>
			break;
 80021c4:	e008      	b.n	80021d8 <move+0x118>
		case goDown:
			down();
 80021c6:	f7ff fe0b 	bl	8001de0 <down>
			break;
 80021ca:	e005      	b.n	80021d8 <move+0x118>
		case goRight:
			right();
 80021cc:	f7ff fd6c 	bl	8001ca8 <right>
			break;
 80021d0:	e002      	b.n	80021d8 <move+0x118>
		default:
			left();
 80021d2:	f7ff fd9d 	bl	8001d10 <left>
			break;
 80021d6:	bf00      	nop
	}
}
 80021d8:	bd80      	pop	{r7, pc}
 80021da:	bf00      	nop
 80021dc:	20000014 	.word	0x20000014
 80021e0:	20000010 	.word	0x20000010
 80021e4:	20000018 	.word	0x20000018
 80021e8:	20000016 	.word	0x20000016
 80021ec:	20000012 	.word	0x20000012
 80021f0:	2000001a 	.word	0x2000001a
 80021f4:	200000ba 	.word	0x200000ba
 80021f8:	cccccccd 	.word	0xcccccccd
 80021fc:	2000017c 	.word	0x2000017c
 8002200:	200000bc 	.word	0x200000bc

08002204 <wall>:

void wall() {
 8002204:	b580      	push	{r7, lr}
 8002206:	b082      	sub	sp, #8
 8002208:	af02      	add	r7, sp, #8
	lcd_DrawRectangle(0, 0, x_max, y_max, RED); //TẠO TƯỜNG
 800220a:	4b07      	ldr	r3, [pc, #28]	; (8002228 <wall+0x24>)
 800220c:	881a      	ldrh	r2, [r3, #0]
 800220e:	4b07      	ldr	r3, [pc, #28]	; (800222c <wall+0x28>)
 8002210:	881b      	ldrh	r3, [r3, #0]
 8002212:	f44f 4178 	mov.w	r1, #63488	; 0xf800
 8002216:	9100      	str	r1, [sp, #0]
 8002218:	2100      	movs	r1, #0
 800221a:	2000      	movs	r0, #0
 800221c:	f7fe ff5b 	bl	80010d6 <lcd_DrawRectangle>
}
 8002220:	bf00      	nop
 8002222:	46bd      	mov	sp, r7
 8002224:	bd80      	pop	{r7, pc}
 8002226:	bf00      	nop
 8002228:	20000010 	.word	0x20000010
 800222c:	20000012 	.word	0x20000012

08002230 <timer_init>:

uint16_t flag_timer2 = 0;
uint16_t timer2_counter = 0;
uint16_t timer2_MUL = 0;

void timer_init(){
 8002230:	b580      	push	{r7, lr}
 8002232:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start_IT(&htim2);
 8002234:	4803      	ldr	r0, [pc, #12]	; (8002244 <timer_init+0x14>)
 8002236:	f003 fa81 	bl	800573c <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start(&htim1);
 800223a:	4803      	ldr	r0, [pc, #12]	; (8002248 <timer_init+0x18>)
 800223c:	f003 fa16 	bl	800566c <HAL_TIM_Base_Start>
}
 8002240:	bf00      	nop
 8002242:	bd80      	pop	{r7, pc}
 8002244:	20000368 	.word	0x20000368
 8002248:	20000320 	.word	0x20000320

0800224c <setTimer2>:

void timer_EnableDelayUs(){
	HAL_TIM_Base_Start(&htim1);
}

void setTimer2(uint16_t duration){
 800224c:	b480      	push	{r7}
 800224e:	b083      	sub	sp, #12
 8002250:	af00      	add	r7, sp, #0
 8002252:	4603      	mov	r3, r0
 8002254:	80fb      	strh	r3, [r7, #6]
	timer2_MUL = duration/TIMER_CYCLE_2;
 8002256:	4a08      	ldr	r2, [pc, #32]	; (8002278 <setTimer2+0x2c>)
 8002258:	88fb      	ldrh	r3, [r7, #6]
 800225a:	8013      	strh	r3, [r2, #0]
	timer2_counter = timer2_MUL;
 800225c:	4b06      	ldr	r3, [pc, #24]	; (8002278 <setTimer2+0x2c>)
 800225e:	881a      	ldrh	r2, [r3, #0]
 8002260:	4b06      	ldr	r3, [pc, #24]	; (800227c <setTimer2+0x30>)
 8002262:	801a      	strh	r2, [r3, #0]
	flag_timer2 = 0;
 8002264:	4b06      	ldr	r3, [pc, #24]	; (8002280 <setTimer2+0x34>)
 8002266:	2200      	movs	r2, #0
 8002268:	801a      	strh	r2, [r3, #0]
}
 800226a:	bf00      	nop
 800226c:	370c      	adds	r7, #12
 800226e:	46bd      	mov	sp, r7
 8002270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002274:	4770      	bx	lr
 8002276:	bf00      	nop
 8002278:	200000c2 	.word	0x200000c2
 800227c:	200000c0 	.word	0x200000c0
 8002280:	200000be 	.word	0x200000be

08002284 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8002284:	b580      	push	{r7, lr}
 8002286:	b082      	sub	sp, #8
 8002288:	af00      	add	r7, sp, #0
 800228a:	6078      	str	r0, [r7, #4]
	if(htim->Instance == TIM2){
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002294:	d116      	bne.n	80022c4 <HAL_TIM_PeriodElapsedCallback+0x40>
		if(timer2_counter > 0){
 8002296:	4b0d      	ldr	r3, [pc, #52]	; (80022cc <HAL_TIM_PeriodElapsedCallback+0x48>)
 8002298:	881b      	ldrh	r3, [r3, #0]
 800229a:	2b00      	cmp	r3, #0
 800229c:	d010      	beq.n	80022c0 <HAL_TIM_PeriodElapsedCallback+0x3c>
			timer2_counter--;
 800229e:	4b0b      	ldr	r3, [pc, #44]	; (80022cc <HAL_TIM_PeriodElapsedCallback+0x48>)
 80022a0:	881b      	ldrh	r3, [r3, #0]
 80022a2:	3b01      	subs	r3, #1
 80022a4:	b29a      	uxth	r2, r3
 80022a6:	4b09      	ldr	r3, [pc, #36]	; (80022cc <HAL_TIM_PeriodElapsedCallback+0x48>)
 80022a8:	801a      	strh	r2, [r3, #0]
			if(timer2_counter == 0) {
 80022aa:	4b08      	ldr	r3, [pc, #32]	; (80022cc <HAL_TIM_PeriodElapsedCallback+0x48>)
 80022ac:	881b      	ldrh	r3, [r3, #0]
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d106      	bne.n	80022c0 <HAL_TIM_PeriodElapsedCallback+0x3c>
				flag_timer2 = 1;
 80022b2:	4b07      	ldr	r3, [pc, #28]	; (80022d0 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 80022b4:	2201      	movs	r2, #1
 80022b6:	801a      	strh	r2, [r3, #0]
				timer2_counter = timer2_MUL;
 80022b8:	4b06      	ldr	r3, [pc, #24]	; (80022d4 <HAL_TIM_PeriodElapsedCallback+0x50>)
 80022ba:	881a      	ldrh	r2, [r3, #0]
 80022bc:	4b03      	ldr	r3, [pc, #12]	; (80022cc <HAL_TIM_PeriodElapsedCallback+0x48>)
 80022be:	801a      	strh	r2, [r3, #0]
			}
		}
		led7_Scan();
 80022c0:	f7ff fa9e 	bl	8001800 <led7_Scan>
	}
}
 80022c4:	bf00      	nop
 80022c6:	3708      	adds	r7, #8
 80022c8:	46bd      	mov	sp, r7
 80022ca:	bd80      	pop	{r7, pc}
 80022cc:	200000c0 	.word	0x200000c0
 80022d0:	200000be 	.word	0x200000be
 80022d4:	200000c2 	.word	0x200000c2

080022d8 <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 80022dc:	4b17      	ldr	r3, [pc, #92]	; (800233c <MX_SPI1_Init+0x64>)
 80022de:	4a18      	ldr	r2, [pc, #96]	; (8002340 <MX_SPI1_Init+0x68>)
 80022e0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80022e2:	4b16      	ldr	r3, [pc, #88]	; (800233c <MX_SPI1_Init+0x64>)
 80022e4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80022e8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80022ea:	4b14      	ldr	r3, [pc, #80]	; (800233c <MX_SPI1_Init+0x64>)
 80022ec:	2200      	movs	r2, #0
 80022ee:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80022f0:	4b12      	ldr	r3, [pc, #72]	; (800233c <MX_SPI1_Init+0x64>)
 80022f2:	2200      	movs	r2, #0
 80022f4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80022f6:	4b11      	ldr	r3, [pc, #68]	; (800233c <MX_SPI1_Init+0x64>)
 80022f8:	2200      	movs	r2, #0
 80022fa:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80022fc:	4b0f      	ldr	r3, [pc, #60]	; (800233c <MX_SPI1_Init+0x64>)
 80022fe:	2200      	movs	r2, #0
 8002300:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002302:	4b0e      	ldr	r3, [pc, #56]	; (800233c <MX_SPI1_Init+0x64>)
 8002304:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002308:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800230a:	4b0c      	ldr	r3, [pc, #48]	; (800233c <MX_SPI1_Init+0x64>)
 800230c:	2200      	movs	r2, #0
 800230e:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002310:	4b0a      	ldr	r3, [pc, #40]	; (800233c <MX_SPI1_Init+0x64>)
 8002312:	2200      	movs	r2, #0
 8002314:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002316:	4b09      	ldr	r3, [pc, #36]	; (800233c <MX_SPI1_Init+0x64>)
 8002318:	2200      	movs	r2, #0
 800231a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800231c:	4b07      	ldr	r3, [pc, #28]	; (800233c <MX_SPI1_Init+0x64>)
 800231e:	2200      	movs	r2, #0
 8002320:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8002322:	4b06      	ldr	r3, [pc, #24]	; (800233c <MX_SPI1_Init+0x64>)
 8002324:	220a      	movs	r2, #10
 8002326:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002328:	4804      	ldr	r0, [pc, #16]	; (800233c <MX_SPI1_Init+0x64>)
 800232a:	f002 fb63 	bl	80049f4 <HAL_SPI_Init>
 800232e:	4603      	mov	r3, r0
 8002330:	2b00      	cmp	r3, #0
 8002332:	d001      	beq.n	8002338 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8002334:	f7ff fbda 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002338:	bf00      	nop
 800233a:	bd80      	pop	{r7, pc}
 800233c:	20000280 	.word	0x20000280
 8002340:	40013000 	.word	0x40013000

08002344 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002344:	b580      	push	{r7, lr}
 8002346:	b08a      	sub	sp, #40	; 0x28
 8002348:	af00      	add	r7, sp, #0
 800234a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800234c:	f107 0314 	add.w	r3, r7, #20
 8002350:	2200      	movs	r2, #0
 8002352:	601a      	str	r2, [r3, #0]
 8002354:	605a      	str	r2, [r3, #4]
 8002356:	609a      	str	r2, [r3, #8]
 8002358:	60da      	str	r2, [r3, #12]
 800235a:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	4a19      	ldr	r2, [pc, #100]	; (80023c8 <HAL_SPI_MspInit+0x84>)
 8002362:	4293      	cmp	r3, r2
 8002364:	d12b      	bne.n	80023be <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002366:	2300      	movs	r3, #0
 8002368:	613b      	str	r3, [r7, #16]
 800236a:	4b18      	ldr	r3, [pc, #96]	; (80023cc <HAL_SPI_MspInit+0x88>)
 800236c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800236e:	4a17      	ldr	r2, [pc, #92]	; (80023cc <HAL_SPI_MspInit+0x88>)
 8002370:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002374:	6453      	str	r3, [r2, #68]	; 0x44
 8002376:	4b15      	ldr	r3, [pc, #84]	; (80023cc <HAL_SPI_MspInit+0x88>)
 8002378:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800237a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800237e:	613b      	str	r3, [r7, #16]
 8002380:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002382:	2300      	movs	r3, #0
 8002384:	60fb      	str	r3, [r7, #12]
 8002386:	4b11      	ldr	r3, [pc, #68]	; (80023cc <HAL_SPI_MspInit+0x88>)
 8002388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800238a:	4a10      	ldr	r2, [pc, #64]	; (80023cc <HAL_SPI_MspInit+0x88>)
 800238c:	f043 0302 	orr.w	r3, r3, #2
 8002390:	6313      	str	r3, [r2, #48]	; 0x30
 8002392:	4b0e      	ldr	r3, [pc, #56]	; (80023cc <HAL_SPI_MspInit+0x88>)
 8002394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002396:	f003 0302 	and.w	r3, r3, #2
 800239a:	60fb      	str	r3, [r7, #12]
 800239c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PB3     ------> SPI1_SCK
    PB4     ------> SPI1_MISO
    PB5     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 800239e:	2338      	movs	r3, #56	; 0x38
 80023a0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023a2:	2302      	movs	r3, #2
 80023a4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023a6:	2300      	movs	r3, #0
 80023a8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023aa:	2303      	movs	r3, #3
 80023ac:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80023ae:	2305      	movs	r3, #5
 80023b0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023b2:	f107 0314 	add.w	r3, r7, #20
 80023b6:	4619      	mov	r1, r3
 80023b8:	4805      	ldr	r0, [pc, #20]	; (80023d0 <HAL_SPI_MspInit+0x8c>)
 80023ba:	f001 fbad 	bl	8003b18 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 80023be:	bf00      	nop
 80023c0:	3728      	adds	r7, #40	; 0x28
 80023c2:	46bd      	mov	sp, r7
 80023c4:	bd80      	pop	{r7, pc}
 80023c6:	bf00      	nop
 80023c8:	40013000 	.word	0x40013000
 80023cc:	40023800 	.word	0x40023800
 80023d0:	40020400 	.word	0x40020400

080023d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023d4:	b480      	push	{r7}
 80023d6:	b083      	sub	sp, #12
 80023d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023da:	2300      	movs	r3, #0
 80023dc:	607b      	str	r3, [r7, #4]
 80023de:	4b10      	ldr	r3, [pc, #64]	; (8002420 <HAL_MspInit+0x4c>)
 80023e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80023e2:	4a0f      	ldr	r2, [pc, #60]	; (8002420 <HAL_MspInit+0x4c>)
 80023e4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80023e8:	6453      	str	r3, [r2, #68]	; 0x44
 80023ea:	4b0d      	ldr	r3, [pc, #52]	; (8002420 <HAL_MspInit+0x4c>)
 80023ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80023ee:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80023f2:	607b      	str	r3, [r7, #4]
 80023f4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80023f6:	2300      	movs	r3, #0
 80023f8:	603b      	str	r3, [r7, #0]
 80023fa:	4b09      	ldr	r3, [pc, #36]	; (8002420 <HAL_MspInit+0x4c>)
 80023fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023fe:	4a08      	ldr	r2, [pc, #32]	; (8002420 <HAL_MspInit+0x4c>)
 8002400:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002404:	6413      	str	r3, [r2, #64]	; 0x40
 8002406:	4b06      	ldr	r3, [pc, #24]	; (8002420 <HAL_MspInit+0x4c>)
 8002408:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800240a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800240e:	603b      	str	r3, [r7, #0]
 8002410:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002412:	bf00      	nop
 8002414:	370c      	adds	r7, #12
 8002416:	46bd      	mov	sp, r7
 8002418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800241c:	4770      	bx	lr
 800241e:	bf00      	nop
 8002420:	40023800 	.word	0x40023800

08002424 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002424:	b480      	push	{r7}
 8002426:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002428:	e7fe      	b.n	8002428 <NMI_Handler+0x4>

0800242a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800242a:	b480      	push	{r7}
 800242c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800242e:	e7fe      	b.n	800242e <HardFault_Handler+0x4>

08002430 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002430:	b480      	push	{r7}
 8002432:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002434:	e7fe      	b.n	8002434 <MemManage_Handler+0x4>

08002436 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002436:	b480      	push	{r7}
 8002438:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800243a:	e7fe      	b.n	800243a <BusFault_Handler+0x4>

0800243c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800243c:	b480      	push	{r7}
 800243e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002440:	e7fe      	b.n	8002440 <UsageFault_Handler+0x4>

08002442 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002442:	b480      	push	{r7}
 8002444:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002446:	bf00      	nop
 8002448:	46bd      	mov	sp, r7
 800244a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800244e:	4770      	bx	lr

08002450 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002450:	b480      	push	{r7}
 8002452:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002454:	bf00      	nop
 8002456:	46bd      	mov	sp, r7
 8002458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800245c:	4770      	bx	lr

0800245e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800245e:	b480      	push	{r7}
 8002460:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002462:	bf00      	nop
 8002464:	46bd      	mov	sp, r7
 8002466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800246a:	4770      	bx	lr

0800246c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800246c:	b580      	push	{r7, lr}
 800246e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002470:	f000 fc1e 	bl	8002cb0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002474:	bf00      	nop
 8002476:	bd80      	pop	{r7, pc}

08002478 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002478:	b580      	push	{r7, lr}
 800247a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800247c:	4802      	ldr	r0, [pc, #8]	; (8002488 <TIM2_IRQHandler+0x10>)
 800247e:	f003 fa26 	bl	80058ce <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002482:	bf00      	nop
 8002484:	bd80      	pop	{r7, pc}
 8002486:	bf00      	nop
 8002488:	20000368 	.word	0x20000368

0800248c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 800248c:	b580      	push	{r7, lr}
 800248e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002490:	4802      	ldr	r0, [pc, #8]	; (800249c <USART1_IRQHandler+0x10>)
 8002492:	f004 f961 	bl	8006758 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002496:	bf00      	nop
 8002498:	bd80      	pop	{r7, pc}
 800249a:	bf00      	nop
 800249c:	200003b0 	.word	0x200003b0

080024a0 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80024a0:	b580      	push	{r7, lr}
 80024a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80024a4:	4802      	ldr	r0, [pc, #8]	; (80024b0 <USART2_IRQHandler+0x10>)
 80024a6:	f004 f957 	bl	8006758 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80024aa:	bf00      	nop
 80024ac:	bd80      	pop	{r7, pc}
 80024ae:	bf00      	nop
 80024b0:	200003f4 	.word	0x200003f4

080024b4 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80024b4:	b580      	push	{r7, lr}
 80024b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80024b8:	4802      	ldr	r0, [pc, #8]	; (80024c4 <DMA2_Stream0_IRQHandler+0x10>)
 80024ba:	f001 f8f1 	bl	80036a0 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80024be:	bf00      	nop
 80024c0:	bd80      	pop	{r7, pc}
 80024c2:	bf00      	nop
 80024c4:	2000011c 	.word	0x2000011c

080024c8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80024c8:	b480      	push	{r7}
 80024ca:	af00      	add	r7, sp, #0
	return 1;
 80024cc:	2301      	movs	r3, #1
}
 80024ce:	4618      	mov	r0, r3
 80024d0:	46bd      	mov	sp, r7
 80024d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024d6:	4770      	bx	lr

080024d8 <_kill>:

int _kill(int pid, int sig)
{
 80024d8:	b580      	push	{r7, lr}
 80024da:	b082      	sub	sp, #8
 80024dc:	af00      	add	r7, sp, #0
 80024de:	6078      	str	r0, [r7, #4]
 80024e0:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80024e2:	f005 f8c1 	bl	8007668 <__errno>
 80024e6:	4603      	mov	r3, r0
 80024e8:	2216      	movs	r2, #22
 80024ea:	601a      	str	r2, [r3, #0]
	return -1;
 80024ec:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024f0:	4618      	mov	r0, r3
 80024f2:	3708      	adds	r7, #8
 80024f4:	46bd      	mov	sp, r7
 80024f6:	bd80      	pop	{r7, pc}

080024f8 <_exit>:

void _exit (int status)
{
 80024f8:	b580      	push	{r7, lr}
 80024fa:	b082      	sub	sp, #8
 80024fc:	af00      	add	r7, sp, #0
 80024fe:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002500:	f04f 31ff 	mov.w	r1, #4294967295
 8002504:	6878      	ldr	r0, [r7, #4]
 8002506:	f7ff ffe7 	bl	80024d8 <_kill>
	while (1) {}		/* Make sure we hang here */
 800250a:	e7fe      	b.n	800250a <_exit+0x12>

0800250c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800250c:	b580      	push	{r7, lr}
 800250e:	b086      	sub	sp, #24
 8002510:	af00      	add	r7, sp, #0
 8002512:	60f8      	str	r0, [r7, #12]
 8002514:	60b9      	str	r1, [r7, #8]
 8002516:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002518:	2300      	movs	r3, #0
 800251a:	617b      	str	r3, [r7, #20]
 800251c:	e00a      	b.n	8002534 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800251e:	f3af 8000 	nop.w
 8002522:	4601      	mov	r1, r0
 8002524:	68bb      	ldr	r3, [r7, #8]
 8002526:	1c5a      	adds	r2, r3, #1
 8002528:	60ba      	str	r2, [r7, #8]
 800252a:	b2ca      	uxtb	r2, r1
 800252c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800252e:	697b      	ldr	r3, [r7, #20]
 8002530:	3301      	adds	r3, #1
 8002532:	617b      	str	r3, [r7, #20]
 8002534:	697a      	ldr	r2, [r7, #20]
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	429a      	cmp	r2, r3
 800253a:	dbf0      	blt.n	800251e <_read+0x12>
	}

return len;
 800253c:	687b      	ldr	r3, [r7, #4]
}
 800253e:	4618      	mov	r0, r3
 8002540:	3718      	adds	r7, #24
 8002542:	46bd      	mov	sp, r7
 8002544:	bd80      	pop	{r7, pc}

08002546 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002546:	b580      	push	{r7, lr}
 8002548:	b086      	sub	sp, #24
 800254a:	af00      	add	r7, sp, #0
 800254c:	60f8      	str	r0, [r7, #12]
 800254e:	60b9      	str	r1, [r7, #8]
 8002550:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002552:	2300      	movs	r3, #0
 8002554:	617b      	str	r3, [r7, #20]
 8002556:	e009      	b.n	800256c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002558:	68bb      	ldr	r3, [r7, #8]
 800255a:	1c5a      	adds	r2, r3, #1
 800255c:	60ba      	str	r2, [r7, #8]
 800255e:	781b      	ldrb	r3, [r3, #0]
 8002560:	4618      	mov	r0, r3
 8002562:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002566:	697b      	ldr	r3, [r7, #20]
 8002568:	3301      	adds	r3, #1
 800256a:	617b      	str	r3, [r7, #20]
 800256c:	697a      	ldr	r2, [r7, #20]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	429a      	cmp	r2, r3
 8002572:	dbf1      	blt.n	8002558 <_write+0x12>
	}
	return len;
 8002574:	687b      	ldr	r3, [r7, #4]
}
 8002576:	4618      	mov	r0, r3
 8002578:	3718      	adds	r7, #24
 800257a:	46bd      	mov	sp, r7
 800257c:	bd80      	pop	{r7, pc}

0800257e <_close>:

int _close(int file)
{
 800257e:	b480      	push	{r7}
 8002580:	b083      	sub	sp, #12
 8002582:	af00      	add	r7, sp, #0
 8002584:	6078      	str	r0, [r7, #4]
	return -1;
 8002586:	f04f 33ff 	mov.w	r3, #4294967295
}
 800258a:	4618      	mov	r0, r3
 800258c:	370c      	adds	r7, #12
 800258e:	46bd      	mov	sp, r7
 8002590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002594:	4770      	bx	lr

08002596 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002596:	b480      	push	{r7}
 8002598:	b083      	sub	sp, #12
 800259a:	af00      	add	r7, sp, #0
 800259c:	6078      	str	r0, [r7, #4]
 800259e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80025a0:	683b      	ldr	r3, [r7, #0]
 80025a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80025a6:	605a      	str	r2, [r3, #4]
	return 0;
 80025a8:	2300      	movs	r3, #0
}
 80025aa:	4618      	mov	r0, r3
 80025ac:	370c      	adds	r7, #12
 80025ae:	46bd      	mov	sp, r7
 80025b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025b4:	4770      	bx	lr

080025b6 <_isatty>:

int _isatty(int file)
{
 80025b6:	b480      	push	{r7}
 80025b8:	b083      	sub	sp, #12
 80025ba:	af00      	add	r7, sp, #0
 80025bc:	6078      	str	r0, [r7, #4]
	return 1;
 80025be:	2301      	movs	r3, #1
}
 80025c0:	4618      	mov	r0, r3
 80025c2:	370c      	adds	r7, #12
 80025c4:	46bd      	mov	sp, r7
 80025c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ca:	4770      	bx	lr

080025cc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80025cc:	b480      	push	{r7}
 80025ce:	b085      	sub	sp, #20
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	60f8      	str	r0, [r7, #12]
 80025d4:	60b9      	str	r1, [r7, #8]
 80025d6:	607a      	str	r2, [r7, #4]
	return 0;
 80025d8:	2300      	movs	r3, #0
}
 80025da:	4618      	mov	r0, r3
 80025dc:	3714      	adds	r7, #20
 80025de:	46bd      	mov	sp, r7
 80025e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e4:	4770      	bx	lr
	...

080025e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80025e8:	b580      	push	{r7, lr}
 80025ea:	b086      	sub	sp, #24
 80025ec:	af00      	add	r7, sp, #0
 80025ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80025f0:	4a14      	ldr	r2, [pc, #80]	; (8002644 <_sbrk+0x5c>)
 80025f2:	4b15      	ldr	r3, [pc, #84]	; (8002648 <_sbrk+0x60>)
 80025f4:	1ad3      	subs	r3, r2, r3
 80025f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80025fc:	4b13      	ldr	r3, [pc, #76]	; (800264c <_sbrk+0x64>)
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	2b00      	cmp	r3, #0
 8002602:	d102      	bne.n	800260a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002604:	4b11      	ldr	r3, [pc, #68]	; (800264c <_sbrk+0x64>)
 8002606:	4a12      	ldr	r2, [pc, #72]	; (8002650 <_sbrk+0x68>)
 8002608:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800260a:	4b10      	ldr	r3, [pc, #64]	; (800264c <_sbrk+0x64>)
 800260c:	681a      	ldr	r2, [r3, #0]
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	4413      	add	r3, r2
 8002612:	693a      	ldr	r2, [r7, #16]
 8002614:	429a      	cmp	r2, r3
 8002616:	d207      	bcs.n	8002628 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002618:	f005 f826 	bl	8007668 <__errno>
 800261c:	4603      	mov	r3, r0
 800261e:	220c      	movs	r2, #12
 8002620:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002622:	f04f 33ff 	mov.w	r3, #4294967295
 8002626:	e009      	b.n	800263c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002628:	4b08      	ldr	r3, [pc, #32]	; (800264c <_sbrk+0x64>)
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800262e:	4b07      	ldr	r3, [pc, #28]	; (800264c <_sbrk+0x64>)
 8002630:	681a      	ldr	r2, [r3, #0]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	4413      	add	r3, r2
 8002636:	4a05      	ldr	r2, [pc, #20]	; (800264c <_sbrk+0x64>)
 8002638:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800263a:	68fb      	ldr	r3, [r7, #12]
}
 800263c:	4618      	mov	r0, r3
 800263e:	3718      	adds	r7, #24
 8002640:	46bd      	mov	sp, r7
 8002642:	bd80      	pop	{r7, pc}
 8002644:	20020000 	.word	0x20020000
 8002648:	00000400 	.word	0x00000400
 800264c:	200000c4 	.word	0x200000c4
 8002650:	20000450 	.word	0x20000450

08002654 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002654:	b480      	push	{r7}
 8002656:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002658:	4b06      	ldr	r3, [pc, #24]	; (8002674 <SystemInit+0x20>)
 800265a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800265e:	4a05      	ldr	r2, [pc, #20]	; (8002674 <SystemInit+0x20>)
 8002660:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002664:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002668:	bf00      	nop
 800266a:	46bd      	mov	sp, r7
 800266c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002670:	4770      	bx	lr
 8002672:	bf00      	nop
 8002674:	e000ed00 	.word	0xe000ed00

08002678 <MX_TIM1_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim13;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8002678:	b580      	push	{r7, lr}
 800267a:	b086      	sub	sp, #24
 800267c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800267e:	f107 0308 	add.w	r3, r7, #8
 8002682:	2200      	movs	r2, #0
 8002684:	601a      	str	r2, [r3, #0]
 8002686:	605a      	str	r2, [r3, #4]
 8002688:	609a      	str	r2, [r3, #8]
 800268a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800268c:	463b      	mov	r3, r7
 800268e:	2200      	movs	r2, #0
 8002690:	601a      	str	r2, [r3, #0]
 8002692:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002694:	4b1e      	ldr	r3, [pc, #120]	; (8002710 <MX_TIM1_Init+0x98>)
 8002696:	4a1f      	ldr	r2, [pc, #124]	; (8002714 <MX_TIM1_Init+0x9c>)
 8002698:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 84-1;
 800269a:	4b1d      	ldr	r3, [pc, #116]	; (8002710 <MX_TIM1_Init+0x98>)
 800269c:	2253      	movs	r2, #83	; 0x53
 800269e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026a0:	4b1b      	ldr	r3, [pc, #108]	; (8002710 <MX_TIM1_Init+0x98>)
 80026a2:	2200      	movs	r2, #0
 80026a4:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 80026a6:	4b1a      	ldr	r3, [pc, #104]	; (8002710 <MX_TIM1_Init+0x98>)
 80026a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80026ac:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80026ae:	4b18      	ldr	r3, [pc, #96]	; (8002710 <MX_TIM1_Init+0x98>)
 80026b0:	2200      	movs	r2, #0
 80026b2:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80026b4:	4b16      	ldr	r3, [pc, #88]	; (8002710 <MX_TIM1_Init+0x98>)
 80026b6:	2200      	movs	r2, #0
 80026b8:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026ba:	4b15      	ldr	r3, [pc, #84]	; (8002710 <MX_TIM1_Init+0x98>)
 80026bc:	2200      	movs	r2, #0
 80026be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80026c0:	4813      	ldr	r0, [pc, #76]	; (8002710 <MX_TIM1_Init+0x98>)
 80026c2:	f002 ff83 	bl	80055cc <HAL_TIM_Base_Init>
 80026c6:	4603      	mov	r3, r0
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d001      	beq.n	80026d0 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 80026cc:	f7ff fa0e 	bl	8001aec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80026d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026d4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80026d6:	f107 0308 	add.w	r3, r7, #8
 80026da:	4619      	mov	r1, r3
 80026dc:	480c      	ldr	r0, [pc, #48]	; (8002710 <MX_TIM1_Init+0x98>)
 80026de:	f003 fac1 	bl	8005c64 <HAL_TIM_ConfigClockSource>
 80026e2:	4603      	mov	r3, r0
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d001      	beq.n	80026ec <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 80026e8:	f7ff fa00 	bl	8001aec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80026ec:	2300      	movs	r3, #0
 80026ee:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80026f0:	2300      	movs	r3, #0
 80026f2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80026f4:	463b      	mov	r3, r7
 80026f6:	4619      	mov	r1, r3
 80026f8:	4805      	ldr	r0, [pc, #20]	; (8002710 <MX_TIM1_Init+0x98>)
 80026fa:	f003 fe8d 	bl	8006418 <HAL_TIMEx_MasterConfigSynchronization>
 80026fe:	4603      	mov	r3, r0
 8002700:	2b00      	cmp	r3, #0
 8002702:	d001      	beq.n	8002708 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8002704:	f7ff f9f2 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8002708:	bf00      	nop
 800270a:	3718      	adds	r7, #24
 800270c:	46bd      	mov	sp, r7
 800270e:	bd80      	pop	{r7, pc}
 8002710:	20000320 	.word	0x20000320
 8002714:	40010000 	.word	0x40010000

08002718 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002718:	b580      	push	{r7, lr}
 800271a:	b086      	sub	sp, #24
 800271c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800271e:	f107 0308 	add.w	r3, r7, #8
 8002722:	2200      	movs	r2, #0
 8002724:	601a      	str	r2, [r3, #0]
 8002726:	605a      	str	r2, [r3, #4]
 8002728:	609a      	str	r2, [r3, #8]
 800272a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800272c:	463b      	mov	r3, r7
 800272e:	2200      	movs	r2, #0
 8002730:	601a      	str	r2, [r3, #0]
 8002732:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002734:	4b1d      	ldr	r3, [pc, #116]	; (80027ac <MX_TIM2_Init+0x94>)
 8002736:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800273a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 840-1;
 800273c:	4b1b      	ldr	r3, [pc, #108]	; (80027ac <MX_TIM2_Init+0x94>)
 800273e:	f240 3247 	movw	r2, #839	; 0x347
 8002742:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002744:	4b19      	ldr	r3, [pc, #100]	; (80027ac <MX_TIM2_Init+0x94>)
 8002746:	2200      	movs	r2, #0
 8002748:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100-1;
 800274a:	4b18      	ldr	r3, [pc, #96]	; (80027ac <MX_TIM2_Init+0x94>)
 800274c:	2263      	movs	r2, #99	; 0x63
 800274e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002750:	4b16      	ldr	r3, [pc, #88]	; (80027ac <MX_TIM2_Init+0x94>)
 8002752:	2200      	movs	r2, #0
 8002754:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002756:	4b15      	ldr	r3, [pc, #84]	; (80027ac <MX_TIM2_Init+0x94>)
 8002758:	2200      	movs	r2, #0
 800275a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800275c:	4813      	ldr	r0, [pc, #76]	; (80027ac <MX_TIM2_Init+0x94>)
 800275e:	f002 ff35 	bl	80055cc <HAL_TIM_Base_Init>
 8002762:	4603      	mov	r3, r0
 8002764:	2b00      	cmp	r3, #0
 8002766:	d001      	beq.n	800276c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002768:	f7ff f9c0 	bl	8001aec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800276c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002770:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002772:	f107 0308 	add.w	r3, r7, #8
 8002776:	4619      	mov	r1, r3
 8002778:	480c      	ldr	r0, [pc, #48]	; (80027ac <MX_TIM2_Init+0x94>)
 800277a:	f003 fa73 	bl	8005c64 <HAL_TIM_ConfigClockSource>
 800277e:	4603      	mov	r3, r0
 8002780:	2b00      	cmp	r3, #0
 8002782:	d001      	beq.n	8002788 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002784:	f7ff f9b2 	bl	8001aec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002788:	2300      	movs	r3, #0
 800278a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800278c:	2300      	movs	r3, #0
 800278e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002790:	463b      	mov	r3, r7
 8002792:	4619      	mov	r1, r3
 8002794:	4805      	ldr	r0, [pc, #20]	; (80027ac <MX_TIM2_Init+0x94>)
 8002796:	f003 fe3f 	bl	8006418 <HAL_TIMEx_MasterConfigSynchronization>
 800279a:	4603      	mov	r3, r0
 800279c:	2b00      	cmp	r3, #0
 800279e:	d001      	beq.n	80027a4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80027a0:	f7ff f9a4 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80027a4:	bf00      	nop
 80027a6:	3718      	adds	r7, #24
 80027a8:	46bd      	mov	sp, r7
 80027aa:	bd80      	pop	{r7, pc}
 80027ac:	20000368 	.word	0x20000368

080027b0 <MX_TIM13_Init>:
/* TIM13 init function */
void MX_TIM13_Init(void)
{
 80027b0:	b580      	push	{r7, lr}
 80027b2:	b088      	sub	sp, #32
 80027b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 80027b6:	1d3b      	adds	r3, r7, #4
 80027b8:	2200      	movs	r2, #0
 80027ba:	601a      	str	r2, [r3, #0]
 80027bc:	605a      	str	r2, [r3, #4]
 80027be:	609a      	str	r2, [r3, #8]
 80027c0:	60da      	str	r2, [r3, #12]
 80027c2:	611a      	str	r2, [r3, #16]
 80027c4:	615a      	str	r2, [r3, #20]
 80027c6:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80027c8:	4b1e      	ldr	r3, [pc, #120]	; (8002844 <MX_TIM13_Init+0x94>)
 80027ca:	4a1f      	ldr	r2, [pc, #124]	; (8002848 <MX_TIM13_Init+0x98>)
 80027cc:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 840-1;
 80027ce:	4b1d      	ldr	r3, [pc, #116]	; (8002844 <MX_TIM13_Init+0x94>)
 80027d0:	f240 3247 	movw	r2, #839	; 0x347
 80027d4:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027d6:	4b1b      	ldr	r3, [pc, #108]	; (8002844 <MX_TIM13_Init+0x94>)
 80027d8:	2200      	movs	r2, #0
 80027da:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 100-1;
 80027dc:	4b19      	ldr	r3, [pc, #100]	; (8002844 <MX_TIM13_Init+0x94>)
 80027de:	2263      	movs	r2, #99	; 0x63
 80027e0:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80027e2:	4b18      	ldr	r3, [pc, #96]	; (8002844 <MX_TIM13_Init+0x94>)
 80027e4:	2200      	movs	r2, #0
 80027e6:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027e8:	4b16      	ldr	r3, [pc, #88]	; (8002844 <MX_TIM13_Init+0x94>)
 80027ea:	2200      	movs	r2, #0
 80027ec:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 80027ee:	4815      	ldr	r0, [pc, #84]	; (8002844 <MX_TIM13_Init+0x94>)
 80027f0:	f002 feec 	bl	80055cc <HAL_TIM_Base_Init>
 80027f4:	4603      	mov	r3, r0
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	d001      	beq.n	80027fe <MX_TIM13_Init+0x4e>
  {
    Error_Handler();
 80027fa:	f7ff f977 	bl	8001aec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 80027fe:	4811      	ldr	r0, [pc, #68]	; (8002844 <MX_TIM13_Init+0x94>)
 8002800:	f003 f80c 	bl	800581c <HAL_TIM_PWM_Init>
 8002804:	4603      	mov	r3, r0
 8002806:	2b00      	cmp	r3, #0
 8002808:	d001      	beq.n	800280e <MX_TIM13_Init+0x5e>
  {
    Error_Handler();
 800280a:	f7ff f96f 	bl	8001aec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800280e:	2360      	movs	r3, #96	; 0x60
 8002810:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002812:	2300      	movs	r3, #0
 8002814:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002816:	2300      	movs	r3, #0
 8002818:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800281a:	2300      	movs	r3, #0
 800281c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800281e:	1d3b      	adds	r3, r7, #4
 8002820:	2200      	movs	r2, #0
 8002822:	4619      	mov	r1, r3
 8002824:	4807      	ldr	r0, [pc, #28]	; (8002844 <MX_TIM13_Init+0x94>)
 8002826:	f003 f95b 	bl	8005ae0 <HAL_TIM_PWM_ConfigChannel>
 800282a:	4603      	mov	r3, r0
 800282c:	2b00      	cmp	r3, #0
 800282e:	d001      	beq.n	8002834 <MX_TIM13_Init+0x84>
  {
    Error_Handler();
 8002830:	f7ff f95c 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8002834:	4803      	ldr	r0, [pc, #12]	; (8002844 <MX_TIM13_Init+0x94>)
 8002836:	f000 f85b 	bl	80028f0 <HAL_TIM_MspPostInit>

}
 800283a:	bf00      	nop
 800283c:	3720      	adds	r7, #32
 800283e:	46bd      	mov	sp, r7
 8002840:	bd80      	pop	{r7, pc}
 8002842:	bf00      	nop
 8002844:	200002d8 	.word	0x200002d8
 8002848:	40001c00 	.word	0x40001c00

0800284c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800284c:	b580      	push	{r7, lr}
 800284e:	b086      	sub	sp, #24
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	4a22      	ldr	r2, [pc, #136]	; (80028e4 <HAL_TIM_Base_MspInit+0x98>)
 800285a:	4293      	cmp	r3, r2
 800285c:	d10e      	bne.n	800287c <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800285e:	2300      	movs	r3, #0
 8002860:	617b      	str	r3, [r7, #20]
 8002862:	4b21      	ldr	r3, [pc, #132]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 8002864:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002866:	4a20      	ldr	r2, [pc, #128]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 8002868:	f043 0301 	orr.w	r3, r3, #1
 800286c:	6453      	str	r3, [r2, #68]	; 0x44
 800286e:	4b1e      	ldr	r3, [pc, #120]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 8002870:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002872:	f003 0301 	and.w	r3, r3, #1
 8002876:	617b      	str	r3, [r7, #20]
 8002878:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_TIM13_CLK_ENABLE();
  /* USER CODE BEGIN TIM13_MspInit 1 */

  /* USER CODE END TIM13_MspInit 1 */
  }
}
 800287a:	e02e      	b.n	80028da <HAL_TIM_Base_MspInit+0x8e>
  else if(tim_baseHandle->Instance==TIM2)
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002884:	d116      	bne.n	80028b4 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002886:	2300      	movs	r3, #0
 8002888:	613b      	str	r3, [r7, #16]
 800288a:	4b17      	ldr	r3, [pc, #92]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 800288c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800288e:	4a16      	ldr	r2, [pc, #88]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 8002890:	f043 0301 	orr.w	r3, r3, #1
 8002894:	6413      	str	r3, [r2, #64]	; 0x40
 8002896:	4b14      	ldr	r3, [pc, #80]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 8002898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800289a:	f003 0301 	and.w	r3, r3, #1
 800289e:	613b      	str	r3, [r7, #16]
 80028a0:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80028a2:	2200      	movs	r2, #0
 80028a4:	2100      	movs	r1, #0
 80028a6:	201c      	movs	r0, #28
 80028a8:	f000 fd83 	bl	80033b2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80028ac:	201c      	movs	r0, #28
 80028ae:	f000 fd9c 	bl	80033ea <HAL_NVIC_EnableIRQ>
}
 80028b2:	e012      	b.n	80028da <HAL_TIM_Base_MspInit+0x8e>
  else if(tim_baseHandle->Instance==TIM13)
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	4a0c      	ldr	r2, [pc, #48]	; (80028ec <HAL_TIM_Base_MspInit+0xa0>)
 80028ba:	4293      	cmp	r3, r2
 80028bc:	d10d      	bne.n	80028da <HAL_TIM_Base_MspInit+0x8e>
    __HAL_RCC_TIM13_CLK_ENABLE();
 80028be:	2300      	movs	r3, #0
 80028c0:	60fb      	str	r3, [r7, #12]
 80028c2:	4b09      	ldr	r3, [pc, #36]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 80028c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028c6:	4a08      	ldr	r2, [pc, #32]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 80028c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80028cc:	6413      	str	r3, [r2, #64]	; 0x40
 80028ce:	4b06      	ldr	r3, [pc, #24]	; (80028e8 <HAL_TIM_Base_MspInit+0x9c>)
 80028d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80028d6:	60fb      	str	r3, [r7, #12]
 80028d8:	68fb      	ldr	r3, [r7, #12]
}
 80028da:	bf00      	nop
 80028dc:	3718      	adds	r7, #24
 80028de:	46bd      	mov	sp, r7
 80028e0:	bd80      	pop	{r7, pc}
 80028e2:	bf00      	nop
 80028e4:	40010000 	.word	0x40010000
 80028e8:	40023800 	.word	0x40023800
 80028ec:	40001c00 	.word	0x40001c00

080028f0 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b088      	sub	sp, #32
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028f8:	f107 030c 	add.w	r3, r7, #12
 80028fc:	2200      	movs	r2, #0
 80028fe:	601a      	str	r2, [r3, #0]
 8002900:	605a      	str	r2, [r3, #4]
 8002902:	609a      	str	r2, [r3, #8]
 8002904:	60da      	str	r2, [r3, #12]
 8002906:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM13)
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	4a12      	ldr	r2, [pc, #72]	; (8002958 <HAL_TIM_MspPostInit+0x68>)
 800290e:	4293      	cmp	r3, r2
 8002910:	d11e      	bne.n	8002950 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM13_MspPostInit 0 */

  /* USER CODE END TIM13_MspPostInit 0 */

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002912:	2300      	movs	r3, #0
 8002914:	60bb      	str	r3, [r7, #8]
 8002916:	4b11      	ldr	r3, [pc, #68]	; (800295c <HAL_TIM_MspPostInit+0x6c>)
 8002918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800291a:	4a10      	ldr	r2, [pc, #64]	; (800295c <HAL_TIM_MspPostInit+0x6c>)
 800291c:	f043 0320 	orr.w	r3, r3, #32
 8002920:	6313      	str	r3, [r2, #48]	; 0x30
 8002922:	4b0e      	ldr	r3, [pc, #56]	; (800295c <HAL_TIM_MspPostInit+0x6c>)
 8002924:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002926:	f003 0320 	and.w	r3, r3, #32
 800292a:	60bb      	str	r3, [r7, #8]
 800292c:	68bb      	ldr	r3, [r7, #8]
    /**TIM13 GPIO Configuration
    PF8     ------> TIM13_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800292e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002932:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002934:	2302      	movs	r3, #2
 8002936:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002938:	2300      	movs	r3, #0
 800293a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800293c:	2300      	movs	r3, #0
 800293e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 8002940:	2309      	movs	r3, #9
 8002942:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002944:	f107 030c 	add.w	r3, r7, #12
 8002948:	4619      	mov	r1, r3
 800294a:	4805      	ldr	r0, [pc, #20]	; (8002960 <HAL_TIM_MspPostInit+0x70>)
 800294c:	f001 f8e4 	bl	8003b18 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM13_MspPostInit 1 */

  /* USER CODE END TIM13_MspPostInit 1 */
  }

}
 8002950:	bf00      	nop
 8002952:	3720      	adds	r7, #32
 8002954:	46bd      	mov	sp, r7
 8002956:	bd80      	pop	{r7, pc}
 8002958:	40001c00 	.word	0x40001c00
 800295c:	40023800 	.word	0x40023800
 8002960:	40021400 	.word	0x40021400

08002964 <HAL_UART_RxCpltCallback>:

void uart_EspSendBytes(uint8_t* bytes, uint16_t size){
	HAL_UART_Transmit(&huart2, bytes, size, 10);
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8002964:	b580      	push	{r7, lr}
 8002966:	b082      	sub	sp, #8
 8002968:	af00      	add	r7, sp, #0
 800296a:	6078      	str	r0, [r7, #4]
	if(huart->Instance == USART1){
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4a19      	ldr	r2, [pc, #100]	; (80029d8 <HAL_UART_RxCpltCallback+0x74>)
 8002972:	4293      	cmp	r3, r2
 8002974:	d10a      	bne.n	800298c <HAL_UART_RxCpltCallback+0x28>
		// rs232 isr
		// can be modified
		HAL_UART_Transmit(&huart1, &receive_buffer1, 1, 10);
 8002976:	230a      	movs	r3, #10
 8002978:	2201      	movs	r2, #1
 800297a:	4918      	ldr	r1, [pc, #96]	; (80029dc <HAL_UART_RxCpltCallback+0x78>)
 800297c:	4818      	ldr	r0, [pc, #96]	; (80029e0 <HAL_UART_RxCpltCallback+0x7c>)
 800297e:	f003 fe28 	bl	80065d2 <HAL_UART_Transmit>

		// turn on the receive interrupt
		HAL_UART_Receive_IT(&huart1, &receive_buffer1, 1);
 8002982:	2201      	movs	r2, #1
 8002984:	4915      	ldr	r1, [pc, #84]	; (80029dc <HAL_UART_RxCpltCallback+0x78>)
 8002986:	4816      	ldr	r0, [pc, #88]	; (80029e0 <HAL_UART_RxCpltCallback+0x7c>)
 8002988:	f003 feb5 	bl	80066f6 <HAL_UART_Receive_IT>
	}

	if(huart->Instance == USART2){
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4a14      	ldr	r2, [pc, #80]	; (80029e4 <HAL_UART_RxCpltCallback+0x80>)
 8002992:	4293      	cmp	r3, r2
 8002994:	d11b      	bne.n	80029ce <HAL_UART_RxCpltCallback+0x6a>
		if(receive_buffer2 == 'O') check_esp = 1;
 8002996:	4b14      	ldr	r3, [pc, #80]	; (80029e8 <HAL_UART_RxCpltCallback+0x84>)
 8002998:	781b      	ldrb	r3, [r3, #0]
 800299a:	2b4f      	cmp	r3, #79	; 0x4f
 800299c:	d103      	bne.n	80029a6 <HAL_UART_RxCpltCallback+0x42>
 800299e:	4b13      	ldr	r3, [pc, #76]	; (80029ec <HAL_UART_RxCpltCallback+0x88>)
 80029a0:	2201      	movs	r2, #1
 80029a2:	701a      	strb	r2, [r3, #0]
 80029a4:	e00e      	b.n	80029c4 <HAL_UART_RxCpltCallback+0x60>
		else if(receive_buffer2 == 'a') light_status = 0;
 80029a6:	4b10      	ldr	r3, [pc, #64]	; (80029e8 <HAL_UART_RxCpltCallback+0x84>)
 80029a8:	781b      	ldrb	r3, [r3, #0]
 80029aa:	2b61      	cmp	r3, #97	; 0x61
 80029ac:	d103      	bne.n	80029b6 <HAL_UART_RxCpltCallback+0x52>
 80029ae:	4b10      	ldr	r3, [pc, #64]	; (80029f0 <HAL_UART_RxCpltCallback+0x8c>)
 80029b0:	2200      	movs	r2, #0
 80029b2:	701a      	strb	r2, [r3, #0]
 80029b4:	e006      	b.n	80029c4 <HAL_UART_RxCpltCallback+0x60>
		else if(receive_buffer2 == 'A') light_status = 1;
 80029b6:	4b0c      	ldr	r3, [pc, #48]	; (80029e8 <HAL_UART_RxCpltCallback+0x84>)
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	2b41      	cmp	r3, #65	; 0x41
 80029bc:	d102      	bne.n	80029c4 <HAL_UART_RxCpltCallback+0x60>
 80029be:	4b0c      	ldr	r3, [pc, #48]	; (80029f0 <HAL_UART_RxCpltCallback+0x8c>)
 80029c0:	2201      	movs	r2, #1
 80029c2:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &receive_buffer2, 1);
 80029c4:	2201      	movs	r2, #1
 80029c6:	4908      	ldr	r1, [pc, #32]	; (80029e8 <HAL_UART_RxCpltCallback+0x84>)
 80029c8:	480a      	ldr	r0, [pc, #40]	; (80029f4 <HAL_UART_RxCpltCallback+0x90>)
 80029ca:	f003 fe94 	bl	80066f6 <HAL_UART_Receive_IT>
	}
}
 80029ce:	bf00      	nop
 80029d0:	3708      	adds	r7, #8
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd80      	pop	{r7, pc}
 80029d6:	bf00      	nop
 80029d8:	40011000 	.word	0x40011000
 80029dc:	200000c8 	.word	0x200000c8
 80029e0:	200003b0 	.word	0x200003b0
 80029e4:	40004400 	.word	0x40004400
 80029e8:	200000c9 	.word	0x200000c9
 80029ec:	200000ca 	.word	0x200000ca
 80029f0:	200000b8 	.word	0x200000b8
 80029f4:	200003f4 	.word	0x200003f4

080029f8 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart2;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 80029f8:	b580      	push	{r7, lr}
 80029fa:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80029fc:	4b11      	ldr	r3, [pc, #68]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 80029fe:	4a12      	ldr	r2, [pc, #72]	; (8002a48 <MX_USART1_UART_Init+0x50>)
 8002a00:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002a02:	4b10      	ldr	r3, [pc, #64]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a04:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002a08:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002a0a:	4b0e      	ldr	r3, [pc, #56]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002a10:	4b0c      	ldr	r3, [pc, #48]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a12:	2200      	movs	r2, #0
 8002a14:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002a16:	4b0b      	ldr	r3, [pc, #44]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a18:	2200      	movs	r2, #0
 8002a1a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002a1c:	4b09      	ldr	r3, [pc, #36]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a1e:	220c      	movs	r2, #12
 8002a20:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a22:	4b08      	ldr	r3, [pc, #32]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a24:	2200      	movs	r2, #0
 8002a26:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a28:	4b06      	ldr	r3, [pc, #24]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002a2e:	4805      	ldr	r0, [pc, #20]	; (8002a44 <MX_USART1_UART_Init+0x4c>)
 8002a30:	f003 fd82 	bl	8006538 <HAL_UART_Init>
 8002a34:	4603      	mov	r3, r0
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d001      	beq.n	8002a3e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8002a3a:	f7ff f857 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002a3e:	bf00      	nop
 8002a40:	bd80      	pop	{r7, pc}
 8002a42:	bf00      	nop
 8002a44:	200003b0 	.word	0x200003b0
 8002a48:	40011000 	.word	0x40011000

08002a4c <MX_USART2_UART_Init>:
/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8002a4c:	b580      	push	{r7, lr}
 8002a4e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002a50:	4b11      	ldr	r3, [pc, #68]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a52:	4a12      	ldr	r2, [pc, #72]	; (8002a9c <MX_USART2_UART_Init+0x50>)
 8002a54:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002a56:	4b10      	ldr	r3, [pc, #64]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a58:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002a5c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002a5e:	4b0e      	ldr	r3, [pc, #56]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a60:	2200      	movs	r2, #0
 8002a62:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002a64:	4b0c      	ldr	r3, [pc, #48]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a66:	2200      	movs	r2, #0
 8002a68:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002a6a:	4b0b      	ldr	r3, [pc, #44]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002a70:	4b09      	ldr	r3, [pc, #36]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a72:	220c      	movs	r2, #12
 8002a74:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a76:	4b08      	ldr	r3, [pc, #32]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a78:	2200      	movs	r2, #0
 8002a7a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a7c:	4b06      	ldr	r3, [pc, #24]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a7e:	2200      	movs	r2, #0
 8002a80:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002a82:	4805      	ldr	r0, [pc, #20]	; (8002a98 <MX_USART2_UART_Init+0x4c>)
 8002a84:	f003 fd58 	bl	8006538 <HAL_UART_Init>
 8002a88:	4603      	mov	r3, r0
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d001      	beq.n	8002a92 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002a8e:	f7ff f82d 	bl	8001aec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002a92:	bf00      	nop
 8002a94:	bd80      	pop	{r7, pc}
 8002a96:	bf00      	nop
 8002a98:	200003f4 	.word	0x200003f4
 8002a9c:	40004400 	.word	0x40004400

08002aa0 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002aa0:	b580      	push	{r7, lr}
 8002aa2:	b08c      	sub	sp, #48	; 0x30
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002aa8:	f107 031c 	add.w	r3, r7, #28
 8002aac:	2200      	movs	r2, #0
 8002aae:	601a      	str	r2, [r3, #0]
 8002ab0:	605a      	str	r2, [r3, #4]
 8002ab2:	609a      	str	r2, [r3, #8]
 8002ab4:	60da      	str	r2, [r3, #12]
 8002ab6:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	4a3a      	ldr	r2, [pc, #232]	; (8002ba8 <HAL_UART_MspInit+0x108>)
 8002abe:	4293      	cmp	r3, r2
 8002ac0:	d135      	bne.n	8002b2e <HAL_UART_MspInit+0x8e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002ac2:	2300      	movs	r3, #0
 8002ac4:	61bb      	str	r3, [r7, #24]
 8002ac6:	4b39      	ldr	r3, [pc, #228]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002ac8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002aca:	4a38      	ldr	r2, [pc, #224]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002acc:	f043 0310 	orr.w	r3, r3, #16
 8002ad0:	6453      	str	r3, [r2, #68]	; 0x44
 8002ad2:	4b36      	ldr	r3, [pc, #216]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002ad4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ad6:	f003 0310 	and.w	r3, r3, #16
 8002ada:	61bb      	str	r3, [r7, #24]
 8002adc:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002ade:	2300      	movs	r3, #0
 8002ae0:	617b      	str	r3, [r7, #20]
 8002ae2:	4b32      	ldr	r3, [pc, #200]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ae6:	4a31      	ldr	r2, [pc, #196]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002ae8:	f043 0301 	orr.w	r3, r3, #1
 8002aec:	6313      	str	r3, [r2, #48]	; 0x30
 8002aee:	4b2f      	ldr	r3, [pc, #188]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002af0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af2:	f003 0301 	and.w	r3, r3, #1
 8002af6:	617b      	str	r3, [r7, #20]
 8002af8:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002afa:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8002afe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b00:	2302      	movs	r3, #2
 8002b02:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b04:	2300      	movs	r3, #0
 8002b06:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b08:	2303      	movs	r3, #3
 8002b0a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002b0c:	2307      	movs	r3, #7
 8002b0e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b10:	f107 031c 	add.w	r3, r7, #28
 8002b14:	4619      	mov	r1, r3
 8002b16:	4826      	ldr	r0, [pc, #152]	; (8002bb0 <HAL_UART_MspInit+0x110>)
 8002b18:	f000 fffe 	bl	8003b18 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8002b1c:	2200      	movs	r2, #0
 8002b1e:	2100      	movs	r1, #0
 8002b20:	2025      	movs	r0, #37	; 0x25
 8002b22:	f000 fc46 	bl	80033b2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002b26:	2025      	movs	r0, #37	; 0x25
 8002b28:	f000 fc5f 	bl	80033ea <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8002b2c:	e038      	b.n	8002ba0 <HAL_UART_MspInit+0x100>
  else if(uartHandle->Instance==USART2)
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	4a20      	ldr	r2, [pc, #128]	; (8002bb4 <HAL_UART_MspInit+0x114>)
 8002b34:	4293      	cmp	r3, r2
 8002b36:	d133      	bne.n	8002ba0 <HAL_UART_MspInit+0x100>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002b38:	2300      	movs	r3, #0
 8002b3a:	613b      	str	r3, [r7, #16]
 8002b3c:	4b1b      	ldr	r3, [pc, #108]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b40:	4a1a      	ldr	r2, [pc, #104]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b42:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002b46:	6413      	str	r3, [r2, #64]	; 0x40
 8002b48:	4b18      	ldr	r3, [pc, #96]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b4c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002b50:	613b      	str	r3, [r7, #16]
 8002b52:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b54:	2300      	movs	r3, #0
 8002b56:	60fb      	str	r3, [r7, #12]
 8002b58:	4b14      	ldr	r3, [pc, #80]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b5c:	4a13      	ldr	r2, [pc, #76]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b5e:	f043 0301 	orr.w	r3, r3, #1
 8002b62:	6313      	str	r3, [r2, #48]	; 0x30
 8002b64:	4b11      	ldr	r3, [pc, #68]	; (8002bac <HAL_UART_MspInit+0x10c>)
 8002b66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b68:	f003 0301 	and.w	r3, r3, #1
 8002b6c:	60fb      	str	r3, [r7, #12]
 8002b6e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002b70:	230c      	movs	r3, #12
 8002b72:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b74:	2302      	movs	r3, #2
 8002b76:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b78:	2300      	movs	r3, #0
 8002b7a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b7c:	2303      	movs	r3, #3
 8002b7e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002b80:	2307      	movs	r3, #7
 8002b82:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b84:	f107 031c 	add.w	r3, r7, #28
 8002b88:	4619      	mov	r1, r3
 8002b8a:	4809      	ldr	r0, [pc, #36]	; (8002bb0 <HAL_UART_MspInit+0x110>)
 8002b8c:	f000 ffc4 	bl	8003b18 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002b90:	2200      	movs	r2, #0
 8002b92:	2100      	movs	r1, #0
 8002b94:	2026      	movs	r0, #38	; 0x26
 8002b96:	f000 fc0c 	bl	80033b2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002b9a:	2026      	movs	r0, #38	; 0x26
 8002b9c:	f000 fc25 	bl	80033ea <HAL_NVIC_EnableIRQ>
}
 8002ba0:	bf00      	nop
 8002ba2:	3730      	adds	r7, #48	; 0x30
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	bd80      	pop	{r7, pc}
 8002ba8:	40011000 	.word	0x40011000
 8002bac:	40023800 	.word	0x40023800
 8002bb0:	40020000 	.word	0x40020000
 8002bb4:	40004400 	.word	0x40004400

08002bb8 <Reset_Handler>:
 8002bb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002bf0 <LoopFillZerobss+0x12>
 8002bbc:	480d      	ldr	r0, [pc, #52]	; (8002bf4 <LoopFillZerobss+0x16>)
 8002bbe:	490e      	ldr	r1, [pc, #56]	; (8002bf8 <LoopFillZerobss+0x1a>)
 8002bc0:	4a0e      	ldr	r2, [pc, #56]	; (8002bfc <LoopFillZerobss+0x1e>)
 8002bc2:	2300      	movs	r3, #0
 8002bc4:	e002      	b.n	8002bcc <LoopCopyDataInit>

08002bc6 <CopyDataInit>:
 8002bc6:	58d4      	ldr	r4, [r2, r3]
 8002bc8:	50c4      	str	r4, [r0, r3]
 8002bca:	3304      	adds	r3, #4

08002bcc <LoopCopyDataInit>:
 8002bcc:	18c4      	adds	r4, r0, r3
 8002bce:	428c      	cmp	r4, r1
 8002bd0:	d3f9      	bcc.n	8002bc6 <CopyDataInit>
 8002bd2:	4a0b      	ldr	r2, [pc, #44]	; (8002c00 <LoopFillZerobss+0x22>)
 8002bd4:	4c0b      	ldr	r4, [pc, #44]	; (8002c04 <LoopFillZerobss+0x26>)
 8002bd6:	2300      	movs	r3, #0
 8002bd8:	e001      	b.n	8002bde <LoopFillZerobss>

08002bda <FillZerobss>:
 8002bda:	6013      	str	r3, [r2, #0]
 8002bdc:	3204      	adds	r2, #4

08002bde <LoopFillZerobss>:
 8002bde:	42a2      	cmp	r2, r4
 8002be0:	d3fb      	bcc.n	8002bda <FillZerobss>
 8002be2:	f7ff fd37 	bl	8002654 <SystemInit>
 8002be6:	f004 fd45 	bl	8007674 <__libc_init_array>
 8002bea:	f7fe feb9 	bl	8001960 <main>
 8002bee:	4770      	bx	lr
 8002bf0:	20020000 	.word	0x20020000
 8002bf4:	20000000 	.word	0x20000000
 8002bf8:	20000090 	.word	0x20000090
 8002bfc:	0800b834 	.word	0x0800b834
 8002c00:	20000090 	.word	0x20000090
 8002c04:	2000044c 	.word	0x2000044c

08002c08 <ADC_IRQHandler>:
 8002c08:	e7fe      	b.n	8002c08 <ADC_IRQHandler>
	...

08002c0c <HAL_Init>:
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	af00      	add	r7, sp, #0
 8002c10:	4b0e      	ldr	r3, [pc, #56]	; (8002c4c <HAL_Init+0x40>)
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	4a0d      	ldr	r2, [pc, #52]	; (8002c4c <HAL_Init+0x40>)
 8002c16:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002c1a:	6013      	str	r3, [r2, #0]
 8002c1c:	4b0b      	ldr	r3, [pc, #44]	; (8002c4c <HAL_Init+0x40>)
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	4a0a      	ldr	r2, [pc, #40]	; (8002c4c <HAL_Init+0x40>)
 8002c22:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002c26:	6013      	str	r3, [r2, #0]
 8002c28:	4b08      	ldr	r3, [pc, #32]	; (8002c4c <HAL_Init+0x40>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4a07      	ldr	r2, [pc, #28]	; (8002c4c <HAL_Init+0x40>)
 8002c2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002c32:	6013      	str	r3, [r2, #0]
 8002c34:	2003      	movs	r0, #3
 8002c36:	f000 fbb1 	bl	800339c <HAL_NVIC_SetPriorityGrouping>
 8002c3a:	200f      	movs	r0, #15
 8002c3c:	f000 f808 	bl	8002c50 <HAL_InitTick>
 8002c40:	f7ff fbc8 	bl	80023d4 <HAL_MspInit>
 8002c44:	2300      	movs	r3, #0
 8002c46:	4618      	mov	r0, r3
 8002c48:	bd80      	pop	{r7, pc}
 8002c4a:	bf00      	nop
 8002c4c:	40023c00 	.word	0x40023c00

08002c50 <HAL_InitTick>:
 8002c50:	b580      	push	{r7, lr}
 8002c52:	b082      	sub	sp, #8
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]
 8002c58:	4b12      	ldr	r3, [pc, #72]	; (8002ca4 <HAL_InitTick+0x54>)
 8002c5a:	681a      	ldr	r2, [r3, #0]
 8002c5c:	4b12      	ldr	r3, [pc, #72]	; (8002ca8 <HAL_InitTick+0x58>)
 8002c5e:	781b      	ldrb	r3, [r3, #0]
 8002c60:	4619      	mov	r1, r3
 8002c62:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c66:	fbb3 f3f1 	udiv	r3, r3, r1
 8002c6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002c6e:	4618      	mov	r0, r3
 8002c70:	f000 fbc9 	bl	8003406 <HAL_SYSTICK_Config>
 8002c74:	4603      	mov	r3, r0
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d001      	beq.n	8002c7e <HAL_InitTick+0x2e>
 8002c7a:	2301      	movs	r3, #1
 8002c7c:	e00e      	b.n	8002c9c <HAL_InitTick+0x4c>
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	2b0f      	cmp	r3, #15
 8002c82:	d80a      	bhi.n	8002c9a <HAL_InitTick+0x4a>
 8002c84:	2200      	movs	r2, #0
 8002c86:	6879      	ldr	r1, [r7, #4]
 8002c88:	f04f 30ff 	mov.w	r0, #4294967295
 8002c8c:	f000 fb91 	bl	80033b2 <HAL_NVIC_SetPriority>
 8002c90:	4a06      	ldr	r2, [pc, #24]	; (8002cac <HAL_InitTick+0x5c>)
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	6013      	str	r3, [r2, #0]
 8002c96:	2300      	movs	r3, #0
 8002c98:	e000      	b.n	8002c9c <HAL_InitTick+0x4c>
 8002c9a:	2301      	movs	r3, #1
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	3708      	adds	r7, #8
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	20000020 	.word	0x20000020
 8002ca8:	20000028 	.word	0x20000028
 8002cac:	20000024 	.word	0x20000024

08002cb0 <HAL_IncTick>:
 8002cb0:	b480      	push	{r7}
 8002cb2:	af00      	add	r7, sp, #0
 8002cb4:	4b06      	ldr	r3, [pc, #24]	; (8002cd0 <HAL_IncTick+0x20>)
 8002cb6:	781b      	ldrb	r3, [r3, #0]
 8002cb8:	461a      	mov	r2, r3
 8002cba:	4b06      	ldr	r3, [pc, #24]	; (8002cd4 <HAL_IncTick+0x24>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	4413      	add	r3, r2
 8002cc0:	4a04      	ldr	r2, [pc, #16]	; (8002cd4 <HAL_IncTick+0x24>)
 8002cc2:	6013      	str	r3, [r2, #0]
 8002cc4:	bf00      	nop
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ccc:	4770      	bx	lr
 8002cce:	bf00      	nop
 8002cd0:	20000028 	.word	0x20000028
 8002cd4:	20000438 	.word	0x20000438

08002cd8 <HAL_GetTick>:
 8002cd8:	b480      	push	{r7}
 8002cda:	af00      	add	r7, sp, #0
 8002cdc:	4b03      	ldr	r3, [pc, #12]	; (8002cec <HAL_GetTick+0x14>)
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	4618      	mov	r0, r3
 8002ce2:	46bd      	mov	sp, r7
 8002ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce8:	4770      	bx	lr
 8002cea:	bf00      	nop
 8002cec:	20000438 	.word	0x20000438

08002cf0 <HAL_Delay>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b084      	sub	sp, #16
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
 8002cf8:	f7ff ffee 	bl	8002cd8 <HAL_GetTick>
 8002cfc:	60b8      	str	r0, [r7, #8]
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	60fb      	str	r3, [r7, #12]
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002d08:	d005      	beq.n	8002d16 <HAL_Delay+0x26>
 8002d0a:	4b0a      	ldr	r3, [pc, #40]	; (8002d34 <HAL_Delay+0x44>)
 8002d0c:	781b      	ldrb	r3, [r3, #0]
 8002d0e:	461a      	mov	r2, r3
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	4413      	add	r3, r2
 8002d14:	60fb      	str	r3, [r7, #12]
 8002d16:	bf00      	nop
 8002d18:	f7ff ffde 	bl	8002cd8 <HAL_GetTick>
 8002d1c:	4602      	mov	r2, r0
 8002d1e:	68bb      	ldr	r3, [r7, #8]
 8002d20:	1ad3      	subs	r3, r2, r3
 8002d22:	68fa      	ldr	r2, [r7, #12]
 8002d24:	429a      	cmp	r2, r3
 8002d26:	d8f7      	bhi.n	8002d18 <HAL_Delay+0x28>
 8002d28:	bf00      	nop
 8002d2a:	bf00      	nop
 8002d2c:	3710      	adds	r7, #16
 8002d2e:	46bd      	mov	sp, r7
 8002d30:	bd80      	pop	{r7, pc}
 8002d32:	bf00      	nop
 8002d34:	20000028 	.word	0x20000028

08002d38 <HAL_ADC_Init>:
 8002d38:	b580      	push	{r7, lr}
 8002d3a:	b084      	sub	sp, #16
 8002d3c:	af00      	add	r7, sp, #0
 8002d3e:	6078      	str	r0, [r7, #4]
 8002d40:	2300      	movs	r3, #0
 8002d42:	73fb      	strb	r3, [r7, #15]
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d101      	bne.n	8002d4e <HAL_ADC_Init+0x16>
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	e033      	b.n	8002db6 <HAL_ADC_Init+0x7e>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	d109      	bne.n	8002d6a <HAL_ADC_Init+0x32>
 8002d56:	6878      	ldr	r0, [r7, #4]
 8002d58:	f7fd fc90 	bl	800067c <HAL_ADC_MspInit>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2200      	movs	r2, #0
 8002d60:	645a      	str	r2, [r3, #68]	; 0x44
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	2200      	movs	r2, #0
 8002d66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d6e:	f003 0310 	and.w	r3, r3, #16
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d118      	bne.n	8002da8 <HAL_ADC_Init+0x70>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d7a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002d7e:	f023 0302 	bic.w	r3, r3, #2
 8002d82:	f043 0202 	orr.w	r2, r3, #2
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	641a      	str	r2, [r3, #64]	; 0x40
 8002d8a:	6878      	ldr	r0, [r7, #4]
 8002d8c:	f000 f93a 	bl	8003004 <ADC_Init>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	2200      	movs	r2, #0
 8002d94:	645a      	str	r2, [r3, #68]	; 0x44
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d9a:	f023 0303 	bic.w	r3, r3, #3
 8002d9e:	f043 0201 	orr.w	r2, r3, #1
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	641a      	str	r2, [r3, #64]	; 0x40
 8002da6:	e001      	b.n	8002dac <HAL_ADC_Init+0x74>
 8002da8:	2301      	movs	r3, #1
 8002daa:	73fb      	strb	r3, [r7, #15]
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	2200      	movs	r2, #0
 8002db0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002db4:	7bfb      	ldrb	r3, [r7, #15]
 8002db6:	4618      	mov	r0, r3
 8002db8:	3710      	adds	r7, #16
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	bd80      	pop	{r7, pc}
	...

08002dc0 <HAL_ADC_ConfigChannel>:
 8002dc0:	b480      	push	{r7}
 8002dc2:	b085      	sub	sp, #20
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
 8002dc8:	6039      	str	r1, [r7, #0]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	60bb      	str	r3, [r7, #8]
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002dd4:	2b01      	cmp	r3, #1
 8002dd6:	d101      	bne.n	8002ddc <HAL_ADC_ConfigChannel+0x1c>
 8002dd8:	2302      	movs	r3, #2
 8002dda:	e105      	b.n	8002fe8 <HAL_ADC_ConfigChannel+0x228>
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	2201      	movs	r2, #1
 8002de0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002de4:	683b      	ldr	r3, [r7, #0]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	2b09      	cmp	r3, #9
 8002dea:	d925      	bls.n	8002e38 <HAL_ADC_ConfigChannel+0x78>
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	68d9      	ldr	r1, [r3, #12]
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	b29b      	uxth	r3, r3
 8002df8:	461a      	mov	r2, r3
 8002dfa:	4613      	mov	r3, r2
 8002dfc:	005b      	lsls	r3, r3, #1
 8002dfe:	4413      	add	r3, r2
 8002e00:	3b1e      	subs	r3, #30
 8002e02:	2207      	movs	r2, #7
 8002e04:	fa02 f303 	lsl.w	r3, r2, r3
 8002e08:	43da      	mvns	r2, r3
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	400a      	ands	r2, r1
 8002e10:	60da      	str	r2, [r3, #12]
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	68d9      	ldr	r1, [r3, #12]
 8002e18:	683b      	ldr	r3, [r7, #0]
 8002e1a:	689a      	ldr	r2, [r3, #8]
 8002e1c:	683b      	ldr	r3, [r7, #0]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	b29b      	uxth	r3, r3
 8002e22:	4618      	mov	r0, r3
 8002e24:	4603      	mov	r3, r0
 8002e26:	005b      	lsls	r3, r3, #1
 8002e28:	4403      	add	r3, r0
 8002e2a:	3b1e      	subs	r3, #30
 8002e2c:	409a      	lsls	r2, r3
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	430a      	orrs	r2, r1
 8002e34:	60da      	str	r2, [r3, #12]
 8002e36:	e022      	b.n	8002e7e <HAL_ADC_ConfigChannel+0xbe>
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	6919      	ldr	r1, [r3, #16]
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	b29b      	uxth	r3, r3
 8002e44:	461a      	mov	r2, r3
 8002e46:	4613      	mov	r3, r2
 8002e48:	005b      	lsls	r3, r3, #1
 8002e4a:	4413      	add	r3, r2
 8002e4c:	2207      	movs	r2, #7
 8002e4e:	fa02 f303 	lsl.w	r3, r2, r3
 8002e52:	43da      	mvns	r2, r3
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	400a      	ands	r2, r1
 8002e5a:	611a      	str	r2, [r3, #16]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	6919      	ldr	r1, [r3, #16]
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	689a      	ldr	r2, [r3, #8]
 8002e66:	683b      	ldr	r3, [r7, #0]
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	b29b      	uxth	r3, r3
 8002e6c:	4618      	mov	r0, r3
 8002e6e:	4603      	mov	r3, r0
 8002e70:	005b      	lsls	r3, r3, #1
 8002e72:	4403      	add	r3, r0
 8002e74:	409a      	lsls	r2, r3
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	430a      	orrs	r2, r1
 8002e7c:	611a      	str	r2, [r3, #16]
 8002e7e:	683b      	ldr	r3, [r7, #0]
 8002e80:	685b      	ldr	r3, [r3, #4]
 8002e82:	2b06      	cmp	r3, #6
 8002e84:	d824      	bhi.n	8002ed0 <HAL_ADC_ConfigChannel+0x110>
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002e8c:	683b      	ldr	r3, [r7, #0]
 8002e8e:	685a      	ldr	r2, [r3, #4]
 8002e90:	4613      	mov	r3, r2
 8002e92:	009b      	lsls	r3, r3, #2
 8002e94:	4413      	add	r3, r2
 8002e96:	3b05      	subs	r3, #5
 8002e98:	221f      	movs	r2, #31
 8002e9a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e9e:	43da      	mvns	r2, r3
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	400a      	ands	r2, r1
 8002ea6:	635a      	str	r2, [r3, #52]	; 0x34
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	b29b      	uxth	r3, r3
 8002eb4:	4618      	mov	r0, r3
 8002eb6:	683b      	ldr	r3, [r7, #0]
 8002eb8:	685a      	ldr	r2, [r3, #4]
 8002eba:	4613      	mov	r3, r2
 8002ebc:	009b      	lsls	r3, r3, #2
 8002ebe:	4413      	add	r3, r2
 8002ec0:	3b05      	subs	r3, #5
 8002ec2:	fa00 f203 	lsl.w	r2, r0, r3
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	430a      	orrs	r2, r1
 8002ecc:	635a      	str	r2, [r3, #52]	; 0x34
 8002ece:	e04c      	b.n	8002f6a <HAL_ADC_ConfigChannel+0x1aa>
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	685b      	ldr	r3, [r3, #4]
 8002ed4:	2b0c      	cmp	r3, #12
 8002ed6:	d824      	bhi.n	8002f22 <HAL_ADC_ConfigChannel+0x162>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002ede:	683b      	ldr	r3, [r7, #0]
 8002ee0:	685a      	ldr	r2, [r3, #4]
 8002ee2:	4613      	mov	r3, r2
 8002ee4:	009b      	lsls	r3, r3, #2
 8002ee6:	4413      	add	r3, r2
 8002ee8:	3b23      	subs	r3, #35	; 0x23
 8002eea:	221f      	movs	r2, #31
 8002eec:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef0:	43da      	mvns	r2, r3
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	400a      	ands	r2, r1
 8002ef8:	631a      	str	r2, [r3, #48]	; 0x30
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	b29b      	uxth	r3, r3
 8002f06:	4618      	mov	r0, r3
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	685a      	ldr	r2, [r3, #4]
 8002f0c:	4613      	mov	r3, r2
 8002f0e:	009b      	lsls	r3, r3, #2
 8002f10:	4413      	add	r3, r2
 8002f12:	3b23      	subs	r3, #35	; 0x23
 8002f14:	fa00 f203 	lsl.w	r2, r0, r3
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	430a      	orrs	r2, r1
 8002f1e:	631a      	str	r2, [r3, #48]	; 0x30
 8002f20:	e023      	b.n	8002f6a <HAL_ADC_ConfigChannel+0x1aa>
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002f28:	683b      	ldr	r3, [r7, #0]
 8002f2a:	685a      	ldr	r2, [r3, #4]
 8002f2c:	4613      	mov	r3, r2
 8002f2e:	009b      	lsls	r3, r3, #2
 8002f30:	4413      	add	r3, r2
 8002f32:	3b41      	subs	r3, #65	; 0x41
 8002f34:	221f      	movs	r2, #31
 8002f36:	fa02 f303 	lsl.w	r3, r2, r3
 8002f3a:	43da      	mvns	r2, r3
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	400a      	ands	r2, r1
 8002f42:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	b29b      	uxth	r3, r3
 8002f50:	4618      	mov	r0, r3
 8002f52:	683b      	ldr	r3, [r7, #0]
 8002f54:	685a      	ldr	r2, [r3, #4]
 8002f56:	4613      	mov	r3, r2
 8002f58:	009b      	lsls	r3, r3, #2
 8002f5a:	4413      	add	r3, r2
 8002f5c:	3b41      	subs	r3, #65	; 0x41
 8002f5e:	fa00 f203 	lsl.w	r2, r0, r3
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	430a      	orrs	r2, r1
 8002f68:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f6a:	4b22      	ldr	r3, [pc, #136]	; (8002ff4 <HAL_ADC_ConfigChannel+0x234>)
 8002f6c:	60fb      	str	r3, [r7, #12]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	4a21      	ldr	r2, [pc, #132]	; (8002ff8 <HAL_ADC_ConfigChannel+0x238>)
 8002f74:	4293      	cmp	r3, r2
 8002f76:	d109      	bne.n	8002f8c <HAL_ADC_ConfigChannel+0x1cc>
 8002f78:	683b      	ldr	r3, [r7, #0]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	2b12      	cmp	r3, #18
 8002f7e:	d105      	bne.n	8002f8c <HAL_ADC_ConfigChannel+0x1cc>
 8002f80:	68fb      	ldr	r3, [r7, #12]
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	605a      	str	r2, [r3, #4]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	4a19      	ldr	r2, [pc, #100]	; (8002ff8 <HAL_ADC_ConfigChannel+0x238>)
 8002f92:	4293      	cmp	r3, r2
 8002f94:	d123      	bne.n	8002fde <HAL_ADC_ConfigChannel+0x21e>
 8002f96:	683b      	ldr	r3, [r7, #0]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	2b10      	cmp	r3, #16
 8002f9c:	d003      	beq.n	8002fa6 <HAL_ADC_ConfigChannel+0x1e6>
 8002f9e:	683b      	ldr	r3, [r7, #0]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	2b11      	cmp	r3, #17
 8002fa4:	d11b      	bne.n	8002fde <HAL_ADC_ConfigChannel+0x21e>
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	685b      	ldr	r3, [r3, #4]
 8002faa:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	605a      	str	r2, [r3, #4]
 8002fb2:	683b      	ldr	r3, [r7, #0]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	2b10      	cmp	r3, #16
 8002fb8:	d111      	bne.n	8002fde <HAL_ADC_ConfigChannel+0x21e>
 8002fba:	4b10      	ldr	r3, [pc, #64]	; (8002ffc <HAL_ADC_ConfigChannel+0x23c>)
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	4a10      	ldr	r2, [pc, #64]	; (8003000 <HAL_ADC_ConfigChannel+0x240>)
 8002fc0:	fba2 2303 	umull	r2, r3, r2, r3
 8002fc4:	0c9a      	lsrs	r2, r3, #18
 8002fc6:	4613      	mov	r3, r2
 8002fc8:	009b      	lsls	r3, r3, #2
 8002fca:	4413      	add	r3, r2
 8002fcc:	005b      	lsls	r3, r3, #1
 8002fce:	60bb      	str	r3, [r7, #8]
 8002fd0:	e002      	b.n	8002fd8 <HAL_ADC_ConfigChannel+0x218>
 8002fd2:	68bb      	ldr	r3, [r7, #8]
 8002fd4:	3b01      	subs	r3, #1
 8002fd6:	60bb      	str	r3, [r7, #8]
 8002fd8:	68bb      	ldr	r3, [r7, #8]
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d1f9      	bne.n	8002fd2 <HAL_ADC_ConfigChannel+0x212>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	2200      	movs	r2, #0
 8002fe2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	4618      	mov	r0, r3
 8002fea:	3714      	adds	r7, #20
 8002fec:	46bd      	mov	sp, r7
 8002fee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ff2:	4770      	bx	lr
 8002ff4:	40012300 	.word	0x40012300
 8002ff8:	40012000 	.word	0x40012000
 8002ffc:	20000020 	.word	0x20000020
 8003000:	431bde83 	.word	0x431bde83

08003004 <ADC_Init>:
 8003004:	b480      	push	{r7}
 8003006:	b085      	sub	sp, #20
 8003008:	af00      	add	r7, sp, #0
 800300a:	6078      	str	r0, [r7, #4]
 800300c:	4b79      	ldr	r3, [pc, #484]	; (80031f4 <ADC_Init+0x1f0>)
 800300e:	60fb      	str	r3, [r7, #12]
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	685b      	ldr	r3, [r3, #4]
 8003014:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	605a      	str	r2, [r3, #4]
 800301c:	68fb      	ldr	r3, [r7, #12]
 800301e:	685a      	ldr	r2, [r3, #4]
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	685b      	ldr	r3, [r3, #4]
 8003024:	431a      	orrs	r2, r3
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	605a      	str	r2, [r3, #4]
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	685a      	ldr	r2, [r3, #4]
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003038:	605a      	str	r2, [r3, #4]
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	6859      	ldr	r1, [r3, #4]
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	691b      	ldr	r3, [r3, #16]
 8003044:	021a      	lsls	r2, r3, #8
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	430a      	orrs	r2, r1
 800304c:	605a      	str	r2, [r3, #4]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	685a      	ldr	r2, [r3, #4]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800305c:	605a      	str	r2, [r3, #4]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	6859      	ldr	r1, [r3, #4]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	689a      	ldr	r2, [r3, #8]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	430a      	orrs	r2, r1
 800306e:	605a      	str	r2, [r3, #4]
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	689a      	ldr	r2, [r3, #8]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800307e:	609a      	str	r2, [r3, #8]
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	6899      	ldr	r1, [r3, #8]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	68da      	ldr	r2, [r3, #12]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	430a      	orrs	r2, r1
 8003090:	609a      	str	r2, [r3, #8]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003096:	4a58      	ldr	r2, [pc, #352]	; (80031f8 <ADC_Init+0x1f4>)
 8003098:	4293      	cmp	r3, r2
 800309a:	d022      	beq.n	80030e2 <ADC_Init+0xde>
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	689a      	ldr	r2, [r3, #8]
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80030aa:	609a      	str	r2, [r3, #8]
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	6899      	ldr	r1, [r3, #8]
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	430a      	orrs	r2, r1
 80030bc:	609a      	str	r2, [r3, #8]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	689a      	ldr	r2, [r3, #8]
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80030cc:	609a      	str	r2, [r3, #8]
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	6899      	ldr	r1, [r3, #8]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	430a      	orrs	r2, r1
 80030de:	609a      	str	r2, [r3, #8]
 80030e0:	e00f      	b.n	8003102 <ADC_Init+0xfe>
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	689a      	ldr	r2, [r3, #8]
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80030f0:	609a      	str	r2, [r3, #8]
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	689a      	ldr	r2, [r3, #8]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003100:	609a      	str	r2, [r3, #8]
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	689a      	ldr	r2, [r3, #8]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f022 0202 	bic.w	r2, r2, #2
 8003110:	609a      	str	r2, [r3, #8]
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	6899      	ldr	r1, [r3, #8]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	7e1b      	ldrb	r3, [r3, #24]
 800311c:	005a      	lsls	r2, r3, #1
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	430a      	orrs	r2, r1
 8003124:	609a      	str	r2, [r3, #8]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	f893 3020 	ldrb.w	r3, [r3, #32]
 800312c:	2b00      	cmp	r3, #0
 800312e:	d01b      	beq.n	8003168 <ADC_Init+0x164>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	685a      	ldr	r2, [r3, #4]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800313e:	605a      	str	r2, [r3, #4]
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	685a      	ldr	r2, [r3, #4]
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800314e:	605a      	str	r2, [r3, #4]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	6859      	ldr	r1, [r3, #4]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800315a:	3b01      	subs	r3, #1
 800315c:	035a      	lsls	r2, r3, #13
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	430a      	orrs	r2, r1
 8003164:	605a      	str	r2, [r3, #4]
 8003166:	e007      	b.n	8003178 <ADC_Init+0x174>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	685a      	ldr	r2, [r3, #4]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003176:	605a      	str	r2, [r3, #4]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8003186:	62da      	str	r2, [r3, #44]	; 0x2c
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	69db      	ldr	r3, [r3, #28]
 8003192:	3b01      	subs	r3, #1
 8003194:	051a      	lsls	r2, r3, #20
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	430a      	orrs	r2, r1
 800319c:	62da      	str	r2, [r3, #44]	; 0x2c
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	689a      	ldr	r2, [r3, #8]
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80031ac:	609a      	str	r2, [r3, #8]
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	6899      	ldr	r1, [r3, #8]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80031ba:	025a      	lsls	r2, r3, #9
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	430a      	orrs	r2, r1
 80031c2:	609a      	str	r2, [r3, #8]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	689a      	ldr	r2, [r3, #8]
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80031d2:	609a      	str	r2, [r3, #8]
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	6899      	ldr	r1, [r3, #8]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	695b      	ldr	r3, [r3, #20]
 80031de:	029a      	lsls	r2, r3, #10
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	430a      	orrs	r2, r1
 80031e6:	609a      	str	r2, [r3, #8]
 80031e8:	bf00      	nop
 80031ea:	3714      	adds	r7, #20
 80031ec:	46bd      	mov	sp, r7
 80031ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031f2:	4770      	bx	lr
 80031f4:	40012300 	.word	0x40012300
 80031f8:	0f000001 	.word	0x0f000001

080031fc <__NVIC_SetPriorityGrouping>:
 80031fc:	b480      	push	{r7}
 80031fe:	b085      	sub	sp, #20
 8003200:	af00      	add	r7, sp, #0
 8003202:	6078      	str	r0, [r7, #4]
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	f003 0307 	and.w	r3, r3, #7
 800320a:	60fb      	str	r3, [r7, #12]
 800320c:	4b0c      	ldr	r3, [pc, #48]	; (8003240 <__NVIC_SetPriorityGrouping+0x44>)
 800320e:	68db      	ldr	r3, [r3, #12]
 8003210:	60bb      	str	r3, [r7, #8]
 8003212:	68ba      	ldr	r2, [r7, #8]
 8003214:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003218:	4013      	ands	r3, r2
 800321a:	60bb      	str	r3, [r7, #8]
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	021a      	lsls	r2, r3, #8
 8003220:	68bb      	ldr	r3, [r7, #8]
 8003222:	4313      	orrs	r3, r2
 8003224:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003228:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800322c:	60bb      	str	r3, [r7, #8]
 800322e:	4a04      	ldr	r2, [pc, #16]	; (8003240 <__NVIC_SetPriorityGrouping+0x44>)
 8003230:	68bb      	ldr	r3, [r7, #8]
 8003232:	60d3      	str	r3, [r2, #12]
 8003234:	bf00      	nop
 8003236:	3714      	adds	r7, #20
 8003238:	46bd      	mov	sp, r7
 800323a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800323e:	4770      	bx	lr
 8003240:	e000ed00 	.word	0xe000ed00

08003244 <__NVIC_GetPriorityGrouping>:
 8003244:	b480      	push	{r7}
 8003246:	af00      	add	r7, sp, #0
 8003248:	4b04      	ldr	r3, [pc, #16]	; (800325c <__NVIC_GetPriorityGrouping+0x18>)
 800324a:	68db      	ldr	r3, [r3, #12]
 800324c:	0a1b      	lsrs	r3, r3, #8
 800324e:	f003 0307 	and.w	r3, r3, #7
 8003252:	4618      	mov	r0, r3
 8003254:	46bd      	mov	sp, r7
 8003256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800325a:	4770      	bx	lr
 800325c:	e000ed00 	.word	0xe000ed00

08003260 <__NVIC_EnableIRQ>:
 8003260:	b480      	push	{r7}
 8003262:	b083      	sub	sp, #12
 8003264:	af00      	add	r7, sp, #0
 8003266:	4603      	mov	r3, r0
 8003268:	71fb      	strb	r3, [r7, #7]
 800326a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800326e:	2b00      	cmp	r3, #0
 8003270:	db0b      	blt.n	800328a <__NVIC_EnableIRQ+0x2a>
 8003272:	79fb      	ldrb	r3, [r7, #7]
 8003274:	f003 021f 	and.w	r2, r3, #31
 8003278:	4907      	ldr	r1, [pc, #28]	; (8003298 <__NVIC_EnableIRQ+0x38>)
 800327a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800327e:	095b      	lsrs	r3, r3, #5
 8003280:	2001      	movs	r0, #1
 8003282:	fa00 f202 	lsl.w	r2, r0, r2
 8003286:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800328a:	bf00      	nop
 800328c:	370c      	adds	r7, #12
 800328e:	46bd      	mov	sp, r7
 8003290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003294:	4770      	bx	lr
 8003296:	bf00      	nop
 8003298:	e000e100 	.word	0xe000e100

0800329c <__NVIC_SetPriority>:
 800329c:	b480      	push	{r7}
 800329e:	b083      	sub	sp, #12
 80032a0:	af00      	add	r7, sp, #0
 80032a2:	4603      	mov	r3, r0
 80032a4:	6039      	str	r1, [r7, #0]
 80032a6:	71fb      	strb	r3, [r7, #7]
 80032a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	db0a      	blt.n	80032c6 <__NVIC_SetPriority+0x2a>
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	b2da      	uxtb	r2, r3
 80032b4:	490c      	ldr	r1, [pc, #48]	; (80032e8 <__NVIC_SetPriority+0x4c>)
 80032b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032ba:	0112      	lsls	r2, r2, #4
 80032bc:	b2d2      	uxtb	r2, r2
 80032be:	440b      	add	r3, r1
 80032c0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80032c4:	e00a      	b.n	80032dc <__NVIC_SetPriority+0x40>
 80032c6:	683b      	ldr	r3, [r7, #0]
 80032c8:	b2da      	uxtb	r2, r3
 80032ca:	4908      	ldr	r1, [pc, #32]	; (80032ec <__NVIC_SetPriority+0x50>)
 80032cc:	79fb      	ldrb	r3, [r7, #7]
 80032ce:	f003 030f 	and.w	r3, r3, #15
 80032d2:	3b04      	subs	r3, #4
 80032d4:	0112      	lsls	r2, r2, #4
 80032d6:	b2d2      	uxtb	r2, r2
 80032d8:	440b      	add	r3, r1
 80032da:	761a      	strb	r2, [r3, #24]
 80032dc:	bf00      	nop
 80032de:	370c      	adds	r7, #12
 80032e0:	46bd      	mov	sp, r7
 80032e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e6:	4770      	bx	lr
 80032e8:	e000e100 	.word	0xe000e100
 80032ec:	e000ed00 	.word	0xe000ed00

080032f0 <NVIC_EncodePriority>:
 80032f0:	b480      	push	{r7}
 80032f2:	b089      	sub	sp, #36	; 0x24
 80032f4:	af00      	add	r7, sp, #0
 80032f6:	60f8      	str	r0, [r7, #12]
 80032f8:	60b9      	str	r1, [r7, #8]
 80032fa:	607a      	str	r2, [r7, #4]
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	f003 0307 	and.w	r3, r3, #7
 8003302:	61fb      	str	r3, [r7, #28]
 8003304:	69fb      	ldr	r3, [r7, #28]
 8003306:	f1c3 0307 	rsb	r3, r3, #7
 800330a:	2b04      	cmp	r3, #4
 800330c:	bf28      	it	cs
 800330e:	2304      	movcs	r3, #4
 8003310:	61bb      	str	r3, [r7, #24]
 8003312:	69fb      	ldr	r3, [r7, #28]
 8003314:	3304      	adds	r3, #4
 8003316:	2b06      	cmp	r3, #6
 8003318:	d902      	bls.n	8003320 <NVIC_EncodePriority+0x30>
 800331a:	69fb      	ldr	r3, [r7, #28]
 800331c:	3b03      	subs	r3, #3
 800331e:	e000      	b.n	8003322 <NVIC_EncodePriority+0x32>
 8003320:	2300      	movs	r3, #0
 8003322:	617b      	str	r3, [r7, #20]
 8003324:	f04f 32ff 	mov.w	r2, #4294967295
 8003328:	69bb      	ldr	r3, [r7, #24]
 800332a:	fa02 f303 	lsl.w	r3, r2, r3
 800332e:	43da      	mvns	r2, r3
 8003330:	68bb      	ldr	r3, [r7, #8]
 8003332:	401a      	ands	r2, r3
 8003334:	697b      	ldr	r3, [r7, #20]
 8003336:	409a      	lsls	r2, r3
 8003338:	f04f 31ff 	mov.w	r1, #4294967295
 800333c:	697b      	ldr	r3, [r7, #20]
 800333e:	fa01 f303 	lsl.w	r3, r1, r3
 8003342:	43d9      	mvns	r1, r3
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	400b      	ands	r3, r1
 8003348:	4313      	orrs	r3, r2
 800334a:	4618      	mov	r0, r3
 800334c:	3724      	adds	r7, #36	; 0x24
 800334e:	46bd      	mov	sp, r7
 8003350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003354:	4770      	bx	lr
	...

08003358 <SysTick_Config>:
 8003358:	b580      	push	{r7, lr}
 800335a:	b082      	sub	sp, #8
 800335c:	af00      	add	r7, sp, #0
 800335e:	6078      	str	r0, [r7, #4]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	3b01      	subs	r3, #1
 8003364:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003368:	d301      	bcc.n	800336e <SysTick_Config+0x16>
 800336a:	2301      	movs	r3, #1
 800336c:	e00f      	b.n	800338e <SysTick_Config+0x36>
 800336e:	4a0a      	ldr	r2, [pc, #40]	; (8003398 <SysTick_Config+0x40>)
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	3b01      	subs	r3, #1
 8003374:	6053      	str	r3, [r2, #4]
 8003376:	210f      	movs	r1, #15
 8003378:	f04f 30ff 	mov.w	r0, #4294967295
 800337c:	f7ff ff8e 	bl	800329c <__NVIC_SetPriority>
 8003380:	4b05      	ldr	r3, [pc, #20]	; (8003398 <SysTick_Config+0x40>)
 8003382:	2200      	movs	r2, #0
 8003384:	609a      	str	r2, [r3, #8]
 8003386:	4b04      	ldr	r3, [pc, #16]	; (8003398 <SysTick_Config+0x40>)
 8003388:	2207      	movs	r2, #7
 800338a:	601a      	str	r2, [r3, #0]
 800338c:	2300      	movs	r3, #0
 800338e:	4618      	mov	r0, r3
 8003390:	3708      	adds	r7, #8
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}
 8003396:	bf00      	nop
 8003398:	e000e010 	.word	0xe000e010

0800339c <HAL_NVIC_SetPriorityGrouping>:
 800339c:	b580      	push	{r7, lr}
 800339e:	b082      	sub	sp, #8
 80033a0:	af00      	add	r7, sp, #0
 80033a2:	6078      	str	r0, [r7, #4]
 80033a4:	6878      	ldr	r0, [r7, #4]
 80033a6:	f7ff ff29 	bl	80031fc <__NVIC_SetPriorityGrouping>
 80033aa:	bf00      	nop
 80033ac:	3708      	adds	r7, #8
 80033ae:	46bd      	mov	sp, r7
 80033b0:	bd80      	pop	{r7, pc}

080033b2 <HAL_NVIC_SetPriority>:
 80033b2:	b580      	push	{r7, lr}
 80033b4:	b086      	sub	sp, #24
 80033b6:	af00      	add	r7, sp, #0
 80033b8:	4603      	mov	r3, r0
 80033ba:	60b9      	str	r1, [r7, #8]
 80033bc:	607a      	str	r2, [r7, #4]
 80033be:	73fb      	strb	r3, [r7, #15]
 80033c0:	2300      	movs	r3, #0
 80033c2:	617b      	str	r3, [r7, #20]
 80033c4:	f7ff ff3e 	bl	8003244 <__NVIC_GetPriorityGrouping>
 80033c8:	6178      	str	r0, [r7, #20]
 80033ca:	687a      	ldr	r2, [r7, #4]
 80033cc:	68b9      	ldr	r1, [r7, #8]
 80033ce:	6978      	ldr	r0, [r7, #20]
 80033d0:	f7ff ff8e 	bl	80032f0 <NVIC_EncodePriority>
 80033d4:	4602      	mov	r2, r0
 80033d6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80033da:	4611      	mov	r1, r2
 80033dc:	4618      	mov	r0, r3
 80033de:	f7ff ff5d 	bl	800329c <__NVIC_SetPriority>
 80033e2:	bf00      	nop
 80033e4:	3718      	adds	r7, #24
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bd80      	pop	{r7, pc}

080033ea <HAL_NVIC_EnableIRQ>:
 80033ea:	b580      	push	{r7, lr}
 80033ec:	b082      	sub	sp, #8
 80033ee:	af00      	add	r7, sp, #0
 80033f0:	4603      	mov	r3, r0
 80033f2:	71fb      	strb	r3, [r7, #7]
 80033f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033f8:	4618      	mov	r0, r3
 80033fa:	f7ff ff31 	bl	8003260 <__NVIC_EnableIRQ>
 80033fe:	bf00      	nop
 8003400:	3708      	adds	r7, #8
 8003402:	46bd      	mov	sp, r7
 8003404:	bd80      	pop	{r7, pc}

08003406 <HAL_SYSTICK_Config>:
 8003406:	b580      	push	{r7, lr}
 8003408:	b082      	sub	sp, #8
 800340a:	af00      	add	r7, sp, #0
 800340c:	6078      	str	r0, [r7, #4]
 800340e:	6878      	ldr	r0, [r7, #4]
 8003410:	f7ff ffa2 	bl	8003358 <SysTick_Config>
 8003414:	4603      	mov	r3, r0
 8003416:	4618      	mov	r0, r3
 8003418:	3708      	adds	r7, #8
 800341a:	46bd      	mov	sp, r7
 800341c:	bd80      	pop	{r7, pc}
	...

08003420 <HAL_DMA_Init>:
 8003420:	b580      	push	{r7, lr}
 8003422:	b086      	sub	sp, #24
 8003424:	af00      	add	r7, sp, #0
 8003426:	6078      	str	r0, [r7, #4]
 8003428:	2300      	movs	r3, #0
 800342a:	617b      	str	r3, [r7, #20]
 800342c:	f7ff fc54 	bl	8002cd8 <HAL_GetTick>
 8003430:	6138      	str	r0, [r7, #16]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	2b00      	cmp	r3, #0
 8003436:	d101      	bne.n	800343c <HAL_DMA_Init+0x1c>
 8003438:	2301      	movs	r3, #1
 800343a:	e099      	b.n	8003570 <HAL_DMA_Init+0x150>
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	2202      	movs	r2, #2
 8003440:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	2200      	movs	r2, #0
 8003448:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	681a      	ldr	r2, [r3, #0]
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	f022 0201 	bic.w	r2, r2, #1
 800345a:	601a      	str	r2, [r3, #0]
 800345c:	e00f      	b.n	800347e <HAL_DMA_Init+0x5e>
 800345e:	f7ff fc3b 	bl	8002cd8 <HAL_GetTick>
 8003462:	4602      	mov	r2, r0
 8003464:	693b      	ldr	r3, [r7, #16]
 8003466:	1ad3      	subs	r3, r2, r3
 8003468:	2b05      	cmp	r3, #5
 800346a:	d908      	bls.n	800347e <HAL_DMA_Init+0x5e>
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	2220      	movs	r2, #32
 8003470:	655a      	str	r2, [r3, #84]	; 0x54
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	2203      	movs	r2, #3
 8003476:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800347a:	2303      	movs	r3, #3
 800347c:	e078      	b.n	8003570 <HAL_DMA_Init+0x150>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	f003 0301 	and.w	r3, r3, #1
 8003488:	2b00      	cmp	r3, #0
 800348a:	d1e8      	bne.n	800345e <HAL_DMA_Init+0x3e>
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	617b      	str	r3, [r7, #20]
 8003494:	697a      	ldr	r2, [r7, #20]
 8003496:	4b38      	ldr	r3, [pc, #224]	; (8003578 <HAL_DMA_Init+0x158>)
 8003498:	4013      	ands	r3, r2
 800349a:	617b      	str	r3, [r7, #20]
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	685a      	ldr	r2, [r3, #4]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	689b      	ldr	r3, [r3, #8]
 80034a4:	431a      	orrs	r2, r3
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	68db      	ldr	r3, [r3, #12]
 80034aa:	431a      	orrs	r2, r3
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	691b      	ldr	r3, [r3, #16]
 80034b0:	431a      	orrs	r2, r3
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	695b      	ldr	r3, [r3, #20]
 80034b6:	431a      	orrs	r2, r3
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	699b      	ldr	r3, [r3, #24]
 80034bc:	431a      	orrs	r2, r3
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	69db      	ldr	r3, [r3, #28]
 80034c2:	431a      	orrs	r2, r3
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	6a1b      	ldr	r3, [r3, #32]
 80034c8:	4313      	orrs	r3, r2
 80034ca:	697a      	ldr	r2, [r7, #20]
 80034cc:	4313      	orrs	r3, r2
 80034ce:	617b      	str	r3, [r7, #20]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034d4:	2b04      	cmp	r3, #4
 80034d6:	d107      	bne.n	80034e8 <HAL_DMA_Init+0xc8>
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034e0:	4313      	orrs	r3, r2
 80034e2:	697a      	ldr	r2, [r7, #20]
 80034e4:	4313      	orrs	r3, r2
 80034e6:	617b      	str	r3, [r7, #20]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	697a      	ldr	r2, [r7, #20]
 80034ee:	601a      	str	r2, [r3, #0]
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	695b      	ldr	r3, [r3, #20]
 80034f6:	617b      	str	r3, [r7, #20]
 80034f8:	697b      	ldr	r3, [r7, #20]
 80034fa:	f023 0307 	bic.w	r3, r3, #7
 80034fe:	617b      	str	r3, [r7, #20]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003504:	697a      	ldr	r2, [r7, #20]
 8003506:	4313      	orrs	r3, r2
 8003508:	617b      	str	r3, [r7, #20]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800350e:	2b04      	cmp	r3, #4
 8003510:	d117      	bne.n	8003542 <HAL_DMA_Init+0x122>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003516:	697a      	ldr	r2, [r7, #20]
 8003518:	4313      	orrs	r3, r2
 800351a:	617b      	str	r3, [r7, #20]
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003520:	2b00      	cmp	r3, #0
 8003522:	d00e      	beq.n	8003542 <HAL_DMA_Init+0x122>
 8003524:	6878      	ldr	r0, [r7, #4]
 8003526:	f000 fa7b 	bl	8003a20 <DMA_CheckFifoParam>
 800352a:	4603      	mov	r3, r0
 800352c:	2b00      	cmp	r3, #0
 800352e:	d008      	beq.n	8003542 <HAL_DMA_Init+0x122>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	2240      	movs	r2, #64	; 0x40
 8003534:	655a      	str	r2, [r3, #84]	; 0x54
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	2201      	movs	r2, #1
 800353a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800353e:	2301      	movs	r3, #1
 8003540:	e016      	b.n	8003570 <HAL_DMA_Init+0x150>
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	697a      	ldr	r2, [r7, #20]
 8003548:	615a      	str	r2, [r3, #20]
 800354a:	6878      	ldr	r0, [r7, #4]
 800354c:	f000 fa32 	bl	80039b4 <DMA_CalcBaseAndBitshift>
 8003550:	4603      	mov	r3, r0
 8003552:	60fb      	str	r3, [r7, #12]
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003558:	223f      	movs	r2, #63	; 0x3f
 800355a:	409a      	lsls	r2, r3
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	609a      	str	r2, [r3, #8]
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	2200      	movs	r2, #0
 8003564:	655a      	str	r2, [r3, #84]	; 0x54
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	2201      	movs	r2, #1
 800356a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800356e:	2300      	movs	r3, #0
 8003570:	4618      	mov	r0, r3
 8003572:	3718      	adds	r7, #24
 8003574:	46bd      	mov	sp, r7
 8003576:	bd80      	pop	{r7, pc}
 8003578:	f010803f 	.word	0xf010803f

0800357c <HAL_DMA_Abort>:
 800357c:	b580      	push	{r7, lr}
 800357e:	b084      	sub	sp, #16
 8003580:	af00      	add	r7, sp, #0
 8003582:	6078      	str	r0, [r7, #4]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003588:	60fb      	str	r3, [r7, #12]
 800358a:	f7ff fba5 	bl	8002cd8 <HAL_GetTick>
 800358e:	60b8      	str	r0, [r7, #8]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003596:	b2db      	uxtb	r3, r3
 8003598:	2b02      	cmp	r3, #2
 800359a:	d008      	beq.n	80035ae <HAL_DMA_Abort+0x32>
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	2280      	movs	r2, #128	; 0x80
 80035a0:	655a      	str	r2, [r3, #84]	; 0x54
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2200      	movs	r2, #0
 80035a6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80035aa:	2301      	movs	r3, #1
 80035ac:	e052      	b.n	8003654 <HAL_DMA_Abort+0xd8>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	681a      	ldr	r2, [r3, #0]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	681b      	ldr	r3, [r3, #0]
 80035b8:	f022 0216 	bic.w	r2, r2, #22
 80035bc:	601a      	str	r2, [r3, #0]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	695a      	ldr	r2, [r3, #20]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80035cc:	615a      	str	r2, [r3, #20]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	d103      	bne.n	80035de <HAL_DMA_Abort+0x62>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d007      	beq.n	80035ee <HAL_DMA_Abort+0x72>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	681a      	ldr	r2, [r3, #0]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f022 0208 	bic.w	r2, r2, #8
 80035ec:	601a      	str	r2, [r3, #0]
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	681a      	ldr	r2, [r3, #0]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	f022 0201 	bic.w	r2, r2, #1
 80035fc:	601a      	str	r2, [r3, #0]
 80035fe:	e013      	b.n	8003628 <HAL_DMA_Abort+0xac>
 8003600:	f7ff fb6a 	bl	8002cd8 <HAL_GetTick>
 8003604:	4602      	mov	r2, r0
 8003606:	68bb      	ldr	r3, [r7, #8]
 8003608:	1ad3      	subs	r3, r2, r3
 800360a:	2b05      	cmp	r3, #5
 800360c:	d90c      	bls.n	8003628 <HAL_DMA_Abort+0xac>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	2220      	movs	r2, #32
 8003612:	655a      	str	r2, [r3, #84]	; 0x54
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2203      	movs	r2, #3
 8003618:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	2200      	movs	r2, #0
 8003620:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003624:	2303      	movs	r3, #3
 8003626:	e015      	b.n	8003654 <HAL_DMA_Abort+0xd8>
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	f003 0301 	and.w	r3, r3, #1
 8003632:	2b00      	cmp	r3, #0
 8003634:	d1e4      	bne.n	8003600 <HAL_DMA_Abort+0x84>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800363a:	223f      	movs	r2, #63	; 0x3f
 800363c:	409a      	lsls	r2, r3
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	609a      	str	r2, [r3, #8]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	2201      	movs	r2, #1
 8003646:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	2200      	movs	r2, #0
 800364e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003652:	2300      	movs	r3, #0
 8003654:	4618      	mov	r0, r3
 8003656:	3710      	adds	r7, #16
 8003658:	46bd      	mov	sp, r7
 800365a:	bd80      	pop	{r7, pc}

0800365c <HAL_DMA_Abort_IT>:
 800365c:	b480      	push	{r7}
 800365e:	b083      	sub	sp, #12
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800366a:	b2db      	uxtb	r3, r3
 800366c:	2b02      	cmp	r3, #2
 800366e:	d004      	beq.n	800367a <HAL_DMA_Abort_IT+0x1e>
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	2280      	movs	r2, #128	; 0x80
 8003674:	655a      	str	r2, [r3, #84]	; 0x54
 8003676:	2301      	movs	r3, #1
 8003678:	e00c      	b.n	8003694 <HAL_DMA_Abort_IT+0x38>
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	2205      	movs	r2, #5
 800367e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	681a      	ldr	r2, [r3, #0]
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	f022 0201 	bic.w	r2, r2, #1
 8003690:	601a      	str	r2, [r3, #0]
 8003692:	2300      	movs	r3, #0
 8003694:	4618      	mov	r0, r3
 8003696:	370c      	adds	r7, #12
 8003698:	46bd      	mov	sp, r7
 800369a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800369e:	4770      	bx	lr

080036a0 <HAL_DMA_IRQHandler>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b086      	sub	sp, #24
 80036a4:	af00      	add	r7, sp, #0
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	2300      	movs	r3, #0
 80036aa:	60bb      	str	r3, [r7, #8]
 80036ac:	4b92      	ldr	r3, [pc, #584]	; (80038f8 <HAL_DMA_IRQHandler+0x258>)
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	4a92      	ldr	r2, [pc, #584]	; (80038fc <HAL_DMA_IRQHandler+0x25c>)
 80036b2:	fba2 2303 	umull	r2, r3, r2, r3
 80036b6:	0a9b      	lsrs	r3, r3, #10
 80036b8:	617b      	str	r3, [r7, #20]
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80036be:	613b      	str	r3, [r7, #16]
 80036c0:	693b      	ldr	r3, [r7, #16]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	60fb      	str	r3, [r7, #12]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036ca:	2208      	movs	r2, #8
 80036cc:	409a      	lsls	r2, r3
 80036ce:	68fb      	ldr	r3, [r7, #12]
 80036d0:	4013      	ands	r3, r2
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d01a      	beq.n	800370c <HAL_DMA_IRQHandler+0x6c>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	f003 0304 	and.w	r3, r3, #4
 80036e0:	2b00      	cmp	r3, #0
 80036e2:	d013      	beq.n	800370c <HAL_DMA_IRQHandler+0x6c>
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	681a      	ldr	r2, [r3, #0]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	f022 0204 	bic.w	r2, r2, #4
 80036f2:	601a      	str	r2, [r3, #0]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036f8:	2208      	movs	r2, #8
 80036fa:	409a      	lsls	r2, r3
 80036fc:	693b      	ldr	r3, [r7, #16]
 80036fe:	609a      	str	r2, [r3, #8]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003704:	f043 0201 	orr.w	r2, r3, #1
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	655a      	str	r2, [r3, #84]	; 0x54
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003710:	2201      	movs	r2, #1
 8003712:	409a      	lsls	r2, r3
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	4013      	ands	r3, r2
 8003718:	2b00      	cmp	r3, #0
 800371a:	d012      	beq.n	8003742 <HAL_DMA_IRQHandler+0xa2>
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	681b      	ldr	r3, [r3, #0]
 8003720:	695b      	ldr	r3, [r3, #20]
 8003722:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003726:	2b00      	cmp	r3, #0
 8003728:	d00b      	beq.n	8003742 <HAL_DMA_IRQHandler+0xa2>
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800372e:	2201      	movs	r2, #1
 8003730:	409a      	lsls	r2, r3
 8003732:	693b      	ldr	r3, [r7, #16]
 8003734:	609a      	str	r2, [r3, #8]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800373a:	f043 0202 	orr.w	r2, r3, #2
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	655a      	str	r2, [r3, #84]	; 0x54
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003746:	2204      	movs	r2, #4
 8003748:	409a      	lsls	r2, r3
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	4013      	ands	r3, r2
 800374e:	2b00      	cmp	r3, #0
 8003750:	d012      	beq.n	8003778 <HAL_DMA_IRQHandler+0xd8>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	f003 0302 	and.w	r3, r3, #2
 800375c:	2b00      	cmp	r3, #0
 800375e:	d00b      	beq.n	8003778 <HAL_DMA_IRQHandler+0xd8>
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003764:	2204      	movs	r2, #4
 8003766:	409a      	lsls	r2, r3
 8003768:	693b      	ldr	r3, [r7, #16]
 800376a:	609a      	str	r2, [r3, #8]
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003770:	f043 0204 	orr.w	r2, r3, #4
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	655a      	str	r2, [r3, #84]	; 0x54
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800377c:	2210      	movs	r2, #16
 800377e:	409a      	lsls	r2, r3
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	4013      	ands	r3, r2
 8003784:	2b00      	cmp	r3, #0
 8003786:	d043      	beq.n	8003810 <HAL_DMA_IRQHandler+0x170>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	f003 0308 	and.w	r3, r3, #8
 8003792:	2b00      	cmp	r3, #0
 8003794:	d03c      	beq.n	8003810 <HAL_DMA_IRQHandler+0x170>
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800379a:	2210      	movs	r2, #16
 800379c:	409a      	lsls	r2, r3
 800379e:	693b      	ldr	r3, [r7, #16]
 80037a0:	609a      	str	r2, [r3, #8]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d018      	beq.n	80037e2 <HAL_DMA_IRQHandler+0x142>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d108      	bne.n	80037d0 <HAL_DMA_IRQHandler+0x130>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d024      	beq.n	8003810 <HAL_DMA_IRQHandler+0x170>
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ca:	6878      	ldr	r0, [r7, #4]
 80037cc:	4798      	blx	r3
 80037ce:	e01f      	b.n	8003810 <HAL_DMA_IRQHandler+0x170>
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d01b      	beq.n	8003810 <HAL_DMA_IRQHandler+0x170>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80037dc:	6878      	ldr	r0, [r7, #4]
 80037de:	4798      	blx	r3
 80037e0:	e016      	b.n	8003810 <HAL_DMA_IRQHandler+0x170>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d107      	bne.n	8003800 <HAL_DMA_IRQHandler+0x160>
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	681a      	ldr	r2, [r3, #0]
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	f022 0208 	bic.w	r2, r2, #8
 80037fe:	601a      	str	r2, [r3, #0]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003804:	2b00      	cmp	r3, #0
 8003806:	d003      	beq.n	8003810 <HAL_DMA_IRQHandler+0x170>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800380c:	6878      	ldr	r0, [r7, #4]
 800380e:	4798      	blx	r3
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003814:	2220      	movs	r2, #32
 8003816:	409a      	lsls	r2, r3
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	4013      	ands	r3, r2
 800381c:	2b00      	cmp	r3, #0
 800381e:	f000 808e 	beq.w	800393e <HAL_DMA_IRQHandler+0x29e>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	f003 0310 	and.w	r3, r3, #16
 800382c:	2b00      	cmp	r3, #0
 800382e:	f000 8086 	beq.w	800393e <HAL_DMA_IRQHandler+0x29e>
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003836:	2220      	movs	r2, #32
 8003838:	409a      	lsls	r2, r3
 800383a:	693b      	ldr	r3, [r7, #16]
 800383c:	609a      	str	r2, [r3, #8]
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003844:	b2db      	uxtb	r3, r3
 8003846:	2b05      	cmp	r3, #5
 8003848:	d136      	bne.n	80038b8 <HAL_DMA_IRQHandler+0x218>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	681a      	ldr	r2, [r3, #0]
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	f022 0216 	bic.w	r2, r2, #22
 8003858:	601a      	str	r2, [r3, #0]
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	695a      	ldr	r2, [r3, #20]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003868:	615a      	str	r2, [r3, #20]
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800386e:	2b00      	cmp	r3, #0
 8003870:	d103      	bne.n	800387a <HAL_DMA_IRQHandler+0x1da>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003876:	2b00      	cmp	r3, #0
 8003878:	d007      	beq.n	800388a <HAL_DMA_IRQHandler+0x1ea>
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	681a      	ldr	r2, [r3, #0]
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	f022 0208 	bic.w	r2, r2, #8
 8003888:	601a      	str	r2, [r3, #0]
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800388e:	223f      	movs	r2, #63	; 0x3f
 8003890:	409a      	lsls	r2, r3
 8003892:	693b      	ldr	r3, [r7, #16]
 8003894:	609a      	str	r2, [r3, #8]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	2201      	movs	r2, #1
 800389a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2200      	movs	r2, #0
 80038a2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d07d      	beq.n	80039aa <HAL_DMA_IRQHandler+0x30a>
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80038b2:	6878      	ldr	r0, [r7, #4]
 80038b4:	4798      	blx	r3
 80038b6:	e078      	b.n	80039aa <HAL_DMA_IRQHandler+0x30a>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d01c      	beq.n	8003900 <HAL_DMA_IRQHandler+0x260>
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80038d0:	2b00      	cmp	r3, #0
 80038d2:	d108      	bne.n	80038e6 <HAL_DMA_IRQHandler+0x246>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d030      	beq.n	800393e <HAL_DMA_IRQHandler+0x29e>
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80038e0:	6878      	ldr	r0, [r7, #4]
 80038e2:	4798      	blx	r3
 80038e4:	e02b      	b.n	800393e <HAL_DMA_IRQHandler+0x29e>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d027      	beq.n	800393e <HAL_DMA_IRQHandler+0x29e>
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038f2:	6878      	ldr	r0, [r7, #4]
 80038f4:	4798      	blx	r3
 80038f6:	e022      	b.n	800393e <HAL_DMA_IRQHandler+0x29e>
 80038f8:	20000020 	.word	0x20000020
 80038fc:	1b4e81b5 	.word	0x1b4e81b5
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800390a:	2b00      	cmp	r3, #0
 800390c:	d10f      	bne.n	800392e <HAL_DMA_IRQHandler+0x28e>
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	681a      	ldr	r2, [r3, #0]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	f022 0210 	bic.w	r2, r2, #16
 800391c:	601a      	str	r2, [r3, #0]
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	2201      	movs	r2, #1
 8003922:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	2200      	movs	r2, #0
 800392a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003932:	2b00      	cmp	r3, #0
 8003934:	d003      	beq.n	800393e <HAL_DMA_IRQHandler+0x29e>
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800393a:	6878      	ldr	r0, [r7, #4]
 800393c:	4798      	blx	r3
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003942:	2b00      	cmp	r3, #0
 8003944:	d032      	beq.n	80039ac <HAL_DMA_IRQHandler+0x30c>
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800394a:	f003 0301 	and.w	r3, r3, #1
 800394e:	2b00      	cmp	r3, #0
 8003950:	d022      	beq.n	8003998 <HAL_DMA_IRQHandler+0x2f8>
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	2205      	movs	r2, #5
 8003956:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	681a      	ldr	r2, [r3, #0]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	f022 0201 	bic.w	r2, r2, #1
 8003968:	601a      	str	r2, [r3, #0]
 800396a:	68bb      	ldr	r3, [r7, #8]
 800396c:	3301      	adds	r3, #1
 800396e:	60bb      	str	r3, [r7, #8]
 8003970:	697a      	ldr	r2, [r7, #20]
 8003972:	429a      	cmp	r2, r3
 8003974:	d307      	bcc.n	8003986 <HAL_DMA_IRQHandler+0x2e6>
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	f003 0301 	and.w	r3, r3, #1
 8003980:	2b00      	cmp	r3, #0
 8003982:	d1f2      	bne.n	800396a <HAL_DMA_IRQHandler+0x2ca>
 8003984:	e000      	b.n	8003988 <HAL_DMA_IRQHandler+0x2e8>
 8003986:	bf00      	nop
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	2201      	movs	r2, #1
 800398c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	2200      	movs	r2, #0
 8003994:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800399c:	2b00      	cmp	r3, #0
 800399e:	d005      	beq.n	80039ac <HAL_DMA_IRQHandler+0x30c>
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80039a4:	6878      	ldr	r0, [r7, #4]
 80039a6:	4798      	blx	r3
 80039a8:	e000      	b.n	80039ac <HAL_DMA_IRQHandler+0x30c>
 80039aa:	bf00      	nop
 80039ac:	3718      	adds	r7, #24
 80039ae:	46bd      	mov	sp, r7
 80039b0:	bd80      	pop	{r7, pc}
 80039b2:	bf00      	nop

080039b4 <DMA_CalcBaseAndBitshift>:
 80039b4:	b480      	push	{r7}
 80039b6:	b085      	sub	sp, #20
 80039b8:	af00      	add	r7, sp, #0
 80039ba:	6078      	str	r0, [r7, #4]
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	b2db      	uxtb	r3, r3
 80039c2:	3b10      	subs	r3, #16
 80039c4:	4a14      	ldr	r2, [pc, #80]	; (8003a18 <DMA_CalcBaseAndBitshift+0x64>)
 80039c6:	fba2 2303 	umull	r2, r3, r2, r3
 80039ca:	091b      	lsrs	r3, r3, #4
 80039cc:	60fb      	str	r3, [r7, #12]
 80039ce:	4a13      	ldr	r2, [pc, #76]	; (8003a1c <DMA_CalcBaseAndBitshift+0x68>)
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	4413      	add	r3, r2
 80039d4:	781b      	ldrb	r3, [r3, #0]
 80039d6:	461a      	mov	r2, r3
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	65da      	str	r2, [r3, #92]	; 0x5c
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	2b03      	cmp	r3, #3
 80039e0:	d909      	bls.n	80039f6 <DMA_CalcBaseAndBitshift+0x42>
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80039ea:	f023 0303 	bic.w	r3, r3, #3
 80039ee:	1d1a      	adds	r2, r3, #4
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	659a      	str	r2, [r3, #88]	; 0x58
 80039f4:	e007      	b.n	8003a06 <DMA_CalcBaseAndBitshift+0x52>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80039fe:	f023 0303 	bic.w	r3, r3, #3
 8003a02:	687a      	ldr	r2, [r7, #4]
 8003a04:	6593      	str	r3, [r2, #88]	; 0x58
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a0a:	4618      	mov	r0, r3
 8003a0c:	3714      	adds	r7, #20
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a14:	4770      	bx	lr
 8003a16:	bf00      	nop
 8003a18:	aaaaaaab 	.word	0xaaaaaaab
 8003a1c:	0800b6d0 	.word	0x0800b6d0

08003a20 <DMA_CheckFifoParam>:
 8003a20:	b480      	push	{r7}
 8003a22:	b085      	sub	sp, #20
 8003a24:	af00      	add	r7, sp, #0
 8003a26:	6078      	str	r0, [r7, #4]
 8003a28:	2300      	movs	r3, #0
 8003a2a:	73fb      	strb	r3, [r7, #15]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a30:	60bb      	str	r3, [r7, #8]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	699b      	ldr	r3, [r3, #24]
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d11f      	bne.n	8003a7a <DMA_CheckFifoParam+0x5a>
 8003a3a:	68bb      	ldr	r3, [r7, #8]
 8003a3c:	2b03      	cmp	r3, #3
 8003a3e:	d856      	bhi.n	8003aee <DMA_CheckFifoParam+0xce>
 8003a40:	a201      	add	r2, pc, #4	; (adr r2, 8003a48 <DMA_CheckFifoParam+0x28>)
 8003a42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a46:	bf00      	nop
 8003a48:	08003a59 	.word	0x08003a59
 8003a4c:	08003a6b 	.word	0x08003a6b
 8003a50:	08003a59 	.word	0x08003a59
 8003a54:	08003aef 	.word	0x08003aef
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a5c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003a60:	2b00      	cmp	r3, #0
 8003a62:	d046      	beq.n	8003af2 <DMA_CheckFifoParam+0xd2>
 8003a64:	2301      	movs	r3, #1
 8003a66:	73fb      	strb	r3, [r7, #15]
 8003a68:	e043      	b.n	8003af2 <DMA_CheckFifoParam+0xd2>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a6e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003a72:	d140      	bne.n	8003af6 <DMA_CheckFifoParam+0xd6>
 8003a74:	2301      	movs	r3, #1
 8003a76:	73fb      	strb	r3, [r7, #15]
 8003a78:	e03d      	b.n	8003af6 <DMA_CheckFifoParam+0xd6>
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	699b      	ldr	r3, [r3, #24]
 8003a7e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003a82:	d121      	bne.n	8003ac8 <DMA_CheckFifoParam+0xa8>
 8003a84:	68bb      	ldr	r3, [r7, #8]
 8003a86:	2b03      	cmp	r3, #3
 8003a88:	d837      	bhi.n	8003afa <DMA_CheckFifoParam+0xda>
 8003a8a:	a201      	add	r2, pc, #4	; (adr r2, 8003a90 <DMA_CheckFifoParam+0x70>)
 8003a8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a90:	08003aa1 	.word	0x08003aa1
 8003a94:	08003aa7 	.word	0x08003aa7
 8003a98:	08003aa1 	.word	0x08003aa1
 8003a9c:	08003ab9 	.word	0x08003ab9
 8003aa0:	2301      	movs	r3, #1
 8003aa2:	73fb      	strb	r3, [r7, #15]
 8003aa4:	e030      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003aaa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d025      	beq.n	8003afe <DMA_CheckFifoParam+0xde>
 8003ab2:	2301      	movs	r3, #1
 8003ab4:	73fb      	strb	r3, [r7, #15]
 8003ab6:	e022      	b.n	8003afe <DMA_CheckFifoParam+0xde>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003abc:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003ac0:	d11f      	bne.n	8003b02 <DMA_CheckFifoParam+0xe2>
 8003ac2:	2301      	movs	r3, #1
 8003ac4:	73fb      	strb	r3, [r7, #15]
 8003ac6:	e01c      	b.n	8003b02 <DMA_CheckFifoParam+0xe2>
 8003ac8:	68bb      	ldr	r3, [r7, #8]
 8003aca:	2b02      	cmp	r3, #2
 8003acc:	d903      	bls.n	8003ad6 <DMA_CheckFifoParam+0xb6>
 8003ace:	68bb      	ldr	r3, [r7, #8]
 8003ad0:	2b03      	cmp	r3, #3
 8003ad2:	d003      	beq.n	8003adc <DMA_CheckFifoParam+0xbc>
 8003ad4:	e018      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003ad6:	2301      	movs	r3, #1
 8003ad8:	73fb      	strb	r3, [r7, #15]
 8003ada:	e015      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ae0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	d00e      	beq.n	8003b06 <DMA_CheckFifoParam+0xe6>
 8003ae8:	2301      	movs	r3, #1
 8003aea:	73fb      	strb	r3, [r7, #15]
 8003aec:	e00b      	b.n	8003b06 <DMA_CheckFifoParam+0xe6>
 8003aee:	bf00      	nop
 8003af0:	e00a      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003af2:	bf00      	nop
 8003af4:	e008      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003af6:	bf00      	nop
 8003af8:	e006      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003afa:	bf00      	nop
 8003afc:	e004      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003afe:	bf00      	nop
 8003b00:	e002      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003b02:	bf00      	nop
 8003b04:	e000      	b.n	8003b08 <DMA_CheckFifoParam+0xe8>
 8003b06:	bf00      	nop
 8003b08:	7bfb      	ldrb	r3, [r7, #15]
 8003b0a:	4618      	mov	r0, r3
 8003b0c:	3714      	adds	r7, #20
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b14:	4770      	bx	lr
 8003b16:	bf00      	nop

08003b18 <HAL_GPIO_Init>:
 8003b18:	b480      	push	{r7}
 8003b1a:	b089      	sub	sp, #36	; 0x24
 8003b1c:	af00      	add	r7, sp, #0
 8003b1e:	6078      	str	r0, [r7, #4]
 8003b20:	6039      	str	r1, [r7, #0]
 8003b22:	2300      	movs	r3, #0
 8003b24:	617b      	str	r3, [r7, #20]
 8003b26:	2300      	movs	r3, #0
 8003b28:	613b      	str	r3, [r7, #16]
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	61bb      	str	r3, [r7, #24]
 8003b2e:	2300      	movs	r3, #0
 8003b30:	61fb      	str	r3, [r7, #28]
 8003b32:	e16b      	b.n	8003e0c <HAL_GPIO_Init+0x2f4>
 8003b34:	2201      	movs	r2, #1
 8003b36:	69fb      	ldr	r3, [r7, #28]
 8003b38:	fa02 f303 	lsl.w	r3, r2, r3
 8003b3c:	617b      	str	r3, [r7, #20]
 8003b3e:	683b      	ldr	r3, [r7, #0]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	697a      	ldr	r2, [r7, #20]
 8003b44:	4013      	ands	r3, r2
 8003b46:	613b      	str	r3, [r7, #16]
 8003b48:	693a      	ldr	r2, [r7, #16]
 8003b4a:	697b      	ldr	r3, [r7, #20]
 8003b4c:	429a      	cmp	r2, r3
 8003b4e:	f040 815a 	bne.w	8003e06 <HAL_GPIO_Init+0x2ee>
 8003b52:	683b      	ldr	r3, [r7, #0]
 8003b54:	685b      	ldr	r3, [r3, #4]
 8003b56:	f003 0303 	and.w	r3, r3, #3
 8003b5a:	2b01      	cmp	r3, #1
 8003b5c:	d005      	beq.n	8003b6a <HAL_GPIO_Init+0x52>
 8003b5e:	683b      	ldr	r3, [r7, #0]
 8003b60:	685b      	ldr	r3, [r3, #4]
 8003b62:	f003 0303 	and.w	r3, r3, #3
 8003b66:	2b02      	cmp	r3, #2
 8003b68:	d130      	bne.n	8003bcc <HAL_GPIO_Init+0xb4>
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	689b      	ldr	r3, [r3, #8]
 8003b6e:	61bb      	str	r3, [r7, #24]
 8003b70:	69fb      	ldr	r3, [r7, #28]
 8003b72:	005b      	lsls	r3, r3, #1
 8003b74:	2203      	movs	r2, #3
 8003b76:	fa02 f303 	lsl.w	r3, r2, r3
 8003b7a:	43db      	mvns	r3, r3
 8003b7c:	69ba      	ldr	r2, [r7, #24]
 8003b7e:	4013      	ands	r3, r2
 8003b80:	61bb      	str	r3, [r7, #24]
 8003b82:	683b      	ldr	r3, [r7, #0]
 8003b84:	68da      	ldr	r2, [r3, #12]
 8003b86:	69fb      	ldr	r3, [r7, #28]
 8003b88:	005b      	lsls	r3, r3, #1
 8003b8a:	fa02 f303 	lsl.w	r3, r2, r3
 8003b8e:	69ba      	ldr	r2, [r7, #24]
 8003b90:	4313      	orrs	r3, r2
 8003b92:	61bb      	str	r3, [r7, #24]
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	69ba      	ldr	r2, [r7, #24]
 8003b98:	609a      	str	r2, [r3, #8]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	685b      	ldr	r3, [r3, #4]
 8003b9e:	61bb      	str	r3, [r7, #24]
 8003ba0:	2201      	movs	r2, #1
 8003ba2:	69fb      	ldr	r3, [r7, #28]
 8003ba4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ba8:	43db      	mvns	r3, r3
 8003baa:	69ba      	ldr	r2, [r7, #24]
 8003bac:	4013      	ands	r3, r2
 8003bae:	61bb      	str	r3, [r7, #24]
 8003bb0:	683b      	ldr	r3, [r7, #0]
 8003bb2:	685b      	ldr	r3, [r3, #4]
 8003bb4:	091b      	lsrs	r3, r3, #4
 8003bb6:	f003 0201 	and.w	r2, r3, #1
 8003bba:	69fb      	ldr	r3, [r7, #28]
 8003bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8003bc0:	69ba      	ldr	r2, [r7, #24]
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	61bb      	str	r3, [r7, #24]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	69ba      	ldr	r2, [r7, #24]
 8003bca:	605a      	str	r2, [r3, #4]
 8003bcc:	683b      	ldr	r3, [r7, #0]
 8003bce:	685b      	ldr	r3, [r3, #4]
 8003bd0:	f003 0303 	and.w	r3, r3, #3
 8003bd4:	2b03      	cmp	r3, #3
 8003bd6:	d017      	beq.n	8003c08 <HAL_GPIO_Init+0xf0>
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	68db      	ldr	r3, [r3, #12]
 8003bdc:	61bb      	str	r3, [r7, #24]
 8003bde:	69fb      	ldr	r3, [r7, #28]
 8003be0:	005b      	lsls	r3, r3, #1
 8003be2:	2203      	movs	r2, #3
 8003be4:	fa02 f303 	lsl.w	r3, r2, r3
 8003be8:	43db      	mvns	r3, r3
 8003bea:	69ba      	ldr	r2, [r7, #24]
 8003bec:	4013      	ands	r3, r2
 8003bee:	61bb      	str	r3, [r7, #24]
 8003bf0:	683b      	ldr	r3, [r7, #0]
 8003bf2:	689a      	ldr	r2, [r3, #8]
 8003bf4:	69fb      	ldr	r3, [r7, #28]
 8003bf6:	005b      	lsls	r3, r3, #1
 8003bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bfc:	69ba      	ldr	r2, [r7, #24]
 8003bfe:	4313      	orrs	r3, r2
 8003c00:	61bb      	str	r3, [r7, #24]
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	69ba      	ldr	r2, [r7, #24]
 8003c06:	60da      	str	r2, [r3, #12]
 8003c08:	683b      	ldr	r3, [r7, #0]
 8003c0a:	685b      	ldr	r3, [r3, #4]
 8003c0c:	f003 0303 	and.w	r3, r3, #3
 8003c10:	2b02      	cmp	r3, #2
 8003c12:	d123      	bne.n	8003c5c <HAL_GPIO_Init+0x144>
 8003c14:	69fb      	ldr	r3, [r7, #28]
 8003c16:	08da      	lsrs	r2, r3, #3
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	3208      	adds	r2, #8
 8003c1c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003c20:	61bb      	str	r3, [r7, #24]
 8003c22:	69fb      	ldr	r3, [r7, #28]
 8003c24:	f003 0307 	and.w	r3, r3, #7
 8003c28:	009b      	lsls	r3, r3, #2
 8003c2a:	220f      	movs	r2, #15
 8003c2c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c30:	43db      	mvns	r3, r3
 8003c32:	69ba      	ldr	r2, [r7, #24]
 8003c34:	4013      	ands	r3, r2
 8003c36:	61bb      	str	r3, [r7, #24]
 8003c38:	683b      	ldr	r3, [r7, #0]
 8003c3a:	691a      	ldr	r2, [r3, #16]
 8003c3c:	69fb      	ldr	r3, [r7, #28]
 8003c3e:	f003 0307 	and.w	r3, r3, #7
 8003c42:	009b      	lsls	r3, r3, #2
 8003c44:	fa02 f303 	lsl.w	r3, r2, r3
 8003c48:	69ba      	ldr	r2, [r7, #24]
 8003c4a:	4313      	orrs	r3, r2
 8003c4c:	61bb      	str	r3, [r7, #24]
 8003c4e:	69fb      	ldr	r3, [r7, #28]
 8003c50:	08da      	lsrs	r2, r3, #3
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	3208      	adds	r2, #8
 8003c56:	69b9      	ldr	r1, [r7, #24]
 8003c58:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	61bb      	str	r3, [r7, #24]
 8003c62:	69fb      	ldr	r3, [r7, #28]
 8003c64:	005b      	lsls	r3, r3, #1
 8003c66:	2203      	movs	r2, #3
 8003c68:	fa02 f303 	lsl.w	r3, r2, r3
 8003c6c:	43db      	mvns	r3, r3
 8003c6e:	69ba      	ldr	r2, [r7, #24]
 8003c70:	4013      	ands	r3, r2
 8003c72:	61bb      	str	r3, [r7, #24]
 8003c74:	683b      	ldr	r3, [r7, #0]
 8003c76:	685b      	ldr	r3, [r3, #4]
 8003c78:	f003 0203 	and.w	r2, r3, #3
 8003c7c:	69fb      	ldr	r3, [r7, #28]
 8003c7e:	005b      	lsls	r3, r3, #1
 8003c80:	fa02 f303 	lsl.w	r3, r2, r3
 8003c84:	69ba      	ldr	r2, [r7, #24]
 8003c86:	4313      	orrs	r3, r2
 8003c88:	61bb      	str	r3, [r7, #24]
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	69ba      	ldr	r2, [r7, #24]
 8003c8e:	601a      	str	r2, [r3, #0]
 8003c90:	683b      	ldr	r3, [r7, #0]
 8003c92:	685b      	ldr	r3, [r3, #4]
 8003c94:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	f000 80b4 	beq.w	8003e06 <HAL_GPIO_Init+0x2ee>
 8003c9e:	2300      	movs	r3, #0
 8003ca0:	60fb      	str	r3, [r7, #12]
 8003ca2:	4b60      	ldr	r3, [pc, #384]	; (8003e24 <HAL_GPIO_Init+0x30c>)
 8003ca4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ca6:	4a5f      	ldr	r2, [pc, #380]	; (8003e24 <HAL_GPIO_Init+0x30c>)
 8003ca8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003cac:	6453      	str	r3, [r2, #68]	; 0x44
 8003cae:	4b5d      	ldr	r3, [pc, #372]	; (8003e24 <HAL_GPIO_Init+0x30c>)
 8003cb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cb2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003cb6:	60fb      	str	r3, [r7, #12]
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	4a5b      	ldr	r2, [pc, #364]	; (8003e28 <HAL_GPIO_Init+0x310>)
 8003cbc:	69fb      	ldr	r3, [r7, #28]
 8003cbe:	089b      	lsrs	r3, r3, #2
 8003cc0:	3302      	adds	r3, #2
 8003cc2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003cc6:	61bb      	str	r3, [r7, #24]
 8003cc8:	69fb      	ldr	r3, [r7, #28]
 8003cca:	f003 0303 	and.w	r3, r3, #3
 8003cce:	009b      	lsls	r3, r3, #2
 8003cd0:	220f      	movs	r2, #15
 8003cd2:	fa02 f303 	lsl.w	r3, r2, r3
 8003cd6:	43db      	mvns	r3, r3
 8003cd8:	69ba      	ldr	r2, [r7, #24]
 8003cda:	4013      	ands	r3, r2
 8003cdc:	61bb      	str	r3, [r7, #24]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	4a52      	ldr	r2, [pc, #328]	; (8003e2c <HAL_GPIO_Init+0x314>)
 8003ce2:	4293      	cmp	r3, r2
 8003ce4:	d02b      	beq.n	8003d3e <HAL_GPIO_Init+0x226>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	4a51      	ldr	r2, [pc, #324]	; (8003e30 <HAL_GPIO_Init+0x318>)
 8003cea:	4293      	cmp	r3, r2
 8003cec:	d025      	beq.n	8003d3a <HAL_GPIO_Init+0x222>
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	4a50      	ldr	r2, [pc, #320]	; (8003e34 <HAL_GPIO_Init+0x31c>)
 8003cf2:	4293      	cmp	r3, r2
 8003cf4:	d01f      	beq.n	8003d36 <HAL_GPIO_Init+0x21e>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	4a4f      	ldr	r2, [pc, #316]	; (8003e38 <HAL_GPIO_Init+0x320>)
 8003cfa:	4293      	cmp	r3, r2
 8003cfc:	d019      	beq.n	8003d32 <HAL_GPIO_Init+0x21a>
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	4a4e      	ldr	r2, [pc, #312]	; (8003e3c <HAL_GPIO_Init+0x324>)
 8003d02:	4293      	cmp	r3, r2
 8003d04:	d013      	beq.n	8003d2e <HAL_GPIO_Init+0x216>
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	4a4d      	ldr	r2, [pc, #308]	; (8003e40 <HAL_GPIO_Init+0x328>)
 8003d0a:	4293      	cmp	r3, r2
 8003d0c:	d00d      	beq.n	8003d2a <HAL_GPIO_Init+0x212>
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	4a4c      	ldr	r2, [pc, #304]	; (8003e44 <HAL_GPIO_Init+0x32c>)
 8003d12:	4293      	cmp	r3, r2
 8003d14:	d007      	beq.n	8003d26 <HAL_GPIO_Init+0x20e>
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	4a4b      	ldr	r2, [pc, #300]	; (8003e48 <HAL_GPIO_Init+0x330>)
 8003d1a:	4293      	cmp	r3, r2
 8003d1c:	d101      	bne.n	8003d22 <HAL_GPIO_Init+0x20a>
 8003d1e:	2307      	movs	r3, #7
 8003d20:	e00e      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d22:	2308      	movs	r3, #8
 8003d24:	e00c      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d26:	2306      	movs	r3, #6
 8003d28:	e00a      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d2a:	2305      	movs	r3, #5
 8003d2c:	e008      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d2e:	2304      	movs	r3, #4
 8003d30:	e006      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d32:	2303      	movs	r3, #3
 8003d34:	e004      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d36:	2302      	movs	r3, #2
 8003d38:	e002      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d3a:	2301      	movs	r3, #1
 8003d3c:	e000      	b.n	8003d40 <HAL_GPIO_Init+0x228>
 8003d3e:	2300      	movs	r3, #0
 8003d40:	69fa      	ldr	r2, [r7, #28]
 8003d42:	f002 0203 	and.w	r2, r2, #3
 8003d46:	0092      	lsls	r2, r2, #2
 8003d48:	4093      	lsls	r3, r2
 8003d4a:	69ba      	ldr	r2, [r7, #24]
 8003d4c:	4313      	orrs	r3, r2
 8003d4e:	61bb      	str	r3, [r7, #24]
 8003d50:	4935      	ldr	r1, [pc, #212]	; (8003e28 <HAL_GPIO_Init+0x310>)
 8003d52:	69fb      	ldr	r3, [r7, #28]
 8003d54:	089b      	lsrs	r3, r3, #2
 8003d56:	3302      	adds	r3, #2
 8003d58:	69ba      	ldr	r2, [r7, #24]
 8003d5a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003d5e:	4b3b      	ldr	r3, [pc, #236]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	61bb      	str	r3, [r7, #24]
 8003d64:	693b      	ldr	r3, [r7, #16]
 8003d66:	43db      	mvns	r3, r3
 8003d68:	69ba      	ldr	r2, [r7, #24]
 8003d6a:	4013      	ands	r3, r2
 8003d6c:	61bb      	str	r3, [r7, #24]
 8003d6e:	683b      	ldr	r3, [r7, #0]
 8003d70:	685b      	ldr	r3, [r3, #4]
 8003d72:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003d76:	2b00      	cmp	r3, #0
 8003d78:	d003      	beq.n	8003d82 <HAL_GPIO_Init+0x26a>
 8003d7a:	69ba      	ldr	r2, [r7, #24]
 8003d7c:	693b      	ldr	r3, [r7, #16]
 8003d7e:	4313      	orrs	r3, r2
 8003d80:	61bb      	str	r3, [r7, #24]
 8003d82:	4a32      	ldr	r2, [pc, #200]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003d84:	69bb      	ldr	r3, [r7, #24]
 8003d86:	6013      	str	r3, [r2, #0]
 8003d88:	4b30      	ldr	r3, [pc, #192]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003d8a:	685b      	ldr	r3, [r3, #4]
 8003d8c:	61bb      	str	r3, [r7, #24]
 8003d8e:	693b      	ldr	r3, [r7, #16]
 8003d90:	43db      	mvns	r3, r3
 8003d92:	69ba      	ldr	r2, [r7, #24]
 8003d94:	4013      	ands	r3, r2
 8003d96:	61bb      	str	r3, [r7, #24]
 8003d98:	683b      	ldr	r3, [r7, #0]
 8003d9a:	685b      	ldr	r3, [r3, #4]
 8003d9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	d003      	beq.n	8003dac <HAL_GPIO_Init+0x294>
 8003da4:	69ba      	ldr	r2, [r7, #24]
 8003da6:	693b      	ldr	r3, [r7, #16]
 8003da8:	4313      	orrs	r3, r2
 8003daa:	61bb      	str	r3, [r7, #24]
 8003dac:	4a27      	ldr	r2, [pc, #156]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003dae:	69bb      	ldr	r3, [r7, #24]
 8003db0:	6053      	str	r3, [r2, #4]
 8003db2:	4b26      	ldr	r3, [pc, #152]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003db4:	689b      	ldr	r3, [r3, #8]
 8003db6:	61bb      	str	r3, [r7, #24]
 8003db8:	693b      	ldr	r3, [r7, #16]
 8003dba:	43db      	mvns	r3, r3
 8003dbc:	69ba      	ldr	r2, [r7, #24]
 8003dbe:	4013      	ands	r3, r2
 8003dc0:	61bb      	str	r3, [r7, #24]
 8003dc2:	683b      	ldr	r3, [r7, #0]
 8003dc4:	685b      	ldr	r3, [r3, #4]
 8003dc6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d003      	beq.n	8003dd6 <HAL_GPIO_Init+0x2be>
 8003dce:	69ba      	ldr	r2, [r7, #24]
 8003dd0:	693b      	ldr	r3, [r7, #16]
 8003dd2:	4313      	orrs	r3, r2
 8003dd4:	61bb      	str	r3, [r7, #24]
 8003dd6:	4a1d      	ldr	r2, [pc, #116]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003dd8:	69bb      	ldr	r3, [r7, #24]
 8003dda:	6093      	str	r3, [r2, #8]
 8003ddc:	4b1b      	ldr	r3, [pc, #108]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003dde:	68db      	ldr	r3, [r3, #12]
 8003de0:	61bb      	str	r3, [r7, #24]
 8003de2:	693b      	ldr	r3, [r7, #16]
 8003de4:	43db      	mvns	r3, r3
 8003de6:	69ba      	ldr	r2, [r7, #24]
 8003de8:	4013      	ands	r3, r2
 8003dea:	61bb      	str	r3, [r7, #24]
 8003dec:	683b      	ldr	r3, [r7, #0]
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	d003      	beq.n	8003e00 <HAL_GPIO_Init+0x2e8>
 8003df8:	69ba      	ldr	r2, [r7, #24]
 8003dfa:	693b      	ldr	r3, [r7, #16]
 8003dfc:	4313      	orrs	r3, r2
 8003dfe:	61bb      	str	r3, [r7, #24]
 8003e00:	4a12      	ldr	r2, [pc, #72]	; (8003e4c <HAL_GPIO_Init+0x334>)
 8003e02:	69bb      	ldr	r3, [r7, #24]
 8003e04:	60d3      	str	r3, [r2, #12]
 8003e06:	69fb      	ldr	r3, [r7, #28]
 8003e08:	3301      	adds	r3, #1
 8003e0a:	61fb      	str	r3, [r7, #28]
 8003e0c:	69fb      	ldr	r3, [r7, #28]
 8003e0e:	2b0f      	cmp	r3, #15
 8003e10:	f67f ae90 	bls.w	8003b34 <HAL_GPIO_Init+0x1c>
 8003e14:	bf00      	nop
 8003e16:	bf00      	nop
 8003e18:	3724      	adds	r7, #36	; 0x24
 8003e1a:	46bd      	mov	sp, r7
 8003e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e20:	4770      	bx	lr
 8003e22:	bf00      	nop
 8003e24:	40023800 	.word	0x40023800
 8003e28:	40013800 	.word	0x40013800
 8003e2c:	40020000 	.word	0x40020000
 8003e30:	40020400 	.word	0x40020400
 8003e34:	40020800 	.word	0x40020800
 8003e38:	40020c00 	.word	0x40020c00
 8003e3c:	40021000 	.word	0x40021000
 8003e40:	40021400 	.word	0x40021400
 8003e44:	40021800 	.word	0x40021800
 8003e48:	40021c00 	.word	0x40021c00
 8003e4c:	40013c00 	.word	0x40013c00

08003e50 <HAL_GPIO_WritePin>:
 8003e50:	b480      	push	{r7}
 8003e52:	b083      	sub	sp, #12
 8003e54:	af00      	add	r7, sp, #0
 8003e56:	6078      	str	r0, [r7, #4]
 8003e58:	460b      	mov	r3, r1
 8003e5a:	807b      	strh	r3, [r7, #2]
 8003e5c:	4613      	mov	r3, r2
 8003e5e:	707b      	strb	r3, [r7, #1]
 8003e60:	787b      	ldrb	r3, [r7, #1]
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d003      	beq.n	8003e6e <HAL_GPIO_WritePin+0x1e>
 8003e66:	887a      	ldrh	r2, [r7, #2]
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	619a      	str	r2, [r3, #24]
 8003e6c:	e003      	b.n	8003e76 <HAL_GPIO_WritePin+0x26>
 8003e6e:	887b      	ldrh	r3, [r7, #2]
 8003e70:	041a      	lsls	r2, r3, #16
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	619a      	str	r2, [r3, #24]
 8003e76:	bf00      	nop
 8003e78:	370c      	adds	r7, #12
 8003e7a:	46bd      	mov	sp, r7
 8003e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e80:	4770      	bx	lr
	...

08003e84 <HAL_I2C_Init>:
 8003e84:	b580      	push	{r7, lr}
 8003e86:	b084      	sub	sp, #16
 8003e88:	af00      	add	r7, sp, #0
 8003e8a:	6078      	str	r0, [r7, #4]
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d101      	bne.n	8003e96 <HAL_I2C_Init+0x12>
 8003e92:	2301      	movs	r3, #1
 8003e94:	e12b      	b.n	80040ee <HAL_I2C_Init+0x26a>
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003e9c:	b2db      	uxtb	r3, r3
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	d106      	bne.n	8003eb0 <HAL_I2C_Init+0x2c>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	2200      	movs	r2, #0
 8003ea6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003eaa:	6878      	ldr	r0, [r7, #4]
 8003eac:	f7fc ff4a 	bl	8000d44 <HAL_I2C_MspInit>
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	2224      	movs	r2, #36	; 0x24
 8003eb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	681a      	ldr	r2, [r3, #0]
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	f022 0201 	bic.w	r2, r2, #1
 8003ec6:	601a      	str	r2, [r3, #0]
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	681a      	ldr	r2, [r3, #0]
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003ed6:	601a      	str	r2, [r3, #0]
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	681a      	ldr	r2, [r3, #0]
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003ee6:	601a      	str	r2, [r3, #0]
 8003ee8:	f000 fd5c 	bl	80049a4 <HAL_RCC_GetPCLK1Freq>
 8003eec:	60f8      	str	r0, [r7, #12]
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	685b      	ldr	r3, [r3, #4]
 8003ef2:	4a81      	ldr	r2, [pc, #516]	; (80040f8 <HAL_I2C_Init+0x274>)
 8003ef4:	4293      	cmp	r3, r2
 8003ef6:	d807      	bhi.n	8003f08 <HAL_I2C_Init+0x84>
 8003ef8:	68fb      	ldr	r3, [r7, #12]
 8003efa:	4a80      	ldr	r2, [pc, #512]	; (80040fc <HAL_I2C_Init+0x278>)
 8003efc:	4293      	cmp	r3, r2
 8003efe:	bf94      	ite	ls
 8003f00:	2301      	movls	r3, #1
 8003f02:	2300      	movhi	r3, #0
 8003f04:	b2db      	uxtb	r3, r3
 8003f06:	e006      	b.n	8003f16 <HAL_I2C_Init+0x92>
 8003f08:	68fb      	ldr	r3, [r7, #12]
 8003f0a:	4a7d      	ldr	r2, [pc, #500]	; (8004100 <HAL_I2C_Init+0x27c>)
 8003f0c:	4293      	cmp	r3, r2
 8003f0e:	bf94      	ite	ls
 8003f10:	2301      	movls	r3, #1
 8003f12:	2300      	movhi	r3, #0
 8003f14:	b2db      	uxtb	r3, r3
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d001      	beq.n	8003f1e <HAL_I2C_Init+0x9a>
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	e0e7      	b.n	80040ee <HAL_I2C_Init+0x26a>
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	4a78      	ldr	r2, [pc, #480]	; (8004104 <HAL_I2C_Init+0x280>)
 8003f22:	fba2 2303 	umull	r2, r3, r2, r3
 8003f26:	0c9b      	lsrs	r3, r3, #18
 8003f28:	60bb      	str	r3, [r7, #8]
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	685b      	ldr	r3, [r3, #4]
 8003f30:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	68ba      	ldr	r2, [r7, #8]
 8003f3a:	430a      	orrs	r2, r1
 8003f3c:	605a      	str	r2, [r3, #4]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	6a1b      	ldr	r3, [r3, #32]
 8003f44:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	685b      	ldr	r3, [r3, #4]
 8003f4c:	4a6a      	ldr	r2, [pc, #424]	; (80040f8 <HAL_I2C_Init+0x274>)
 8003f4e:	4293      	cmp	r3, r2
 8003f50:	d802      	bhi.n	8003f58 <HAL_I2C_Init+0xd4>
 8003f52:	68bb      	ldr	r3, [r7, #8]
 8003f54:	3301      	adds	r3, #1
 8003f56:	e009      	b.n	8003f6c <HAL_I2C_Init+0xe8>
 8003f58:	68bb      	ldr	r3, [r7, #8]
 8003f5a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003f5e:	fb02 f303 	mul.w	r3, r2, r3
 8003f62:	4a69      	ldr	r2, [pc, #420]	; (8004108 <HAL_I2C_Init+0x284>)
 8003f64:	fba2 2303 	umull	r2, r3, r2, r3
 8003f68:	099b      	lsrs	r3, r3, #6
 8003f6a:	3301      	adds	r3, #1
 8003f6c:	687a      	ldr	r2, [r7, #4]
 8003f6e:	6812      	ldr	r2, [r2, #0]
 8003f70:	430b      	orrs	r3, r1
 8003f72:	6213      	str	r3, [r2, #32]
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	69db      	ldr	r3, [r3, #28]
 8003f7a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003f7e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	685b      	ldr	r3, [r3, #4]
 8003f86:	495c      	ldr	r1, [pc, #368]	; (80040f8 <HAL_I2C_Init+0x274>)
 8003f88:	428b      	cmp	r3, r1
 8003f8a:	d819      	bhi.n	8003fc0 <HAL_I2C_Init+0x13c>
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	1e59      	subs	r1, r3, #1
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	685b      	ldr	r3, [r3, #4]
 8003f94:	005b      	lsls	r3, r3, #1
 8003f96:	fbb1 f3f3 	udiv	r3, r1, r3
 8003f9a:	1c59      	adds	r1, r3, #1
 8003f9c:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003fa0:	400b      	ands	r3, r1
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d00a      	beq.n	8003fbc <HAL_I2C_Init+0x138>
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	1e59      	subs	r1, r3, #1
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	685b      	ldr	r3, [r3, #4]
 8003fae:	005b      	lsls	r3, r3, #1
 8003fb0:	fbb1 f3f3 	udiv	r3, r1, r3
 8003fb4:	3301      	adds	r3, #1
 8003fb6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003fba:	e051      	b.n	8004060 <HAL_I2C_Init+0x1dc>
 8003fbc:	2304      	movs	r3, #4
 8003fbe:	e04f      	b.n	8004060 <HAL_I2C_Init+0x1dc>
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	689b      	ldr	r3, [r3, #8]
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	d111      	bne.n	8003fec <HAL_I2C_Init+0x168>
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	1e58      	subs	r0, r3, #1
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	6859      	ldr	r1, [r3, #4]
 8003fd0:	460b      	mov	r3, r1
 8003fd2:	005b      	lsls	r3, r3, #1
 8003fd4:	440b      	add	r3, r1
 8003fd6:	fbb0 f3f3 	udiv	r3, r0, r3
 8003fda:	3301      	adds	r3, #1
 8003fdc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	bf0c      	ite	eq
 8003fe4:	2301      	moveq	r3, #1
 8003fe6:	2300      	movne	r3, #0
 8003fe8:	b2db      	uxtb	r3, r3
 8003fea:	e012      	b.n	8004012 <HAL_I2C_Init+0x18e>
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	1e58      	subs	r0, r3, #1
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	6859      	ldr	r1, [r3, #4]
 8003ff4:	460b      	mov	r3, r1
 8003ff6:	009b      	lsls	r3, r3, #2
 8003ff8:	440b      	add	r3, r1
 8003ffa:	0099      	lsls	r1, r3, #2
 8003ffc:	440b      	add	r3, r1
 8003ffe:	fbb0 f3f3 	udiv	r3, r0, r3
 8004002:	3301      	adds	r3, #1
 8004004:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004008:	2b00      	cmp	r3, #0
 800400a:	bf0c      	ite	eq
 800400c:	2301      	moveq	r3, #1
 800400e:	2300      	movne	r3, #0
 8004010:	b2db      	uxtb	r3, r3
 8004012:	2b00      	cmp	r3, #0
 8004014:	d001      	beq.n	800401a <HAL_I2C_Init+0x196>
 8004016:	2301      	movs	r3, #1
 8004018:	e022      	b.n	8004060 <HAL_I2C_Init+0x1dc>
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	689b      	ldr	r3, [r3, #8]
 800401e:	2b00      	cmp	r3, #0
 8004020:	d10e      	bne.n	8004040 <HAL_I2C_Init+0x1bc>
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	1e58      	subs	r0, r3, #1
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	6859      	ldr	r1, [r3, #4]
 800402a:	460b      	mov	r3, r1
 800402c:	005b      	lsls	r3, r3, #1
 800402e:	440b      	add	r3, r1
 8004030:	fbb0 f3f3 	udiv	r3, r0, r3
 8004034:	3301      	adds	r3, #1
 8004036:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800403a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800403e:	e00f      	b.n	8004060 <HAL_I2C_Init+0x1dc>
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	1e58      	subs	r0, r3, #1
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	6859      	ldr	r1, [r3, #4]
 8004048:	460b      	mov	r3, r1
 800404a:	009b      	lsls	r3, r3, #2
 800404c:	440b      	add	r3, r1
 800404e:	0099      	lsls	r1, r3, #2
 8004050:	440b      	add	r3, r1
 8004052:	fbb0 f3f3 	udiv	r3, r0, r3
 8004056:	3301      	adds	r3, #1
 8004058:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800405c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004060:	6879      	ldr	r1, [r7, #4]
 8004062:	6809      	ldr	r1, [r1, #0]
 8004064:	4313      	orrs	r3, r2
 8004066:	61cb      	str	r3, [r1, #28]
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	69da      	ldr	r2, [r3, #28]
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	6a1b      	ldr	r3, [r3, #32]
 800407a:	431a      	orrs	r2, r3
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	430a      	orrs	r2, r1
 8004082:	601a      	str	r2, [r3, #0]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	689b      	ldr	r3, [r3, #8]
 800408a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 800408e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8004092:	687a      	ldr	r2, [r7, #4]
 8004094:	6911      	ldr	r1, [r2, #16]
 8004096:	687a      	ldr	r2, [r7, #4]
 8004098:	68d2      	ldr	r2, [r2, #12]
 800409a:	4311      	orrs	r1, r2
 800409c:	687a      	ldr	r2, [r7, #4]
 800409e:	6812      	ldr	r2, [r2, #0]
 80040a0:	430b      	orrs	r3, r1
 80040a2:	6093      	str	r3, [r2, #8]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	68db      	ldr	r3, [r3, #12]
 80040aa:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	695a      	ldr	r2, [r3, #20]
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	699b      	ldr	r3, [r3, #24]
 80040b6:	431a      	orrs	r2, r3
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	430a      	orrs	r2, r1
 80040be:	60da      	str	r2, [r3, #12]
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	681a      	ldr	r2, [r3, #0]
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	f042 0201 	orr.w	r2, r2, #1
 80040ce:	601a      	str	r2, [r3, #0]
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	2200      	movs	r2, #0
 80040d4:	641a      	str	r2, [r3, #64]	; 0x40
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	2220      	movs	r2, #32
 80040da:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	2200      	movs	r2, #0
 80040e2:	631a      	str	r2, [r3, #48]	; 0x30
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	2200      	movs	r2, #0
 80040e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80040ec:	2300      	movs	r3, #0
 80040ee:	4618      	mov	r0, r3
 80040f0:	3710      	adds	r7, #16
 80040f2:	46bd      	mov	sp, r7
 80040f4:	bd80      	pop	{r7, pc}
 80040f6:	bf00      	nop
 80040f8:	000186a0 	.word	0x000186a0
 80040fc:	001e847f 	.word	0x001e847f
 8004100:	003d08ff 	.word	0x003d08ff
 8004104:	431bde83 	.word	0x431bde83
 8004108:	10624dd3 	.word	0x10624dd3

0800410c <HAL_RCC_OscConfig>:
 800410c:	b580      	push	{r7, lr}
 800410e:	b086      	sub	sp, #24
 8004110:	af00      	add	r7, sp, #0
 8004112:	6078      	str	r0, [r7, #4]
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	2b00      	cmp	r3, #0
 8004118:	d101      	bne.n	800411e <HAL_RCC_OscConfig+0x12>
 800411a:	2301      	movs	r3, #1
 800411c:	e264      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	f003 0301 	and.w	r3, r3, #1
 8004126:	2b00      	cmp	r3, #0
 8004128:	d075      	beq.n	8004216 <HAL_RCC_OscConfig+0x10a>
 800412a:	4ba3      	ldr	r3, [pc, #652]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800412c:	689b      	ldr	r3, [r3, #8]
 800412e:	f003 030c 	and.w	r3, r3, #12
 8004132:	2b04      	cmp	r3, #4
 8004134:	d00c      	beq.n	8004150 <HAL_RCC_OscConfig+0x44>
 8004136:	4ba0      	ldr	r3, [pc, #640]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004138:	689b      	ldr	r3, [r3, #8]
 800413a:	f003 030c 	and.w	r3, r3, #12
 800413e:	2b08      	cmp	r3, #8
 8004140:	d112      	bne.n	8004168 <HAL_RCC_OscConfig+0x5c>
 8004142:	4b9d      	ldr	r3, [pc, #628]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004144:	685b      	ldr	r3, [r3, #4]
 8004146:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800414a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800414e:	d10b      	bne.n	8004168 <HAL_RCC_OscConfig+0x5c>
 8004150:	4b99      	ldr	r3, [pc, #612]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004158:	2b00      	cmp	r3, #0
 800415a:	d05b      	beq.n	8004214 <HAL_RCC_OscConfig+0x108>
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	685b      	ldr	r3, [r3, #4]
 8004160:	2b00      	cmp	r3, #0
 8004162:	d157      	bne.n	8004214 <HAL_RCC_OscConfig+0x108>
 8004164:	2301      	movs	r3, #1
 8004166:	e23f      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	685b      	ldr	r3, [r3, #4]
 800416c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004170:	d106      	bne.n	8004180 <HAL_RCC_OscConfig+0x74>
 8004172:	4b91      	ldr	r3, [pc, #580]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4a90      	ldr	r2, [pc, #576]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004178:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800417c:	6013      	str	r3, [r2, #0]
 800417e:	e01d      	b.n	80041bc <HAL_RCC_OscConfig+0xb0>
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	685b      	ldr	r3, [r3, #4]
 8004184:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004188:	d10c      	bne.n	80041a4 <HAL_RCC_OscConfig+0x98>
 800418a:	4b8b      	ldr	r3, [pc, #556]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	4a8a      	ldr	r2, [pc, #552]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004190:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004194:	6013      	str	r3, [r2, #0]
 8004196:	4b88      	ldr	r3, [pc, #544]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004198:	681b      	ldr	r3, [r3, #0]
 800419a:	4a87      	ldr	r2, [pc, #540]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800419c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80041a0:	6013      	str	r3, [r2, #0]
 80041a2:	e00b      	b.n	80041bc <HAL_RCC_OscConfig+0xb0>
 80041a4:	4b84      	ldr	r3, [pc, #528]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	4a83      	ldr	r2, [pc, #524]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80041aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80041ae:	6013      	str	r3, [r2, #0]
 80041b0:	4b81      	ldr	r3, [pc, #516]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4a80      	ldr	r2, [pc, #512]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80041b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80041ba:	6013      	str	r3, [r2, #0]
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	685b      	ldr	r3, [r3, #4]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d013      	beq.n	80041ec <HAL_RCC_OscConfig+0xe0>
 80041c4:	f7fe fd88 	bl	8002cd8 <HAL_GetTick>
 80041c8:	6138      	str	r0, [r7, #16]
 80041ca:	e008      	b.n	80041de <HAL_RCC_OscConfig+0xd2>
 80041cc:	f7fe fd84 	bl	8002cd8 <HAL_GetTick>
 80041d0:	4602      	mov	r2, r0
 80041d2:	693b      	ldr	r3, [r7, #16]
 80041d4:	1ad3      	subs	r3, r2, r3
 80041d6:	2b64      	cmp	r3, #100	; 0x64
 80041d8:	d901      	bls.n	80041de <HAL_RCC_OscConfig+0xd2>
 80041da:	2303      	movs	r3, #3
 80041dc:	e204      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 80041de:	4b76      	ldr	r3, [pc, #472]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041e6:	2b00      	cmp	r3, #0
 80041e8:	d0f0      	beq.n	80041cc <HAL_RCC_OscConfig+0xc0>
 80041ea:	e014      	b.n	8004216 <HAL_RCC_OscConfig+0x10a>
 80041ec:	f7fe fd74 	bl	8002cd8 <HAL_GetTick>
 80041f0:	6138      	str	r0, [r7, #16]
 80041f2:	e008      	b.n	8004206 <HAL_RCC_OscConfig+0xfa>
 80041f4:	f7fe fd70 	bl	8002cd8 <HAL_GetTick>
 80041f8:	4602      	mov	r2, r0
 80041fa:	693b      	ldr	r3, [r7, #16]
 80041fc:	1ad3      	subs	r3, r2, r3
 80041fe:	2b64      	cmp	r3, #100	; 0x64
 8004200:	d901      	bls.n	8004206 <HAL_RCC_OscConfig+0xfa>
 8004202:	2303      	movs	r3, #3
 8004204:	e1f0      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 8004206:	4b6c      	ldr	r3, [pc, #432]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800420e:	2b00      	cmp	r3, #0
 8004210:	d1f0      	bne.n	80041f4 <HAL_RCC_OscConfig+0xe8>
 8004212:	e000      	b.n	8004216 <HAL_RCC_OscConfig+0x10a>
 8004214:	bf00      	nop
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	f003 0302 	and.w	r3, r3, #2
 800421e:	2b00      	cmp	r3, #0
 8004220:	d063      	beq.n	80042ea <HAL_RCC_OscConfig+0x1de>
 8004222:	4b65      	ldr	r3, [pc, #404]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004224:	689b      	ldr	r3, [r3, #8]
 8004226:	f003 030c 	and.w	r3, r3, #12
 800422a:	2b00      	cmp	r3, #0
 800422c:	d00b      	beq.n	8004246 <HAL_RCC_OscConfig+0x13a>
 800422e:	4b62      	ldr	r3, [pc, #392]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004230:	689b      	ldr	r3, [r3, #8]
 8004232:	f003 030c 	and.w	r3, r3, #12
 8004236:	2b08      	cmp	r3, #8
 8004238:	d11c      	bne.n	8004274 <HAL_RCC_OscConfig+0x168>
 800423a:	4b5f      	ldr	r3, [pc, #380]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800423c:	685b      	ldr	r3, [r3, #4]
 800423e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004242:	2b00      	cmp	r3, #0
 8004244:	d116      	bne.n	8004274 <HAL_RCC_OscConfig+0x168>
 8004246:	4b5c      	ldr	r3, [pc, #368]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	f003 0302 	and.w	r3, r3, #2
 800424e:	2b00      	cmp	r3, #0
 8004250:	d005      	beq.n	800425e <HAL_RCC_OscConfig+0x152>
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	68db      	ldr	r3, [r3, #12]
 8004256:	2b01      	cmp	r3, #1
 8004258:	d001      	beq.n	800425e <HAL_RCC_OscConfig+0x152>
 800425a:	2301      	movs	r3, #1
 800425c:	e1c4      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800425e:	4b56      	ldr	r3, [pc, #344]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	691b      	ldr	r3, [r3, #16]
 800426a:	00db      	lsls	r3, r3, #3
 800426c:	4952      	ldr	r1, [pc, #328]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800426e:	4313      	orrs	r3, r2
 8004270:	600b      	str	r3, [r1, #0]
 8004272:	e03a      	b.n	80042ea <HAL_RCC_OscConfig+0x1de>
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	68db      	ldr	r3, [r3, #12]
 8004278:	2b00      	cmp	r3, #0
 800427a:	d020      	beq.n	80042be <HAL_RCC_OscConfig+0x1b2>
 800427c:	4b4f      	ldr	r3, [pc, #316]	; (80043bc <HAL_RCC_OscConfig+0x2b0>)
 800427e:	2201      	movs	r2, #1
 8004280:	601a      	str	r2, [r3, #0]
 8004282:	f7fe fd29 	bl	8002cd8 <HAL_GetTick>
 8004286:	6138      	str	r0, [r7, #16]
 8004288:	e008      	b.n	800429c <HAL_RCC_OscConfig+0x190>
 800428a:	f7fe fd25 	bl	8002cd8 <HAL_GetTick>
 800428e:	4602      	mov	r2, r0
 8004290:	693b      	ldr	r3, [r7, #16]
 8004292:	1ad3      	subs	r3, r2, r3
 8004294:	2b02      	cmp	r3, #2
 8004296:	d901      	bls.n	800429c <HAL_RCC_OscConfig+0x190>
 8004298:	2303      	movs	r3, #3
 800429a:	e1a5      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800429c:	4b46      	ldr	r3, [pc, #280]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	f003 0302 	and.w	r3, r3, #2
 80042a4:	2b00      	cmp	r3, #0
 80042a6:	d0f0      	beq.n	800428a <HAL_RCC_OscConfig+0x17e>
 80042a8:	4b43      	ldr	r3, [pc, #268]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	691b      	ldr	r3, [r3, #16]
 80042b4:	00db      	lsls	r3, r3, #3
 80042b6:	4940      	ldr	r1, [pc, #256]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80042b8:	4313      	orrs	r3, r2
 80042ba:	600b      	str	r3, [r1, #0]
 80042bc:	e015      	b.n	80042ea <HAL_RCC_OscConfig+0x1de>
 80042be:	4b3f      	ldr	r3, [pc, #252]	; (80043bc <HAL_RCC_OscConfig+0x2b0>)
 80042c0:	2200      	movs	r2, #0
 80042c2:	601a      	str	r2, [r3, #0]
 80042c4:	f7fe fd08 	bl	8002cd8 <HAL_GetTick>
 80042c8:	6138      	str	r0, [r7, #16]
 80042ca:	e008      	b.n	80042de <HAL_RCC_OscConfig+0x1d2>
 80042cc:	f7fe fd04 	bl	8002cd8 <HAL_GetTick>
 80042d0:	4602      	mov	r2, r0
 80042d2:	693b      	ldr	r3, [r7, #16]
 80042d4:	1ad3      	subs	r3, r2, r3
 80042d6:	2b02      	cmp	r3, #2
 80042d8:	d901      	bls.n	80042de <HAL_RCC_OscConfig+0x1d2>
 80042da:	2303      	movs	r3, #3
 80042dc:	e184      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 80042de:	4b36      	ldr	r3, [pc, #216]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	f003 0302 	and.w	r3, r3, #2
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d1f0      	bne.n	80042cc <HAL_RCC_OscConfig+0x1c0>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	f003 0308 	and.w	r3, r3, #8
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d030      	beq.n	8004358 <HAL_RCC_OscConfig+0x24c>
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	695b      	ldr	r3, [r3, #20]
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d016      	beq.n	800432c <HAL_RCC_OscConfig+0x220>
 80042fe:	4b30      	ldr	r3, [pc, #192]	; (80043c0 <HAL_RCC_OscConfig+0x2b4>)
 8004300:	2201      	movs	r2, #1
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	f7fe fce8 	bl	8002cd8 <HAL_GetTick>
 8004308:	6138      	str	r0, [r7, #16]
 800430a:	e008      	b.n	800431e <HAL_RCC_OscConfig+0x212>
 800430c:	f7fe fce4 	bl	8002cd8 <HAL_GetTick>
 8004310:	4602      	mov	r2, r0
 8004312:	693b      	ldr	r3, [r7, #16]
 8004314:	1ad3      	subs	r3, r2, r3
 8004316:	2b02      	cmp	r3, #2
 8004318:	d901      	bls.n	800431e <HAL_RCC_OscConfig+0x212>
 800431a:	2303      	movs	r3, #3
 800431c:	e164      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800431e:	4b26      	ldr	r3, [pc, #152]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004320:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004322:	f003 0302 	and.w	r3, r3, #2
 8004326:	2b00      	cmp	r3, #0
 8004328:	d0f0      	beq.n	800430c <HAL_RCC_OscConfig+0x200>
 800432a:	e015      	b.n	8004358 <HAL_RCC_OscConfig+0x24c>
 800432c:	4b24      	ldr	r3, [pc, #144]	; (80043c0 <HAL_RCC_OscConfig+0x2b4>)
 800432e:	2200      	movs	r2, #0
 8004330:	601a      	str	r2, [r3, #0]
 8004332:	f7fe fcd1 	bl	8002cd8 <HAL_GetTick>
 8004336:	6138      	str	r0, [r7, #16]
 8004338:	e008      	b.n	800434c <HAL_RCC_OscConfig+0x240>
 800433a:	f7fe fccd 	bl	8002cd8 <HAL_GetTick>
 800433e:	4602      	mov	r2, r0
 8004340:	693b      	ldr	r3, [r7, #16]
 8004342:	1ad3      	subs	r3, r2, r3
 8004344:	2b02      	cmp	r3, #2
 8004346:	d901      	bls.n	800434c <HAL_RCC_OscConfig+0x240>
 8004348:	2303      	movs	r3, #3
 800434a:	e14d      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800434c:	4b1a      	ldr	r3, [pc, #104]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800434e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004350:	f003 0302 	and.w	r3, r3, #2
 8004354:	2b00      	cmp	r3, #0
 8004356:	d1f0      	bne.n	800433a <HAL_RCC_OscConfig+0x22e>
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	681b      	ldr	r3, [r3, #0]
 800435c:	f003 0304 	and.w	r3, r3, #4
 8004360:	2b00      	cmp	r3, #0
 8004362:	f000 80a0 	beq.w	80044a6 <HAL_RCC_OscConfig+0x39a>
 8004366:	2300      	movs	r3, #0
 8004368:	75fb      	strb	r3, [r7, #23]
 800436a:	4b13      	ldr	r3, [pc, #76]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800436c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800436e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004372:	2b00      	cmp	r3, #0
 8004374:	d10f      	bne.n	8004396 <HAL_RCC_OscConfig+0x28a>
 8004376:	2300      	movs	r3, #0
 8004378:	60bb      	str	r3, [r7, #8]
 800437a:	4b0f      	ldr	r3, [pc, #60]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 800437c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800437e:	4a0e      	ldr	r2, [pc, #56]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004380:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004384:	6413      	str	r3, [r2, #64]	; 0x40
 8004386:	4b0c      	ldr	r3, [pc, #48]	; (80043b8 <HAL_RCC_OscConfig+0x2ac>)
 8004388:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800438a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800438e:	60bb      	str	r3, [r7, #8]
 8004390:	68bb      	ldr	r3, [r7, #8]
 8004392:	2301      	movs	r3, #1
 8004394:	75fb      	strb	r3, [r7, #23]
 8004396:	4b0b      	ldr	r3, [pc, #44]	; (80043c4 <HAL_RCC_OscConfig+0x2b8>)
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d121      	bne.n	80043e6 <HAL_RCC_OscConfig+0x2da>
 80043a2:	4b08      	ldr	r3, [pc, #32]	; (80043c4 <HAL_RCC_OscConfig+0x2b8>)
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	4a07      	ldr	r2, [pc, #28]	; (80043c4 <HAL_RCC_OscConfig+0x2b8>)
 80043a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80043ac:	6013      	str	r3, [r2, #0]
 80043ae:	f7fe fc93 	bl	8002cd8 <HAL_GetTick>
 80043b2:	6138      	str	r0, [r7, #16]
 80043b4:	e011      	b.n	80043da <HAL_RCC_OscConfig+0x2ce>
 80043b6:	bf00      	nop
 80043b8:	40023800 	.word	0x40023800
 80043bc:	42470000 	.word	0x42470000
 80043c0:	42470e80 	.word	0x42470e80
 80043c4:	40007000 	.word	0x40007000
 80043c8:	f7fe fc86 	bl	8002cd8 <HAL_GetTick>
 80043cc:	4602      	mov	r2, r0
 80043ce:	693b      	ldr	r3, [r7, #16]
 80043d0:	1ad3      	subs	r3, r2, r3
 80043d2:	2b02      	cmp	r3, #2
 80043d4:	d901      	bls.n	80043da <HAL_RCC_OscConfig+0x2ce>
 80043d6:	2303      	movs	r3, #3
 80043d8:	e106      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 80043da:	4b85      	ldr	r3, [pc, #532]	; (80045f0 <HAL_RCC_OscConfig+0x4e4>)
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d0f0      	beq.n	80043c8 <HAL_RCC_OscConfig+0x2bc>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	689b      	ldr	r3, [r3, #8]
 80043ea:	2b01      	cmp	r3, #1
 80043ec:	d106      	bne.n	80043fc <HAL_RCC_OscConfig+0x2f0>
 80043ee:	4b81      	ldr	r3, [pc, #516]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 80043f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80043f2:	4a80      	ldr	r2, [pc, #512]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 80043f4:	f043 0301 	orr.w	r3, r3, #1
 80043f8:	6713      	str	r3, [r2, #112]	; 0x70
 80043fa:	e01c      	b.n	8004436 <HAL_RCC_OscConfig+0x32a>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	689b      	ldr	r3, [r3, #8]
 8004400:	2b05      	cmp	r3, #5
 8004402:	d10c      	bne.n	800441e <HAL_RCC_OscConfig+0x312>
 8004404:	4b7b      	ldr	r3, [pc, #492]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004406:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004408:	4a7a      	ldr	r2, [pc, #488]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800440a:	f043 0304 	orr.w	r3, r3, #4
 800440e:	6713      	str	r3, [r2, #112]	; 0x70
 8004410:	4b78      	ldr	r3, [pc, #480]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004412:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004414:	4a77      	ldr	r2, [pc, #476]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004416:	f043 0301 	orr.w	r3, r3, #1
 800441a:	6713      	str	r3, [r2, #112]	; 0x70
 800441c:	e00b      	b.n	8004436 <HAL_RCC_OscConfig+0x32a>
 800441e:	4b75      	ldr	r3, [pc, #468]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004420:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004422:	4a74      	ldr	r2, [pc, #464]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004424:	f023 0301 	bic.w	r3, r3, #1
 8004428:	6713      	str	r3, [r2, #112]	; 0x70
 800442a:	4b72      	ldr	r3, [pc, #456]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800442c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800442e:	4a71      	ldr	r2, [pc, #452]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004430:	f023 0304 	bic.w	r3, r3, #4
 8004434:	6713      	str	r3, [r2, #112]	; 0x70
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	689b      	ldr	r3, [r3, #8]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d015      	beq.n	800446a <HAL_RCC_OscConfig+0x35e>
 800443e:	f7fe fc4b 	bl	8002cd8 <HAL_GetTick>
 8004442:	6138      	str	r0, [r7, #16]
 8004444:	e00a      	b.n	800445c <HAL_RCC_OscConfig+0x350>
 8004446:	f7fe fc47 	bl	8002cd8 <HAL_GetTick>
 800444a:	4602      	mov	r2, r0
 800444c:	693b      	ldr	r3, [r7, #16]
 800444e:	1ad3      	subs	r3, r2, r3
 8004450:	f241 3288 	movw	r2, #5000	; 0x1388
 8004454:	4293      	cmp	r3, r2
 8004456:	d901      	bls.n	800445c <HAL_RCC_OscConfig+0x350>
 8004458:	2303      	movs	r3, #3
 800445a:	e0c5      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800445c:	4b65      	ldr	r3, [pc, #404]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800445e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004460:	f003 0302 	and.w	r3, r3, #2
 8004464:	2b00      	cmp	r3, #0
 8004466:	d0ee      	beq.n	8004446 <HAL_RCC_OscConfig+0x33a>
 8004468:	e014      	b.n	8004494 <HAL_RCC_OscConfig+0x388>
 800446a:	f7fe fc35 	bl	8002cd8 <HAL_GetTick>
 800446e:	6138      	str	r0, [r7, #16]
 8004470:	e00a      	b.n	8004488 <HAL_RCC_OscConfig+0x37c>
 8004472:	f7fe fc31 	bl	8002cd8 <HAL_GetTick>
 8004476:	4602      	mov	r2, r0
 8004478:	693b      	ldr	r3, [r7, #16]
 800447a:	1ad3      	subs	r3, r2, r3
 800447c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004480:	4293      	cmp	r3, r2
 8004482:	d901      	bls.n	8004488 <HAL_RCC_OscConfig+0x37c>
 8004484:	2303      	movs	r3, #3
 8004486:	e0af      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 8004488:	4b5a      	ldr	r3, [pc, #360]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800448a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800448c:	f003 0302 	and.w	r3, r3, #2
 8004490:	2b00      	cmp	r3, #0
 8004492:	d1ee      	bne.n	8004472 <HAL_RCC_OscConfig+0x366>
 8004494:	7dfb      	ldrb	r3, [r7, #23]
 8004496:	2b01      	cmp	r3, #1
 8004498:	d105      	bne.n	80044a6 <HAL_RCC_OscConfig+0x39a>
 800449a:	4b56      	ldr	r3, [pc, #344]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800449c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800449e:	4a55      	ldr	r2, [pc, #340]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 80044a0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80044a4:	6413      	str	r3, [r2, #64]	; 0x40
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	699b      	ldr	r3, [r3, #24]
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	f000 809b 	beq.w	80045e6 <HAL_RCC_OscConfig+0x4da>
 80044b0:	4b50      	ldr	r3, [pc, #320]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 80044b2:	689b      	ldr	r3, [r3, #8]
 80044b4:	f003 030c 	and.w	r3, r3, #12
 80044b8:	2b08      	cmp	r3, #8
 80044ba:	d05c      	beq.n	8004576 <HAL_RCC_OscConfig+0x46a>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	699b      	ldr	r3, [r3, #24]
 80044c0:	2b02      	cmp	r3, #2
 80044c2:	d141      	bne.n	8004548 <HAL_RCC_OscConfig+0x43c>
 80044c4:	4b4c      	ldr	r3, [pc, #304]	; (80045f8 <HAL_RCC_OscConfig+0x4ec>)
 80044c6:	2200      	movs	r2, #0
 80044c8:	601a      	str	r2, [r3, #0]
 80044ca:	f7fe fc05 	bl	8002cd8 <HAL_GetTick>
 80044ce:	6138      	str	r0, [r7, #16]
 80044d0:	e008      	b.n	80044e4 <HAL_RCC_OscConfig+0x3d8>
 80044d2:	f7fe fc01 	bl	8002cd8 <HAL_GetTick>
 80044d6:	4602      	mov	r2, r0
 80044d8:	693b      	ldr	r3, [r7, #16]
 80044da:	1ad3      	subs	r3, r2, r3
 80044dc:	2b02      	cmp	r3, #2
 80044de:	d901      	bls.n	80044e4 <HAL_RCC_OscConfig+0x3d8>
 80044e0:	2303      	movs	r3, #3
 80044e2:	e081      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 80044e4:	4b43      	ldr	r3, [pc, #268]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d1f0      	bne.n	80044d2 <HAL_RCC_OscConfig+0x3c6>
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	69da      	ldr	r2, [r3, #28]
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	6a1b      	ldr	r3, [r3, #32]
 80044f8:	431a      	orrs	r2, r3
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044fe:	019b      	lsls	r3, r3, #6
 8004500:	431a      	orrs	r2, r3
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004506:	085b      	lsrs	r3, r3, #1
 8004508:	3b01      	subs	r3, #1
 800450a:	041b      	lsls	r3, r3, #16
 800450c:	431a      	orrs	r2, r3
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004512:	061b      	lsls	r3, r3, #24
 8004514:	4937      	ldr	r1, [pc, #220]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004516:	4313      	orrs	r3, r2
 8004518:	604b      	str	r3, [r1, #4]
 800451a:	4b37      	ldr	r3, [pc, #220]	; (80045f8 <HAL_RCC_OscConfig+0x4ec>)
 800451c:	2201      	movs	r2, #1
 800451e:	601a      	str	r2, [r3, #0]
 8004520:	f7fe fbda 	bl	8002cd8 <HAL_GetTick>
 8004524:	6138      	str	r0, [r7, #16]
 8004526:	e008      	b.n	800453a <HAL_RCC_OscConfig+0x42e>
 8004528:	f7fe fbd6 	bl	8002cd8 <HAL_GetTick>
 800452c:	4602      	mov	r2, r0
 800452e:	693b      	ldr	r3, [r7, #16]
 8004530:	1ad3      	subs	r3, r2, r3
 8004532:	2b02      	cmp	r3, #2
 8004534:	d901      	bls.n	800453a <HAL_RCC_OscConfig+0x42e>
 8004536:	2303      	movs	r3, #3
 8004538:	e056      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 800453a:	4b2e      	ldr	r3, [pc, #184]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004542:	2b00      	cmp	r3, #0
 8004544:	d0f0      	beq.n	8004528 <HAL_RCC_OscConfig+0x41c>
 8004546:	e04e      	b.n	80045e6 <HAL_RCC_OscConfig+0x4da>
 8004548:	4b2b      	ldr	r3, [pc, #172]	; (80045f8 <HAL_RCC_OscConfig+0x4ec>)
 800454a:	2200      	movs	r2, #0
 800454c:	601a      	str	r2, [r3, #0]
 800454e:	f7fe fbc3 	bl	8002cd8 <HAL_GetTick>
 8004552:	6138      	str	r0, [r7, #16]
 8004554:	e008      	b.n	8004568 <HAL_RCC_OscConfig+0x45c>
 8004556:	f7fe fbbf 	bl	8002cd8 <HAL_GetTick>
 800455a:	4602      	mov	r2, r0
 800455c:	693b      	ldr	r3, [r7, #16]
 800455e:	1ad3      	subs	r3, r2, r3
 8004560:	2b02      	cmp	r3, #2
 8004562:	d901      	bls.n	8004568 <HAL_RCC_OscConfig+0x45c>
 8004564:	2303      	movs	r3, #3
 8004566:	e03f      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 8004568:	4b22      	ldr	r3, [pc, #136]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004570:	2b00      	cmp	r3, #0
 8004572:	d1f0      	bne.n	8004556 <HAL_RCC_OscConfig+0x44a>
 8004574:	e037      	b.n	80045e6 <HAL_RCC_OscConfig+0x4da>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	699b      	ldr	r3, [r3, #24]
 800457a:	2b01      	cmp	r3, #1
 800457c:	d101      	bne.n	8004582 <HAL_RCC_OscConfig+0x476>
 800457e:	2301      	movs	r3, #1
 8004580:	e032      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 8004582:	4b1c      	ldr	r3, [pc, #112]	; (80045f4 <HAL_RCC_OscConfig+0x4e8>)
 8004584:	685b      	ldr	r3, [r3, #4]
 8004586:	60fb      	str	r3, [r7, #12]
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	699b      	ldr	r3, [r3, #24]
 800458c:	2b01      	cmp	r3, #1
 800458e:	d028      	beq.n	80045e2 <HAL_RCC_OscConfig+0x4d6>
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	69db      	ldr	r3, [r3, #28]
 800459a:	429a      	cmp	r2, r3
 800459c:	d121      	bne.n	80045e2 <HAL_RCC_OscConfig+0x4d6>
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	6a1b      	ldr	r3, [r3, #32]
 80045a8:	429a      	cmp	r2, r3
 80045aa:	d11a      	bne.n	80045e2 <HAL_RCC_OscConfig+0x4d6>
 80045ac:	68fa      	ldr	r2, [r7, #12]
 80045ae:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80045b2:	4013      	ands	r3, r2
 80045b4:	687a      	ldr	r2, [r7, #4]
 80045b6:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80045b8:	0192      	lsls	r2, r2, #6
 80045ba:	4293      	cmp	r3, r2
 80045bc:	d111      	bne.n	80045e2 <HAL_RCC_OscConfig+0x4d6>
 80045be:	68fb      	ldr	r3, [r7, #12]
 80045c0:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80045c8:	085b      	lsrs	r3, r3, #1
 80045ca:	3b01      	subs	r3, #1
 80045cc:	041b      	lsls	r3, r3, #16
 80045ce:	429a      	cmp	r2, r3
 80045d0:	d107      	bne.n	80045e2 <HAL_RCC_OscConfig+0x4d6>
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045dc:	061b      	lsls	r3, r3, #24
 80045de:	429a      	cmp	r2, r3
 80045e0:	d001      	beq.n	80045e6 <HAL_RCC_OscConfig+0x4da>
 80045e2:	2301      	movs	r3, #1
 80045e4:	e000      	b.n	80045e8 <HAL_RCC_OscConfig+0x4dc>
 80045e6:	2300      	movs	r3, #0
 80045e8:	4618      	mov	r0, r3
 80045ea:	3718      	adds	r7, #24
 80045ec:	46bd      	mov	sp, r7
 80045ee:	bd80      	pop	{r7, pc}
 80045f0:	40007000 	.word	0x40007000
 80045f4:	40023800 	.word	0x40023800
 80045f8:	42470060 	.word	0x42470060

080045fc <HAL_RCC_ClockConfig>:
 80045fc:	b580      	push	{r7, lr}
 80045fe:	b084      	sub	sp, #16
 8004600:	af00      	add	r7, sp, #0
 8004602:	6078      	str	r0, [r7, #4]
 8004604:	6039      	str	r1, [r7, #0]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	2b00      	cmp	r3, #0
 800460a:	d101      	bne.n	8004610 <HAL_RCC_ClockConfig+0x14>
 800460c:	2301      	movs	r3, #1
 800460e:	e0cc      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 8004610:	4b68      	ldr	r3, [pc, #416]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	f003 0307 	and.w	r3, r3, #7
 8004618:	683a      	ldr	r2, [r7, #0]
 800461a:	429a      	cmp	r2, r3
 800461c:	d90c      	bls.n	8004638 <HAL_RCC_ClockConfig+0x3c>
 800461e:	4b65      	ldr	r3, [pc, #404]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004620:	683a      	ldr	r2, [r7, #0]
 8004622:	b2d2      	uxtb	r2, r2
 8004624:	701a      	strb	r2, [r3, #0]
 8004626:	4b63      	ldr	r3, [pc, #396]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	f003 0307 	and.w	r3, r3, #7
 800462e:	683a      	ldr	r2, [r7, #0]
 8004630:	429a      	cmp	r2, r3
 8004632:	d001      	beq.n	8004638 <HAL_RCC_ClockConfig+0x3c>
 8004634:	2301      	movs	r3, #1
 8004636:	e0b8      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	f003 0302 	and.w	r3, r3, #2
 8004640:	2b00      	cmp	r3, #0
 8004642:	d020      	beq.n	8004686 <HAL_RCC_ClockConfig+0x8a>
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	f003 0304 	and.w	r3, r3, #4
 800464c:	2b00      	cmp	r3, #0
 800464e:	d005      	beq.n	800465c <HAL_RCC_ClockConfig+0x60>
 8004650:	4b59      	ldr	r3, [pc, #356]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004652:	689b      	ldr	r3, [r3, #8]
 8004654:	4a58      	ldr	r2, [pc, #352]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004656:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800465a:	6093      	str	r3, [r2, #8]
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f003 0308 	and.w	r3, r3, #8
 8004664:	2b00      	cmp	r3, #0
 8004666:	d005      	beq.n	8004674 <HAL_RCC_ClockConfig+0x78>
 8004668:	4b53      	ldr	r3, [pc, #332]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800466a:	689b      	ldr	r3, [r3, #8]
 800466c:	4a52      	ldr	r2, [pc, #328]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800466e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004672:	6093      	str	r3, [r2, #8]
 8004674:	4b50      	ldr	r3, [pc, #320]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004676:	689b      	ldr	r3, [r3, #8]
 8004678:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	689b      	ldr	r3, [r3, #8]
 8004680:	494d      	ldr	r1, [pc, #308]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004682:	4313      	orrs	r3, r2
 8004684:	608b      	str	r3, [r1, #8]
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	f003 0301 	and.w	r3, r3, #1
 800468e:	2b00      	cmp	r3, #0
 8004690:	d044      	beq.n	800471c <HAL_RCC_ClockConfig+0x120>
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	685b      	ldr	r3, [r3, #4]
 8004696:	2b01      	cmp	r3, #1
 8004698:	d107      	bne.n	80046aa <HAL_RCC_ClockConfig+0xae>
 800469a:	4b47      	ldr	r3, [pc, #284]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046a2:	2b00      	cmp	r3, #0
 80046a4:	d119      	bne.n	80046da <HAL_RCC_ClockConfig+0xde>
 80046a6:	2301      	movs	r3, #1
 80046a8:	e07f      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	685b      	ldr	r3, [r3, #4]
 80046ae:	2b02      	cmp	r3, #2
 80046b0:	d003      	beq.n	80046ba <HAL_RCC_ClockConfig+0xbe>
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	685b      	ldr	r3, [r3, #4]
 80046b6:	2b03      	cmp	r3, #3
 80046b8:	d107      	bne.n	80046ca <HAL_RCC_ClockConfig+0xce>
 80046ba:	4b3f      	ldr	r3, [pc, #252]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d109      	bne.n	80046da <HAL_RCC_ClockConfig+0xde>
 80046c6:	2301      	movs	r3, #1
 80046c8:	e06f      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 80046ca:	4b3b      	ldr	r3, [pc, #236]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	f003 0302 	and.w	r3, r3, #2
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d101      	bne.n	80046da <HAL_RCC_ClockConfig+0xde>
 80046d6:	2301      	movs	r3, #1
 80046d8:	e067      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 80046da:	4b37      	ldr	r3, [pc, #220]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 80046dc:	689b      	ldr	r3, [r3, #8]
 80046de:	f023 0203 	bic.w	r2, r3, #3
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	685b      	ldr	r3, [r3, #4]
 80046e6:	4934      	ldr	r1, [pc, #208]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 80046e8:	4313      	orrs	r3, r2
 80046ea:	608b      	str	r3, [r1, #8]
 80046ec:	f7fe faf4 	bl	8002cd8 <HAL_GetTick>
 80046f0:	60f8      	str	r0, [r7, #12]
 80046f2:	e00a      	b.n	800470a <HAL_RCC_ClockConfig+0x10e>
 80046f4:	f7fe faf0 	bl	8002cd8 <HAL_GetTick>
 80046f8:	4602      	mov	r2, r0
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	1ad3      	subs	r3, r2, r3
 80046fe:	f241 3288 	movw	r2, #5000	; 0x1388
 8004702:	4293      	cmp	r3, r2
 8004704:	d901      	bls.n	800470a <HAL_RCC_ClockConfig+0x10e>
 8004706:	2303      	movs	r3, #3
 8004708:	e04f      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 800470a:	4b2b      	ldr	r3, [pc, #172]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800470c:	689b      	ldr	r3, [r3, #8]
 800470e:	f003 020c 	and.w	r2, r3, #12
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	685b      	ldr	r3, [r3, #4]
 8004716:	009b      	lsls	r3, r3, #2
 8004718:	429a      	cmp	r2, r3
 800471a:	d1eb      	bne.n	80046f4 <HAL_RCC_ClockConfig+0xf8>
 800471c:	4b25      	ldr	r3, [pc, #148]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	f003 0307 	and.w	r3, r3, #7
 8004724:	683a      	ldr	r2, [r7, #0]
 8004726:	429a      	cmp	r2, r3
 8004728:	d20c      	bcs.n	8004744 <HAL_RCC_ClockConfig+0x148>
 800472a:	4b22      	ldr	r3, [pc, #136]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 800472c:	683a      	ldr	r2, [r7, #0]
 800472e:	b2d2      	uxtb	r2, r2
 8004730:	701a      	strb	r2, [r3, #0]
 8004732:	4b20      	ldr	r3, [pc, #128]	; (80047b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f003 0307 	and.w	r3, r3, #7
 800473a:	683a      	ldr	r2, [r7, #0]
 800473c:	429a      	cmp	r2, r3
 800473e:	d001      	beq.n	8004744 <HAL_RCC_ClockConfig+0x148>
 8004740:	2301      	movs	r3, #1
 8004742:	e032      	b.n	80047aa <HAL_RCC_ClockConfig+0x1ae>
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	f003 0304 	and.w	r3, r3, #4
 800474c:	2b00      	cmp	r3, #0
 800474e:	d008      	beq.n	8004762 <HAL_RCC_ClockConfig+0x166>
 8004750:	4b19      	ldr	r3, [pc, #100]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004752:	689b      	ldr	r3, [r3, #8]
 8004754:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	68db      	ldr	r3, [r3, #12]
 800475c:	4916      	ldr	r1, [pc, #88]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800475e:	4313      	orrs	r3, r2
 8004760:	608b      	str	r3, [r1, #8]
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	f003 0308 	and.w	r3, r3, #8
 800476a:	2b00      	cmp	r3, #0
 800476c:	d009      	beq.n	8004782 <HAL_RCC_ClockConfig+0x186>
 800476e:	4b12      	ldr	r3, [pc, #72]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004770:	689b      	ldr	r3, [r3, #8]
 8004772:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	691b      	ldr	r3, [r3, #16]
 800477a:	00db      	lsls	r3, r3, #3
 800477c:	490e      	ldr	r1, [pc, #56]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800477e:	4313      	orrs	r3, r2
 8004780:	608b      	str	r3, [r1, #8]
 8004782:	f000 f821 	bl	80047c8 <HAL_RCC_GetSysClockFreq>
 8004786:	4602      	mov	r2, r0
 8004788:	4b0b      	ldr	r3, [pc, #44]	; (80047b8 <HAL_RCC_ClockConfig+0x1bc>)
 800478a:	689b      	ldr	r3, [r3, #8]
 800478c:	091b      	lsrs	r3, r3, #4
 800478e:	f003 030f 	and.w	r3, r3, #15
 8004792:	490a      	ldr	r1, [pc, #40]	; (80047bc <HAL_RCC_ClockConfig+0x1c0>)
 8004794:	5ccb      	ldrb	r3, [r1, r3]
 8004796:	fa22 f303 	lsr.w	r3, r2, r3
 800479a:	4a09      	ldr	r2, [pc, #36]	; (80047c0 <HAL_RCC_ClockConfig+0x1c4>)
 800479c:	6013      	str	r3, [r2, #0]
 800479e:	4b09      	ldr	r3, [pc, #36]	; (80047c4 <HAL_RCC_ClockConfig+0x1c8>)
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	4618      	mov	r0, r3
 80047a4:	f7fe fa54 	bl	8002c50 <HAL_InitTick>
 80047a8:	2300      	movs	r3, #0
 80047aa:	4618      	mov	r0, r3
 80047ac:	3710      	adds	r7, #16
 80047ae:	46bd      	mov	sp, r7
 80047b0:	bd80      	pop	{r7, pc}
 80047b2:	bf00      	nop
 80047b4:	40023c00 	.word	0x40023c00
 80047b8:	40023800 	.word	0x40023800
 80047bc:	0800b6b8 	.word	0x0800b6b8
 80047c0:	20000020 	.word	0x20000020
 80047c4:	20000024 	.word	0x20000024

080047c8 <HAL_RCC_GetSysClockFreq>:
 80047c8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80047cc:	b084      	sub	sp, #16
 80047ce:	af00      	add	r7, sp, #0
 80047d0:	2300      	movs	r3, #0
 80047d2:	607b      	str	r3, [r7, #4]
 80047d4:	2300      	movs	r3, #0
 80047d6:	60fb      	str	r3, [r7, #12]
 80047d8:	2300      	movs	r3, #0
 80047da:	603b      	str	r3, [r7, #0]
 80047dc:	2300      	movs	r3, #0
 80047de:	60bb      	str	r3, [r7, #8]
 80047e0:	4b67      	ldr	r3, [pc, #412]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80047e2:	689b      	ldr	r3, [r3, #8]
 80047e4:	f003 030c 	and.w	r3, r3, #12
 80047e8:	2b08      	cmp	r3, #8
 80047ea:	d00d      	beq.n	8004808 <HAL_RCC_GetSysClockFreq+0x40>
 80047ec:	2b08      	cmp	r3, #8
 80047ee:	f200 80bd 	bhi.w	800496c <HAL_RCC_GetSysClockFreq+0x1a4>
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d002      	beq.n	80047fc <HAL_RCC_GetSysClockFreq+0x34>
 80047f6:	2b04      	cmp	r3, #4
 80047f8:	d003      	beq.n	8004802 <HAL_RCC_GetSysClockFreq+0x3a>
 80047fa:	e0b7      	b.n	800496c <HAL_RCC_GetSysClockFreq+0x1a4>
 80047fc:	4b61      	ldr	r3, [pc, #388]	; (8004984 <HAL_RCC_GetSysClockFreq+0x1bc>)
 80047fe:	60bb      	str	r3, [r7, #8]
 8004800:	e0b7      	b.n	8004972 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004802:	4b61      	ldr	r3, [pc, #388]	; (8004988 <HAL_RCC_GetSysClockFreq+0x1c0>)
 8004804:	60bb      	str	r3, [r7, #8]
 8004806:	e0b4      	b.n	8004972 <HAL_RCC_GetSysClockFreq+0x1aa>
 8004808:	4b5d      	ldr	r3, [pc, #372]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 800480a:	685b      	ldr	r3, [r3, #4]
 800480c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004810:	607b      	str	r3, [r7, #4]
 8004812:	4b5b      	ldr	r3, [pc, #364]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004814:	685b      	ldr	r3, [r3, #4]
 8004816:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800481a:	2b00      	cmp	r3, #0
 800481c:	d04d      	beq.n	80048ba <HAL_RCC_GetSysClockFreq+0xf2>
 800481e:	4b58      	ldr	r3, [pc, #352]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004820:	685b      	ldr	r3, [r3, #4]
 8004822:	099b      	lsrs	r3, r3, #6
 8004824:	461a      	mov	r2, r3
 8004826:	f04f 0300 	mov.w	r3, #0
 800482a:	f240 10ff 	movw	r0, #511	; 0x1ff
 800482e:	f04f 0100 	mov.w	r1, #0
 8004832:	ea02 0800 	and.w	r8, r2, r0
 8004836:	ea03 0901 	and.w	r9, r3, r1
 800483a:	4640      	mov	r0, r8
 800483c:	4649      	mov	r1, r9
 800483e:	f04f 0200 	mov.w	r2, #0
 8004842:	f04f 0300 	mov.w	r3, #0
 8004846:	014b      	lsls	r3, r1, #5
 8004848:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800484c:	0142      	lsls	r2, r0, #5
 800484e:	4610      	mov	r0, r2
 8004850:	4619      	mov	r1, r3
 8004852:	ebb0 0008 	subs.w	r0, r0, r8
 8004856:	eb61 0109 	sbc.w	r1, r1, r9
 800485a:	f04f 0200 	mov.w	r2, #0
 800485e:	f04f 0300 	mov.w	r3, #0
 8004862:	018b      	lsls	r3, r1, #6
 8004864:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8004868:	0182      	lsls	r2, r0, #6
 800486a:	1a12      	subs	r2, r2, r0
 800486c:	eb63 0301 	sbc.w	r3, r3, r1
 8004870:	f04f 0000 	mov.w	r0, #0
 8004874:	f04f 0100 	mov.w	r1, #0
 8004878:	00d9      	lsls	r1, r3, #3
 800487a:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800487e:	00d0      	lsls	r0, r2, #3
 8004880:	4602      	mov	r2, r0
 8004882:	460b      	mov	r3, r1
 8004884:	eb12 0208 	adds.w	r2, r2, r8
 8004888:	eb43 0309 	adc.w	r3, r3, r9
 800488c:	f04f 0000 	mov.w	r0, #0
 8004890:	f04f 0100 	mov.w	r1, #0
 8004894:	0259      	lsls	r1, r3, #9
 8004896:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 800489a:	0250      	lsls	r0, r2, #9
 800489c:	4602      	mov	r2, r0
 800489e:	460b      	mov	r3, r1
 80048a0:	4610      	mov	r0, r2
 80048a2:	4619      	mov	r1, r3
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	461a      	mov	r2, r3
 80048a8:	f04f 0300 	mov.w	r3, #0
 80048ac:	f7fb fce0 	bl	8000270 <__aeabi_uldivmod>
 80048b0:	4602      	mov	r2, r0
 80048b2:	460b      	mov	r3, r1
 80048b4:	4613      	mov	r3, r2
 80048b6:	60fb      	str	r3, [r7, #12]
 80048b8:	e04a      	b.n	8004950 <HAL_RCC_GetSysClockFreq+0x188>
 80048ba:	4b31      	ldr	r3, [pc, #196]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80048bc:	685b      	ldr	r3, [r3, #4]
 80048be:	099b      	lsrs	r3, r3, #6
 80048c0:	461a      	mov	r2, r3
 80048c2:	f04f 0300 	mov.w	r3, #0
 80048c6:	f240 10ff 	movw	r0, #511	; 0x1ff
 80048ca:	f04f 0100 	mov.w	r1, #0
 80048ce:	ea02 0400 	and.w	r4, r2, r0
 80048d2:	ea03 0501 	and.w	r5, r3, r1
 80048d6:	4620      	mov	r0, r4
 80048d8:	4629      	mov	r1, r5
 80048da:	f04f 0200 	mov.w	r2, #0
 80048de:	f04f 0300 	mov.w	r3, #0
 80048e2:	014b      	lsls	r3, r1, #5
 80048e4:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80048e8:	0142      	lsls	r2, r0, #5
 80048ea:	4610      	mov	r0, r2
 80048ec:	4619      	mov	r1, r3
 80048ee:	1b00      	subs	r0, r0, r4
 80048f0:	eb61 0105 	sbc.w	r1, r1, r5
 80048f4:	f04f 0200 	mov.w	r2, #0
 80048f8:	f04f 0300 	mov.w	r3, #0
 80048fc:	018b      	lsls	r3, r1, #6
 80048fe:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8004902:	0182      	lsls	r2, r0, #6
 8004904:	1a12      	subs	r2, r2, r0
 8004906:	eb63 0301 	sbc.w	r3, r3, r1
 800490a:	f04f 0000 	mov.w	r0, #0
 800490e:	f04f 0100 	mov.w	r1, #0
 8004912:	00d9      	lsls	r1, r3, #3
 8004914:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8004918:	00d0      	lsls	r0, r2, #3
 800491a:	4602      	mov	r2, r0
 800491c:	460b      	mov	r3, r1
 800491e:	1912      	adds	r2, r2, r4
 8004920:	eb45 0303 	adc.w	r3, r5, r3
 8004924:	f04f 0000 	mov.w	r0, #0
 8004928:	f04f 0100 	mov.w	r1, #0
 800492c:	0299      	lsls	r1, r3, #10
 800492e:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8004932:	0290      	lsls	r0, r2, #10
 8004934:	4602      	mov	r2, r0
 8004936:	460b      	mov	r3, r1
 8004938:	4610      	mov	r0, r2
 800493a:	4619      	mov	r1, r3
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	461a      	mov	r2, r3
 8004940:	f04f 0300 	mov.w	r3, #0
 8004944:	f7fb fc94 	bl	8000270 <__aeabi_uldivmod>
 8004948:	4602      	mov	r2, r0
 800494a:	460b      	mov	r3, r1
 800494c:	4613      	mov	r3, r2
 800494e:	60fb      	str	r3, [r7, #12]
 8004950:	4b0b      	ldr	r3, [pc, #44]	; (8004980 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8004952:	685b      	ldr	r3, [r3, #4]
 8004954:	0c1b      	lsrs	r3, r3, #16
 8004956:	f003 0303 	and.w	r3, r3, #3
 800495a:	3301      	adds	r3, #1
 800495c:	005b      	lsls	r3, r3, #1
 800495e:	603b      	str	r3, [r7, #0]
 8004960:	68fa      	ldr	r2, [r7, #12]
 8004962:	683b      	ldr	r3, [r7, #0]
 8004964:	fbb2 f3f3 	udiv	r3, r2, r3
 8004968:	60bb      	str	r3, [r7, #8]
 800496a:	e002      	b.n	8004972 <HAL_RCC_GetSysClockFreq+0x1aa>
 800496c:	4b05      	ldr	r3, [pc, #20]	; (8004984 <HAL_RCC_GetSysClockFreq+0x1bc>)
 800496e:	60bb      	str	r3, [r7, #8]
 8004970:	bf00      	nop
 8004972:	68bb      	ldr	r3, [r7, #8]
 8004974:	4618      	mov	r0, r3
 8004976:	3710      	adds	r7, #16
 8004978:	46bd      	mov	sp, r7
 800497a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800497e:	bf00      	nop
 8004980:	40023800 	.word	0x40023800
 8004984:	00f42400 	.word	0x00f42400
 8004988:	007a1200 	.word	0x007a1200

0800498c <HAL_RCC_GetHCLKFreq>:
 800498c:	b480      	push	{r7}
 800498e:	af00      	add	r7, sp, #0
 8004990:	4b03      	ldr	r3, [pc, #12]	; (80049a0 <HAL_RCC_GetHCLKFreq+0x14>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	4618      	mov	r0, r3
 8004996:	46bd      	mov	sp, r7
 8004998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800499c:	4770      	bx	lr
 800499e:	bf00      	nop
 80049a0:	20000020 	.word	0x20000020

080049a4 <HAL_RCC_GetPCLK1Freq>:
 80049a4:	b580      	push	{r7, lr}
 80049a6:	af00      	add	r7, sp, #0
 80049a8:	f7ff fff0 	bl	800498c <HAL_RCC_GetHCLKFreq>
 80049ac:	4602      	mov	r2, r0
 80049ae:	4b05      	ldr	r3, [pc, #20]	; (80049c4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80049b0:	689b      	ldr	r3, [r3, #8]
 80049b2:	0a9b      	lsrs	r3, r3, #10
 80049b4:	f003 0307 	and.w	r3, r3, #7
 80049b8:	4903      	ldr	r1, [pc, #12]	; (80049c8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80049ba:	5ccb      	ldrb	r3, [r1, r3]
 80049bc:	fa22 f303 	lsr.w	r3, r2, r3
 80049c0:	4618      	mov	r0, r3
 80049c2:	bd80      	pop	{r7, pc}
 80049c4:	40023800 	.word	0x40023800
 80049c8:	0800b6c8 	.word	0x0800b6c8

080049cc <HAL_RCC_GetPCLK2Freq>:
 80049cc:	b580      	push	{r7, lr}
 80049ce:	af00      	add	r7, sp, #0
 80049d0:	f7ff ffdc 	bl	800498c <HAL_RCC_GetHCLKFreq>
 80049d4:	4602      	mov	r2, r0
 80049d6:	4b05      	ldr	r3, [pc, #20]	; (80049ec <HAL_RCC_GetPCLK2Freq+0x20>)
 80049d8:	689b      	ldr	r3, [r3, #8]
 80049da:	0b5b      	lsrs	r3, r3, #13
 80049dc:	f003 0307 	and.w	r3, r3, #7
 80049e0:	4903      	ldr	r1, [pc, #12]	; (80049f0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80049e2:	5ccb      	ldrb	r3, [r1, r3]
 80049e4:	fa22 f303 	lsr.w	r3, r2, r3
 80049e8:	4618      	mov	r0, r3
 80049ea:	bd80      	pop	{r7, pc}
 80049ec:	40023800 	.word	0x40023800
 80049f0:	0800b6c8 	.word	0x0800b6c8

080049f4 <HAL_SPI_Init>:
 80049f4:	b580      	push	{r7, lr}
 80049f6:	b082      	sub	sp, #8
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d101      	bne.n	8004a06 <HAL_SPI_Init+0x12>
 8004a02:	2301      	movs	r3, #1
 8004a04:	e07b      	b.n	8004afe <HAL_SPI_Init+0x10a>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	d108      	bne.n	8004a20 <HAL_SPI_Init+0x2c>
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	685b      	ldr	r3, [r3, #4]
 8004a12:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004a16:	d009      	beq.n	8004a2c <HAL_SPI_Init+0x38>
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	2200      	movs	r2, #0
 8004a1c:	61da      	str	r2, [r3, #28]
 8004a1e:	e005      	b.n	8004a2c <HAL_SPI_Init+0x38>
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	2200      	movs	r2, #0
 8004a24:	611a      	str	r2, [r3, #16]
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	2200      	movs	r2, #0
 8004a2a:	615a      	str	r2, [r3, #20]
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	2200      	movs	r2, #0
 8004a30:	629a      	str	r2, [r3, #40]	; 0x28
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004a38:	b2db      	uxtb	r3, r3
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	d106      	bne.n	8004a4c <HAL_SPI_Init+0x58>
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	2200      	movs	r2, #0
 8004a42:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004a46:	6878      	ldr	r0, [r7, #4]
 8004a48:	f7fd fc7c 	bl	8002344 <HAL_SPI_MspInit>
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	2202      	movs	r2, #2
 8004a50:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	681a      	ldr	r2, [r3, #0]
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	681b      	ldr	r3, [r3, #0]
 8004a5e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004a62:	601a      	str	r2, [r3, #0]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	685b      	ldr	r3, [r3, #4]
 8004a68:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	689b      	ldr	r3, [r3, #8]
 8004a70:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004a74:	431a      	orrs	r2, r3
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	68db      	ldr	r3, [r3, #12]
 8004a7a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004a7e:	431a      	orrs	r2, r3
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	691b      	ldr	r3, [r3, #16]
 8004a84:	f003 0302 	and.w	r3, r3, #2
 8004a88:	431a      	orrs	r2, r3
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	695b      	ldr	r3, [r3, #20]
 8004a8e:	f003 0301 	and.w	r3, r3, #1
 8004a92:	431a      	orrs	r2, r3
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	699b      	ldr	r3, [r3, #24]
 8004a98:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004a9c:	431a      	orrs	r2, r3
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	69db      	ldr	r3, [r3, #28]
 8004aa2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004aa6:	431a      	orrs	r2, r3
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	6a1b      	ldr	r3, [r3, #32]
 8004aac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ab0:	ea42 0103 	orr.w	r1, r2, r3
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ab8:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	430a      	orrs	r2, r1
 8004ac2:	601a      	str	r2, [r3, #0]
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	699b      	ldr	r3, [r3, #24]
 8004ac8:	0c1b      	lsrs	r3, r3, #16
 8004aca:	f003 0104 	and.w	r1, r3, #4
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ad2:	f003 0210 	and.w	r2, r3, #16
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	430a      	orrs	r2, r1
 8004adc:	605a      	str	r2, [r3, #4]
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	681b      	ldr	r3, [r3, #0]
 8004ae2:	69da      	ldr	r2, [r3, #28]
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004aec:	61da      	str	r2, [r3, #28]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	2200      	movs	r2, #0
 8004af2:	655a      	str	r2, [r3, #84]	; 0x54
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	2201      	movs	r2, #1
 8004af8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004afc:	2300      	movs	r3, #0
 8004afe:	4618      	mov	r0, r3
 8004b00:	3708      	adds	r7, #8
 8004b02:	46bd      	mov	sp, r7
 8004b04:	bd80      	pop	{r7, pc}

08004b06 <HAL_SPI_Transmit>:
 8004b06:	b580      	push	{r7, lr}
 8004b08:	b088      	sub	sp, #32
 8004b0a:	af00      	add	r7, sp, #0
 8004b0c:	60f8      	str	r0, [r7, #12]
 8004b0e:	60b9      	str	r1, [r7, #8]
 8004b10:	603b      	str	r3, [r7, #0]
 8004b12:	4613      	mov	r3, r2
 8004b14:	80fb      	strh	r3, [r7, #6]
 8004b16:	2300      	movs	r3, #0
 8004b18:	77fb      	strb	r3, [r7, #31]
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004b20:	2b01      	cmp	r3, #1
 8004b22:	d101      	bne.n	8004b28 <HAL_SPI_Transmit+0x22>
 8004b24:	2302      	movs	r3, #2
 8004b26:	e126      	b.n	8004d76 <HAL_SPI_Transmit+0x270>
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	2201      	movs	r2, #1
 8004b2c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004b30:	f7fe f8d2 	bl	8002cd8 <HAL_GetTick>
 8004b34:	61b8      	str	r0, [r7, #24]
 8004b36:	88fb      	ldrh	r3, [r7, #6]
 8004b38:	82fb      	strh	r3, [r7, #22]
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004b40:	b2db      	uxtb	r3, r3
 8004b42:	2b01      	cmp	r3, #1
 8004b44:	d002      	beq.n	8004b4c <HAL_SPI_Transmit+0x46>
 8004b46:	2302      	movs	r3, #2
 8004b48:	77fb      	strb	r3, [r7, #31]
 8004b4a:	e10b      	b.n	8004d64 <HAL_SPI_Transmit+0x25e>
 8004b4c:	68bb      	ldr	r3, [r7, #8]
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d002      	beq.n	8004b58 <HAL_SPI_Transmit+0x52>
 8004b52:	88fb      	ldrh	r3, [r7, #6]
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d102      	bne.n	8004b5e <HAL_SPI_Transmit+0x58>
 8004b58:	2301      	movs	r3, #1
 8004b5a:	77fb      	strb	r3, [r7, #31]
 8004b5c:	e102      	b.n	8004d64 <HAL_SPI_Transmit+0x25e>
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	2203      	movs	r2, #3
 8004b62:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	2200      	movs	r2, #0
 8004b6a:	655a      	str	r2, [r3, #84]	; 0x54
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	68ba      	ldr	r2, [r7, #8]
 8004b70:	631a      	str	r2, [r3, #48]	; 0x30
 8004b72:	68fb      	ldr	r3, [r7, #12]
 8004b74:	88fa      	ldrh	r2, [r7, #6]
 8004b76:	869a      	strh	r2, [r3, #52]	; 0x34
 8004b78:	68fb      	ldr	r3, [r7, #12]
 8004b7a:	88fa      	ldrh	r2, [r7, #6]
 8004b7c:	86da      	strh	r2, [r3, #54]	; 0x36
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	2200      	movs	r2, #0
 8004b82:	639a      	str	r2, [r3, #56]	; 0x38
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	2200      	movs	r2, #0
 8004b88:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	2200      	movs	r2, #0
 8004b94:	645a      	str	r2, [r3, #68]	; 0x44
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	2200      	movs	r2, #0
 8004b9a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	689b      	ldr	r3, [r3, #8]
 8004ba0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004ba4:	d10f      	bne.n	8004bc6 <HAL_SPI_Transmit+0xc0>
 8004ba6:	68fb      	ldr	r3, [r7, #12]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	681a      	ldr	r2, [r3, #0]
 8004bac:	68fb      	ldr	r3, [r7, #12]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004bb4:	601a      	str	r2, [r3, #0]
 8004bb6:	68fb      	ldr	r3, [r7, #12]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	681a      	ldr	r2, [r3, #0]
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004bc4:	601a      	str	r2, [r3, #0]
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	681b      	ldr	r3, [r3, #0]
 8004bcc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004bd0:	2b40      	cmp	r3, #64	; 0x40
 8004bd2:	d007      	beq.n	8004be4 <HAL_SPI_Transmit+0xde>
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	681b      	ldr	r3, [r3, #0]
 8004bd8:	681a      	ldr	r2, [r3, #0]
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004be2:	601a      	str	r2, [r3, #0]
 8004be4:	68fb      	ldr	r3, [r7, #12]
 8004be6:	68db      	ldr	r3, [r3, #12]
 8004be8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004bec:	d14b      	bne.n	8004c86 <HAL_SPI_Transmit+0x180>
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	685b      	ldr	r3, [r3, #4]
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d002      	beq.n	8004bfc <HAL_SPI_Transmit+0xf6>
 8004bf6:	8afb      	ldrh	r3, [r7, #22]
 8004bf8:	2b01      	cmp	r3, #1
 8004bfa:	d13e      	bne.n	8004c7a <HAL_SPI_Transmit+0x174>
 8004bfc:	68fb      	ldr	r3, [r7, #12]
 8004bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c00:	881a      	ldrh	r2, [r3, #0]
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	60da      	str	r2, [r3, #12]
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c0c:	1c9a      	adds	r2, r3, #2
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	631a      	str	r2, [r3, #48]	; 0x30
 8004c12:	68fb      	ldr	r3, [r7, #12]
 8004c14:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004c16:	b29b      	uxth	r3, r3
 8004c18:	3b01      	subs	r3, #1
 8004c1a:	b29a      	uxth	r2, r3
 8004c1c:	68fb      	ldr	r3, [r7, #12]
 8004c1e:	86da      	strh	r2, [r3, #54]	; 0x36
 8004c20:	e02b      	b.n	8004c7a <HAL_SPI_Transmit+0x174>
 8004c22:	68fb      	ldr	r3, [r7, #12]
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	689b      	ldr	r3, [r3, #8]
 8004c28:	f003 0302 	and.w	r3, r3, #2
 8004c2c:	2b02      	cmp	r3, #2
 8004c2e:	d112      	bne.n	8004c56 <HAL_SPI_Transmit+0x150>
 8004c30:	68fb      	ldr	r3, [r7, #12]
 8004c32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c34:	881a      	ldrh	r2, [r3, #0]
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	60da      	str	r2, [r3, #12]
 8004c3c:	68fb      	ldr	r3, [r7, #12]
 8004c3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c40:	1c9a      	adds	r2, r3, #2
 8004c42:	68fb      	ldr	r3, [r7, #12]
 8004c44:	631a      	str	r2, [r3, #48]	; 0x30
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004c4a:	b29b      	uxth	r3, r3
 8004c4c:	3b01      	subs	r3, #1
 8004c4e:	b29a      	uxth	r2, r3
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	86da      	strh	r2, [r3, #54]	; 0x36
 8004c54:	e011      	b.n	8004c7a <HAL_SPI_Transmit+0x174>
 8004c56:	f7fe f83f 	bl	8002cd8 <HAL_GetTick>
 8004c5a:	4602      	mov	r2, r0
 8004c5c:	69bb      	ldr	r3, [r7, #24]
 8004c5e:	1ad3      	subs	r3, r2, r3
 8004c60:	683a      	ldr	r2, [r7, #0]
 8004c62:	429a      	cmp	r2, r3
 8004c64:	d803      	bhi.n	8004c6e <HAL_SPI_Transmit+0x168>
 8004c66:	683b      	ldr	r3, [r7, #0]
 8004c68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c6c:	d102      	bne.n	8004c74 <HAL_SPI_Transmit+0x16e>
 8004c6e:	683b      	ldr	r3, [r7, #0]
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d102      	bne.n	8004c7a <HAL_SPI_Transmit+0x174>
 8004c74:	2303      	movs	r3, #3
 8004c76:	77fb      	strb	r3, [r7, #31]
 8004c78:	e074      	b.n	8004d64 <HAL_SPI_Transmit+0x25e>
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004c7e:	b29b      	uxth	r3, r3
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d1ce      	bne.n	8004c22 <HAL_SPI_Transmit+0x11c>
 8004c84:	e04c      	b.n	8004d20 <HAL_SPI_Transmit+0x21a>
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	685b      	ldr	r3, [r3, #4]
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	d002      	beq.n	8004c94 <HAL_SPI_Transmit+0x18e>
 8004c8e:	8afb      	ldrh	r3, [r7, #22]
 8004c90:	2b01      	cmp	r3, #1
 8004c92:	d140      	bne.n	8004d16 <HAL_SPI_Transmit+0x210>
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c98:	68fb      	ldr	r3, [r7, #12]
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	330c      	adds	r3, #12
 8004c9e:	7812      	ldrb	r2, [r2, #0]
 8004ca0:	701a      	strb	r2, [r3, #0]
 8004ca2:	68fb      	ldr	r3, [r7, #12]
 8004ca4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ca6:	1c5a      	adds	r2, r3, #1
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	631a      	str	r2, [r3, #48]	; 0x30
 8004cac:	68fb      	ldr	r3, [r7, #12]
 8004cae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004cb0:	b29b      	uxth	r3, r3
 8004cb2:	3b01      	subs	r3, #1
 8004cb4:	b29a      	uxth	r2, r3
 8004cb6:	68fb      	ldr	r3, [r7, #12]
 8004cb8:	86da      	strh	r2, [r3, #54]	; 0x36
 8004cba:	e02c      	b.n	8004d16 <HAL_SPI_Transmit+0x210>
 8004cbc:	68fb      	ldr	r3, [r7, #12]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	689b      	ldr	r3, [r3, #8]
 8004cc2:	f003 0302 	and.w	r3, r3, #2
 8004cc6:	2b02      	cmp	r3, #2
 8004cc8:	d113      	bne.n	8004cf2 <HAL_SPI_Transmit+0x1ec>
 8004cca:	68fb      	ldr	r3, [r7, #12]
 8004ccc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	330c      	adds	r3, #12
 8004cd4:	7812      	ldrb	r2, [r2, #0]
 8004cd6:	701a      	strb	r2, [r3, #0]
 8004cd8:	68fb      	ldr	r3, [r7, #12]
 8004cda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004cdc:	1c5a      	adds	r2, r3, #1
 8004cde:	68fb      	ldr	r3, [r7, #12]
 8004ce0:	631a      	str	r2, [r3, #48]	; 0x30
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004ce6:	b29b      	uxth	r3, r3
 8004ce8:	3b01      	subs	r3, #1
 8004cea:	b29a      	uxth	r2, r3
 8004cec:	68fb      	ldr	r3, [r7, #12]
 8004cee:	86da      	strh	r2, [r3, #54]	; 0x36
 8004cf0:	e011      	b.n	8004d16 <HAL_SPI_Transmit+0x210>
 8004cf2:	f7fd fff1 	bl	8002cd8 <HAL_GetTick>
 8004cf6:	4602      	mov	r2, r0
 8004cf8:	69bb      	ldr	r3, [r7, #24]
 8004cfa:	1ad3      	subs	r3, r2, r3
 8004cfc:	683a      	ldr	r2, [r7, #0]
 8004cfe:	429a      	cmp	r2, r3
 8004d00:	d803      	bhi.n	8004d0a <HAL_SPI_Transmit+0x204>
 8004d02:	683b      	ldr	r3, [r7, #0]
 8004d04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d08:	d102      	bne.n	8004d10 <HAL_SPI_Transmit+0x20a>
 8004d0a:	683b      	ldr	r3, [r7, #0]
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	d102      	bne.n	8004d16 <HAL_SPI_Transmit+0x210>
 8004d10:	2303      	movs	r3, #3
 8004d12:	77fb      	strb	r3, [r7, #31]
 8004d14:	e026      	b.n	8004d64 <HAL_SPI_Transmit+0x25e>
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004d1a:	b29b      	uxth	r3, r3
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d1cd      	bne.n	8004cbc <HAL_SPI_Transmit+0x1b6>
 8004d20:	69ba      	ldr	r2, [r7, #24]
 8004d22:	6839      	ldr	r1, [r7, #0]
 8004d24:	68f8      	ldr	r0, [r7, #12]
 8004d26:	f000 fbcb 	bl	80054c0 <SPI_EndRxTxTransaction>
 8004d2a:	4603      	mov	r3, r0
 8004d2c:	2b00      	cmp	r3, #0
 8004d2e:	d002      	beq.n	8004d36 <HAL_SPI_Transmit+0x230>
 8004d30:	68fb      	ldr	r3, [r7, #12]
 8004d32:	2220      	movs	r2, #32
 8004d34:	655a      	str	r2, [r3, #84]	; 0x54
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	689b      	ldr	r3, [r3, #8]
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d10a      	bne.n	8004d54 <HAL_SPI_Transmit+0x24e>
 8004d3e:	2300      	movs	r3, #0
 8004d40:	613b      	str	r3, [r7, #16]
 8004d42:	68fb      	ldr	r3, [r7, #12]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	68db      	ldr	r3, [r3, #12]
 8004d48:	613b      	str	r3, [r7, #16]
 8004d4a:	68fb      	ldr	r3, [r7, #12]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	689b      	ldr	r3, [r3, #8]
 8004d50:	613b      	str	r3, [r7, #16]
 8004d52:	693b      	ldr	r3, [r7, #16]
 8004d54:	68fb      	ldr	r3, [r7, #12]
 8004d56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d002      	beq.n	8004d62 <HAL_SPI_Transmit+0x25c>
 8004d5c:	2301      	movs	r3, #1
 8004d5e:	77fb      	strb	r3, [r7, #31]
 8004d60:	e000      	b.n	8004d64 <HAL_SPI_Transmit+0x25e>
 8004d62:	bf00      	nop
 8004d64:	68fb      	ldr	r3, [r7, #12]
 8004d66:	2201      	movs	r2, #1
 8004d68:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	2200      	movs	r2, #0
 8004d70:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004d74:	7ffb      	ldrb	r3, [r7, #31]
 8004d76:	4618      	mov	r0, r3
 8004d78:	3720      	adds	r7, #32
 8004d7a:	46bd      	mov	sp, r7
 8004d7c:	bd80      	pop	{r7, pc}

08004d7e <HAL_SPI_Receive>:
 8004d7e:	b580      	push	{r7, lr}
 8004d80:	b088      	sub	sp, #32
 8004d82:	af02      	add	r7, sp, #8
 8004d84:	60f8      	str	r0, [r7, #12]
 8004d86:	60b9      	str	r1, [r7, #8]
 8004d88:	603b      	str	r3, [r7, #0]
 8004d8a:	4613      	mov	r3, r2
 8004d8c:	80fb      	strh	r3, [r7, #6]
 8004d8e:	2300      	movs	r3, #0
 8004d90:	75fb      	strb	r3, [r7, #23]
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	685b      	ldr	r3, [r3, #4]
 8004d96:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004d9a:	d112      	bne.n	8004dc2 <HAL_SPI_Receive+0x44>
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	689b      	ldr	r3, [r3, #8]
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	d10e      	bne.n	8004dc2 <HAL_SPI_Receive+0x44>
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	2204      	movs	r2, #4
 8004da8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004dac:	88fa      	ldrh	r2, [r7, #6]
 8004dae:	683b      	ldr	r3, [r7, #0]
 8004db0:	9300      	str	r3, [sp, #0]
 8004db2:	4613      	mov	r3, r2
 8004db4:	68ba      	ldr	r2, [r7, #8]
 8004db6:	68b9      	ldr	r1, [r7, #8]
 8004db8:	68f8      	ldr	r0, [r7, #12]
 8004dba:	f000 f8f1 	bl	8004fa0 <HAL_SPI_TransmitReceive>
 8004dbe:	4603      	mov	r3, r0
 8004dc0:	e0ea      	b.n	8004f98 <HAL_SPI_Receive+0x21a>
 8004dc2:	68fb      	ldr	r3, [r7, #12]
 8004dc4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004dc8:	2b01      	cmp	r3, #1
 8004dca:	d101      	bne.n	8004dd0 <HAL_SPI_Receive+0x52>
 8004dcc:	2302      	movs	r3, #2
 8004dce:	e0e3      	b.n	8004f98 <HAL_SPI_Receive+0x21a>
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	2201      	movs	r2, #1
 8004dd4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004dd8:	f7fd ff7e 	bl	8002cd8 <HAL_GetTick>
 8004ddc:	6138      	str	r0, [r7, #16]
 8004dde:	68fb      	ldr	r3, [r7, #12]
 8004de0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004de4:	b2db      	uxtb	r3, r3
 8004de6:	2b01      	cmp	r3, #1
 8004de8:	d002      	beq.n	8004df0 <HAL_SPI_Receive+0x72>
 8004dea:	2302      	movs	r3, #2
 8004dec:	75fb      	strb	r3, [r7, #23]
 8004dee:	e0ca      	b.n	8004f86 <HAL_SPI_Receive+0x208>
 8004df0:	68bb      	ldr	r3, [r7, #8]
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d002      	beq.n	8004dfc <HAL_SPI_Receive+0x7e>
 8004df6:	88fb      	ldrh	r3, [r7, #6]
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	d102      	bne.n	8004e02 <HAL_SPI_Receive+0x84>
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	75fb      	strb	r3, [r7, #23]
 8004e00:	e0c1      	b.n	8004f86 <HAL_SPI_Receive+0x208>
 8004e02:	68fb      	ldr	r3, [r7, #12]
 8004e04:	2204      	movs	r2, #4
 8004e06:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004e0a:	68fb      	ldr	r3, [r7, #12]
 8004e0c:	2200      	movs	r2, #0
 8004e0e:	655a      	str	r2, [r3, #84]	; 0x54
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	68ba      	ldr	r2, [r7, #8]
 8004e14:	639a      	str	r2, [r3, #56]	; 0x38
 8004e16:	68fb      	ldr	r3, [r7, #12]
 8004e18:	88fa      	ldrh	r2, [r7, #6]
 8004e1a:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	88fa      	ldrh	r2, [r7, #6]
 8004e20:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004e22:	68fb      	ldr	r3, [r7, #12]
 8004e24:	2200      	movs	r2, #0
 8004e26:	631a      	str	r2, [r3, #48]	; 0x30
 8004e28:	68fb      	ldr	r3, [r7, #12]
 8004e2a:	2200      	movs	r2, #0
 8004e2c:	869a      	strh	r2, [r3, #52]	; 0x34
 8004e2e:	68fb      	ldr	r3, [r7, #12]
 8004e30:	2200      	movs	r2, #0
 8004e32:	86da      	strh	r2, [r3, #54]	; 0x36
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	2200      	movs	r2, #0
 8004e38:	641a      	str	r2, [r3, #64]	; 0x40
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	645a      	str	r2, [r3, #68]	; 0x44
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	689b      	ldr	r3, [r3, #8]
 8004e44:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004e48:	d10f      	bne.n	8004e6a <HAL_SPI_Receive+0xec>
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	681a      	ldr	r2, [r3, #0]
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004e58:	601a      	str	r2, [r3, #0]
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	681a      	ldr	r2, [r3, #0]
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004e68:	601a      	str	r2, [r3, #0]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e74:	2b40      	cmp	r3, #64	; 0x40
 8004e76:	d007      	beq.n	8004e88 <HAL_SPI_Receive+0x10a>
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	681a      	ldr	r2, [r3, #0]
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004e86:	601a      	str	r2, [r3, #0]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	68db      	ldr	r3, [r3, #12]
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d162      	bne.n	8004f56 <HAL_SPI_Receive+0x1d8>
 8004e90:	e02e      	b.n	8004ef0 <HAL_SPI_Receive+0x172>
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	689b      	ldr	r3, [r3, #8]
 8004e98:	f003 0301 	and.w	r3, r3, #1
 8004e9c:	2b01      	cmp	r3, #1
 8004e9e:	d115      	bne.n	8004ecc <HAL_SPI_Receive+0x14e>
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	f103 020c 	add.w	r2, r3, #12
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004eac:	7812      	ldrb	r2, [r2, #0]
 8004eae:	b2d2      	uxtb	r2, r2
 8004eb0:	701a      	strb	r2, [r3, #0]
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004eb6:	1c5a      	adds	r2, r3, #1
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	639a      	str	r2, [r3, #56]	; 0x38
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004ec0:	b29b      	uxth	r3, r3
 8004ec2:	3b01      	subs	r3, #1
 8004ec4:	b29a      	uxth	r2, r3
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004eca:	e011      	b.n	8004ef0 <HAL_SPI_Receive+0x172>
 8004ecc:	f7fd ff04 	bl	8002cd8 <HAL_GetTick>
 8004ed0:	4602      	mov	r2, r0
 8004ed2:	693b      	ldr	r3, [r7, #16]
 8004ed4:	1ad3      	subs	r3, r2, r3
 8004ed6:	683a      	ldr	r2, [r7, #0]
 8004ed8:	429a      	cmp	r2, r3
 8004eda:	d803      	bhi.n	8004ee4 <HAL_SPI_Receive+0x166>
 8004edc:	683b      	ldr	r3, [r7, #0]
 8004ede:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ee2:	d102      	bne.n	8004eea <HAL_SPI_Receive+0x16c>
 8004ee4:	683b      	ldr	r3, [r7, #0]
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d102      	bne.n	8004ef0 <HAL_SPI_Receive+0x172>
 8004eea:	2303      	movs	r3, #3
 8004eec:	75fb      	strb	r3, [r7, #23]
 8004eee:	e04a      	b.n	8004f86 <HAL_SPI_Receive+0x208>
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004ef4:	b29b      	uxth	r3, r3
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d1cb      	bne.n	8004e92 <HAL_SPI_Receive+0x114>
 8004efa:	e031      	b.n	8004f60 <HAL_SPI_Receive+0x1e2>
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	689b      	ldr	r3, [r3, #8]
 8004f02:	f003 0301 	and.w	r3, r3, #1
 8004f06:	2b01      	cmp	r3, #1
 8004f08:	d113      	bne.n	8004f32 <HAL_SPI_Receive+0x1b4>
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	68da      	ldr	r2, [r3, #12]
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f14:	b292      	uxth	r2, r2
 8004f16:	801a      	strh	r2, [r3, #0]
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f1c:	1c9a      	adds	r2, r3, #2
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	639a      	str	r2, [r3, #56]	; 0x38
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f26:	b29b      	uxth	r3, r3
 8004f28:	3b01      	subs	r3, #1
 8004f2a:	b29a      	uxth	r2, r3
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004f30:	e011      	b.n	8004f56 <HAL_SPI_Receive+0x1d8>
 8004f32:	f7fd fed1 	bl	8002cd8 <HAL_GetTick>
 8004f36:	4602      	mov	r2, r0
 8004f38:	693b      	ldr	r3, [r7, #16]
 8004f3a:	1ad3      	subs	r3, r2, r3
 8004f3c:	683a      	ldr	r2, [r7, #0]
 8004f3e:	429a      	cmp	r2, r3
 8004f40:	d803      	bhi.n	8004f4a <HAL_SPI_Receive+0x1cc>
 8004f42:	683b      	ldr	r3, [r7, #0]
 8004f44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f48:	d102      	bne.n	8004f50 <HAL_SPI_Receive+0x1d2>
 8004f4a:	683b      	ldr	r3, [r7, #0]
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d102      	bne.n	8004f56 <HAL_SPI_Receive+0x1d8>
 8004f50:	2303      	movs	r3, #3
 8004f52:	75fb      	strb	r3, [r7, #23]
 8004f54:	e017      	b.n	8004f86 <HAL_SPI_Receive+0x208>
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f5a:	b29b      	uxth	r3, r3
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	d1cd      	bne.n	8004efc <HAL_SPI_Receive+0x17e>
 8004f60:	693a      	ldr	r2, [r7, #16]
 8004f62:	6839      	ldr	r1, [r7, #0]
 8004f64:	68f8      	ldr	r0, [r7, #12]
 8004f66:	f000 fa45 	bl	80053f4 <SPI_EndRxTransaction>
 8004f6a:	4603      	mov	r3, r0
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d002      	beq.n	8004f76 <HAL_SPI_Receive+0x1f8>
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	2220      	movs	r2, #32
 8004f74:	655a      	str	r2, [r3, #84]	; 0x54
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f7a:	2b00      	cmp	r3, #0
 8004f7c:	d002      	beq.n	8004f84 <HAL_SPI_Receive+0x206>
 8004f7e:	2301      	movs	r3, #1
 8004f80:	75fb      	strb	r3, [r7, #23]
 8004f82:	e000      	b.n	8004f86 <HAL_SPI_Receive+0x208>
 8004f84:	bf00      	nop
 8004f86:	68fb      	ldr	r3, [r7, #12]
 8004f88:	2201      	movs	r2, #1
 8004f8a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	2200      	movs	r2, #0
 8004f92:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004f96:	7dfb      	ldrb	r3, [r7, #23]
 8004f98:	4618      	mov	r0, r3
 8004f9a:	3718      	adds	r7, #24
 8004f9c:	46bd      	mov	sp, r7
 8004f9e:	bd80      	pop	{r7, pc}

08004fa0 <HAL_SPI_TransmitReceive>:
 8004fa0:	b580      	push	{r7, lr}
 8004fa2:	b08c      	sub	sp, #48	; 0x30
 8004fa4:	af00      	add	r7, sp, #0
 8004fa6:	60f8      	str	r0, [r7, #12]
 8004fa8:	60b9      	str	r1, [r7, #8]
 8004faa:	607a      	str	r2, [r7, #4]
 8004fac:	807b      	strh	r3, [r7, #2]
 8004fae:	2301      	movs	r3, #1
 8004fb0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004fbe:	2b01      	cmp	r3, #1
 8004fc0:	d101      	bne.n	8004fc6 <HAL_SPI_TransmitReceive+0x26>
 8004fc2:	2302      	movs	r3, #2
 8004fc4:	e18a      	b.n	80052dc <HAL_SPI_TransmitReceive+0x33c>
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	2201      	movs	r2, #1
 8004fca:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004fce:	f7fd fe83 	bl	8002cd8 <HAL_GetTick>
 8004fd2:	6278      	str	r0, [r7, #36]	; 0x24
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004fda:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	685b      	ldr	r3, [r3, #4]
 8004fe2:	61fb      	str	r3, [r7, #28]
 8004fe4:	887b      	ldrh	r3, [r7, #2]
 8004fe6:	837b      	strh	r3, [r7, #26]
 8004fe8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8004fec:	2b01      	cmp	r3, #1
 8004fee:	d00f      	beq.n	8005010 <HAL_SPI_TransmitReceive+0x70>
 8004ff0:	69fb      	ldr	r3, [r7, #28]
 8004ff2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004ff6:	d107      	bne.n	8005008 <HAL_SPI_TransmitReceive+0x68>
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	689b      	ldr	r3, [r3, #8]
 8004ffc:	2b00      	cmp	r3, #0
 8004ffe:	d103      	bne.n	8005008 <HAL_SPI_TransmitReceive+0x68>
 8005000:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005004:	2b04      	cmp	r3, #4
 8005006:	d003      	beq.n	8005010 <HAL_SPI_TransmitReceive+0x70>
 8005008:	2302      	movs	r3, #2
 800500a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800500e:	e15b      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 8005010:	68bb      	ldr	r3, [r7, #8]
 8005012:	2b00      	cmp	r3, #0
 8005014:	d005      	beq.n	8005022 <HAL_SPI_TransmitReceive+0x82>
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	2b00      	cmp	r3, #0
 800501a:	d002      	beq.n	8005022 <HAL_SPI_TransmitReceive+0x82>
 800501c:	887b      	ldrh	r3, [r7, #2]
 800501e:	2b00      	cmp	r3, #0
 8005020:	d103      	bne.n	800502a <HAL_SPI_TransmitReceive+0x8a>
 8005022:	2301      	movs	r3, #1
 8005024:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005028:	e14e      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005030:	b2db      	uxtb	r3, r3
 8005032:	2b04      	cmp	r3, #4
 8005034:	d003      	beq.n	800503e <HAL_SPI_TransmitReceive+0x9e>
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	2205      	movs	r2, #5
 800503a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800503e:	68fb      	ldr	r3, [r7, #12]
 8005040:	2200      	movs	r2, #0
 8005042:	655a      	str	r2, [r3, #84]	; 0x54
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	687a      	ldr	r2, [r7, #4]
 8005048:	639a      	str	r2, [r3, #56]	; 0x38
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	887a      	ldrh	r2, [r7, #2]
 800504e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	887a      	ldrh	r2, [r7, #2]
 8005054:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	68ba      	ldr	r2, [r7, #8]
 800505a:	631a      	str	r2, [r3, #48]	; 0x30
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	887a      	ldrh	r2, [r7, #2]
 8005060:	86da      	strh	r2, [r3, #54]	; 0x36
 8005062:	68fb      	ldr	r3, [r7, #12]
 8005064:	887a      	ldrh	r2, [r7, #2]
 8005066:	869a      	strh	r2, [r3, #52]	; 0x34
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	2200      	movs	r2, #0
 800506c:	641a      	str	r2, [r3, #64]	; 0x40
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	2200      	movs	r2, #0
 8005072:	645a      	str	r2, [r3, #68]	; 0x44
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800507e:	2b40      	cmp	r3, #64	; 0x40
 8005080:	d007      	beq.n	8005092 <HAL_SPI_TransmitReceive+0xf2>
 8005082:	68fb      	ldr	r3, [r7, #12]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	681a      	ldr	r2, [r3, #0]
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005090:	601a      	str	r2, [r3, #0]
 8005092:	68fb      	ldr	r3, [r7, #12]
 8005094:	68db      	ldr	r3, [r3, #12]
 8005096:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800509a:	d178      	bne.n	800518e <HAL_SPI_TransmitReceive+0x1ee>
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	685b      	ldr	r3, [r3, #4]
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d002      	beq.n	80050aa <HAL_SPI_TransmitReceive+0x10a>
 80050a4:	8b7b      	ldrh	r3, [r7, #26]
 80050a6:	2b01      	cmp	r3, #1
 80050a8:	d166      	bne.n	8005178 <HAL_SPI_TransmitReceive+0x1d8>
 80050aa:	68fb      	ldr	r3, [r7, #12]
 80050ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ae:	881a      	ldrh	r2, [r3, #0]
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	60da      	str	r2, [r3, #12]
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ba:	1c9a      	adds	r2, r3, #2
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	631a      	str	r2, [r3, #48]	; 0x30
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80050c4:	b29b      	uxth	r3, r3
 80050c6:	3b01      	subs	r3, #1
 80050c8:	b29a      	uxth	r2, r3
 80050ca:	68fb      	ldr	r3, [r7, #12]
 80050cc:	86da      	strh	r2, [r3, #54]	; 0x36
 80050ce:	e053      	b.n	8005178 <HAL_SPI_TransmitReceive+0x1d8>
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	689b      	ldr	r3, [r3, #8]
 80050d6:	f003 0302 	and.w	r3, r3, #2
 80050da:	2b02      	cmp	r3, #2
 80050dc:	d11b      	bne.n	8005116 <HAL_SPI_TransmitReceive+0x176>
 80050de:	68fb      	ldr	r3, [r7, #12]
 80050e0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80050e2:	b29b      	uxth	r3, r3
 80050e4:	2b00      	cmp	r3, #0
 80050e6:	d016      	beq.n	8005116 <HAL_SPI_TransmitReceive+0x176>
 80050e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80050ea:	2b01      	cmp	r3, #1
 80050ec:	d113      	bne.n	8005116 <HAL_SPI_TransmitReceive+0x176>
 80050ee:	68fb      	ldr	r3, [r7, #12]
 80050f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050f2:	881a      	ldrh	r2, [r3, #0]
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	60da      	str	r2, [r3, #12]
 80050fa:	68fb      	ldr	r3, [r7, #12]
 80050fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050fe:	1c9a      	adds	r2, r3, #2
 8005100:	68fb      	ldr	r3, [r7, #12]
 8005102:	631a      	str	r2, [r3, #48]	; 0x30
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005108:	b29b      	uxth	r3, r3
 800510a:	3b01      	subs	r3, #1
 800510c:	b29a      	uxth	r2, r3
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	86da      	strh	r2, [r3, #54]	; 0x36
 8005112:	2300      	movs	r3, #0
 8005114:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	689b      	ldr	r3, [r3, #8]
 800511c:	f003 0301 	and.w	r3, r3, #1
 8005120:	2b01      	cmp	r3, #1
 8005122:	d119      	bne.n	8005158 <HAL_SPI_TransmitReceive+0x1b8>
 8005124:	68fb      	ldr	r3, [r7, #12]
 8005126:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005128:	b29b      	uxth	r3, r3
 800512a:	2b00      	cmp	r3, #0
 800512c:	d014      	beq.n	8005158 <HAL_SPI_TransmitReceive+0x1b8>
 800512e:	68fb      	ldr	r3, [r7, #12]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	68da      	ldr	r2, [r3, #12]
 8005134:	68fb      	ldr	r3, [r7, #12]
 8005136:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005138:	b292      	uxth	r2, r2
 800513a:	801a      	strh	r2, [r3, #0]
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005140:	1c9a      	adds	r2, r3, #2
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	639a      	str	r2, [r3, #56]	; 0x38
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800514a:	b29b      	uxth	r3, r3
 800514c:	3b01      	subs	r3, #1
 800514e:	b29a      	uxth	r2, r3
 8005150:	68fb      	ldr	r3, [r7, #12]
 8005152:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005154:	2301      	movs	r3, #1
 8005156:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005158:	f7fd fdbe 	bl	8002cd8 <HAL_GetTick>
 800515c:	4602      	mov	r2, r0
 800515e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005160:	1ad3      	subs	r3, r2, r3
 8005162:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8005164:	429a      	cmp	r2, r3
 8005166:	d807      	bhi.n	8005178 <HAL_SPI_TransmitReceive+0x1d8>
 8005168:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800516a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800516e:	d003      	beq.n	8005178 <HAL_SPI_TransmitReceive+0x1d8>
 8005170:	2303      	movs	r3, #3
 8005172:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005176:	e0a7      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800517c:	b29b      	uxth	r3, r3
 800517e:	2b00      	cmp	r3, #0
 8005180:	d1a6      	bne.n	80050d0 <HAL_SPI_TransmitReceive+0x130>
 8005182:	68fb      	ldr	r3, [r7, #12]
 8005184:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005186:	b29b      	uxth	r3, r3
 8005188:	2b00      	cmp	r3, #0
 800518a:	d1a1      	bne.n	80050d0 <HAL_SPI_TransmitReceive+0x130>
 800518c:	e07c      	b.n	8005288 <HAL_SPI_TransmitReceive+0x2e8>
 800518e:	68fb      	ldr	r3, [r7, #12]
 8005190:	685b      	ldr	r3, [r3, #4]
 8005192:	2b00      	cmp	r3, #0
 8005194:	d002      	beq.n	800519c <HAL_SPI_TransmitReceive+0x1fc>
 8005196:	8b7b      	ldrh	r3, [r7, #26]
 8005198:	2b01      	cmp	r3, #1
 800519a:	d16b      	bne.n	8005274 <HAL_SPI_TransmitReceive+0x2d4>
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	330c      	adds	r3, #12
 80051a6:	7812      	ldrb	r2, [r2, #0]
 80051a8:	701a      	strb	r2, [r3, #0]
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051ae:	1c5a      	adds	r2, r3, #1
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	631a      	str	r2, [r3, #48]	; 0x30
 80051b4:	68fb      	ldr	r3, [r7, #12]
 80051b6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80051b8:	b29b      	uxth	r3, r3
 80051ba:	3b01      	subs	r3, #1
 80051bc:	b29a      	uxth	r2, r3
 80051be:	68fb      	ldr	r3, [r7, #12]
 80051c0:	86da      	strh	r2, [r3, #54]	; 0x36
 80051c2:	e057      	b.n	8005274 <HAL_SPI_TransmitReceive+0x2d4>
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	689b      	ldr	r3, [r3, #8]
 80051ca:	f003 0302 	and.w	r3, r3, #2
 80051ce:	2b02      	cmp	r3, #2
 80051d0:	d11c      	bne.n	800520c <HAL_SPI_TransmitReceive+0x26c>
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80051d6:	b29b      	uxth	r3, r3
 80051d8:	2b00      	cmp	r3, #0
 80051da:	d017      	beq.n	800520c <HAL_SPI_TransmitReceive+0x26c>
 80051dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80051de:	2b01      	cmp	r3, #1
 80051e0:	d114      	bne.n	800520c <HAL_SPI_TransmitReceive+0x26c>
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	330c      	adds	r3, #12
 80051ec:	7812      	ldrb	r2, [r2, #0]
 80051ee:	701a      	strb	r2, [r3, #0]
 80051f0:	68fb      	ldr	r3, [r7, #12]
 80051f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051f4:	1c5a      	adds	r2, r3, #1
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	631a      	str	r2, [r3, #48]	; 0x30
 80051fa:	68fb      	ldr	r3, [r7, #12]
 80051fc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80051fe:	b29b      	uxth	r3, r3
 8005200:	3b01      	subs	r3, #1
 8005202:	b29a      	uxth	r2, r3
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	86da      	strh	r2, [r3, #54]	; 0x36
 8005208:	2300      	movs	r3, #0
 800520a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	689b      	ldr	r3, [r3, #8]
 8005212:	f003 0301 	and.w	r3, r3, #1
 8005216:	2b01      	cmp	r3, #1
 8005218:	d119      	bne.n	800524e <HAL_SPI_TransmitReceive+0x2ae>
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800521e:	b29b      	uxth	r3, r3
 8005220:	2b00      	cmp	r3, #0
 8005222:	d014      	beq.n	800524e <HAL_SPI_TransmitReceive+0x2ae>
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	68da      	ldr	r2, [r3, #12]
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800522e:	b2d2      	uxtb	r2, r2
 8005230:	701a      	strb	r2, [r3, #0]
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005236:	1c5a      	adds	r2, r3, #1
 8005238:	68fb      	ldr	r3, [r7, #12]
 800523a:	639a      	str	r2, [r3, #56]	; 0x38
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005240:	b29b      	uxth	r3, r3
 8005242:	3b01      	subs	r3, #1
 8005244:	b29a      	uxth	r2, r3
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	87da      	strh	r2, [r3, #62]	; 0x3e
 800524a:	2301      	movs	r3, #1
 800524c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800524e:	f7fd fd43 	bl	8002cd8 <HAL_GetTick>
 8005252:	4602      	mov	r2, r0
 8005254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005256:	1ad3      	subs	r3, r2, r3
 8005258:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800525a:	429a      	cmp	r2, r3
 800525c:	d803      	bhi.n	8005266 <HAL_SPI_TransmitReceive+0x2c6>
 800525e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005260:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005264:	d102      	bne.n	800526c <HAL_SPI_TransmitReceive+0x2cc>
 8005266:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005268:	2b00      	cmp	r3, #0
 800526a:	d103      	bne.n	8005274 <HAL_SPI_TransmitReceive+0x2d4>
 800526c:	2303      	movs	r3, #3
 800526e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005272:	e029      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 8005274:	68fb      	ldr	r3, [r7, #12]
 8005276:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005278:	b29b      	uxth	r3, r3
 800527a:	2b00      	cmp	r3, #0
 800527c:	d1a2      	bne.n	80051c4 <HAL_SPI_TransmitReceive+0x224>
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005282:	b29b      	uxth	r3, r3
 8005284:	2b00      	cmp	r3, #0
 8005286:	d19d      	bne.n	80051c4 <HAL_SPI_TransmitReceive+0x224>
 8005288:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800528a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800528c:	68f8      	ldr	r0, [r7, #12]
 800528e:	f000 f917 	bl	80054c0 <SPI_EndRxTxTransaction>
 8005292:	4603      	mov	r3, r0
 8005294:	2b00      	cmp	r3, #0
 8005296:	d006      	beq.n	80052a6 <HAL_SPI_TransmitReceive+0x306>
 8005298:	2301      	movs	r3, #1
 800529a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	2220      	movs	r2, #32
 80052a2:	655a      	str	r2, [r3, #84]	; 0x54
 80052a4:	e010      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	689b      	ldr	r3, [r3, #8]
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	d10b      	bne.n	80052c6 <HAL_SPI_TransmitReceive+0x326>
 80052ae:	2300      	movs	r3, #0
 80052b0:	617b      	str	r3, [r7, #20]
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	68db      	ldr	r3, [r3, #12]
 80052b8:	617b      	str	r3, [r7, #20]
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	689b      	ldr	r3, [r3, #8]
 80052c0:	617b      	str	r3, [r7, #20]
 80052c2:	697b      	ldr	r3, [r7, #20]
 80052c4:	e000      	b.n	80052c8 <HAL_SPI_TransmitReceive+0x328>
 80052c6:	bf00      	nop
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	2201      	movs	r2, #1
 80052cc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	2200      	movs	r2, #0
 80052d4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80052d8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80052dc:	4618      	mov	r0, r3
 80052de:	3730      	adds	r7, #48	; 0x30
 80052e0:	46bd      	mov	sp, r7
 80052e2:	bd80      	pop	{r7, pc}

080052e4 <SPI_WaitFlagStateUntilTimeout>:
 80052e4:	b580      	push	{r7, lr}
 80052e6:	b088      	sub	sp, #32
 80052e8:	af00      	add	r7, sp, #0
 80052ea:	60f8      	str	r0, [r7, #12]
 80052ec:	60b9      	str	r1, [r7, #8]
 80052ee:	603b      	str	r3, [r7, #0]
 80052f0:	4613      	mov	r3, r2
 80052f2:	71fb      	strb	r3, [r7, #7]
 80052f4:	f7fd fcf0 	bl	8002cd8 <HAL_GetTick>
 80052f8:	4602      	mov	r2, r0
 80052fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80052fc:	1a9b      	subs	r3, r3, r2
 80052fe:	683a      	ldr	r2, [r7, #0]
 8005300:	4413      	add	r3, r2
 8005302:	61fb      	str	r3, [r7, #28]
 8005304:	f7fd fce8 	bl	8002cd8 <HAL_GetTick>
 8005308:	61b8      	str	r0, [r7, #24]
 800530a:	4b39      	ldr	r3, [pc, #228]	; (80053f0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	015b      	lsls	r3, r3, #5
 8005310:	0d1b      	lsrs	r3, r3, #20
 8005312:	69fa      	ldr	r2, [r7, #28]
 8005314:	fb02 f303 	mul.w	r3, r2, r3
 8005318:	617b      	str	r3, [r7, #20]
 800531a:	e054      	b.n	80053c6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800531c:	683b      	ldr	r3, [r7, #0]
 800531e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005322:	d050      	beq.n	80053c6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005324:	f7fd fcd8 	bl	8002cd8 <HAL_GetTick>
 8005328:	4602      	mov	r2, r0
 800532a:	69bb      	ldr	r3, [r7, #24]
 800532c:	1ad3      	subs	r3, r2, r3
 800532e:	69fa      	ldr	r2, [r7, #28]
 8005330:	429a      	cmp	r2, r3
 8005332:	d902      	bls.n	800533a <SPI_WaitFlagStateUntilTimeout+0x56>
 8005334:	69fb      	ldr	r3, [r7, #28]
 8005336:	2b00      	cmp	r3, #0
 8005338:	d13d      	bne.n	80053b6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800533a:	68fb      	ldr	r3, [r7, #12]
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	685a      	ldr	r2, [r3, #4]
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005348:	605a      	str	r2, [r3, #4]
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	685b      	ldr	r3, [r3, #4]
 800534e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005352:	d111      	bne.n	8005378 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	689b      	ldr	r3, [r3, #8]
 8005358:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800535c:	d004      	beq.n	8005368 <SPI_WaitFlagStateUntilTimeout+0x84>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	689b      	ldr	r3, [r3, #8]
 8005362:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005366:	d107      	bne.n	8005378 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	681a      	ldr	r2, [r3, #0]
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005376:	601a      	str	r2, [r3, #0]
 8005378:	68fb      	ldr	r3, [r7, #12]
 800537a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800537c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005380:	d10f      	bne.n	80053a2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	681a      	ldr	r2, [r3, #0]
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005390:	601a      	str	r2, [r3, #0]
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	681a      	ldr	r2, [r3, #0]
 8005398:	68fb      	ldr	r3, [r7, #12]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80053a0:	601a      	str	r2, [r3, #0]
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	2201      	movs	r2, #1
 80053a6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	2200      	movs	r2, #0
 80053ae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80053b2:	2303      	movs	r3, #3
 80053b4:	e017      	b.n	80053e6 <SPI_WaitFlagStateUntilTimeout+0x102>
 80053b6:	697b      	ldr	r3, [r7, #20]
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d101      	bne.n	80053c0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80053bc:	2300      	movs	r3, #0
 80053be:	61fb      	str	r3, [r7, #28]
 80053c0:	697b      	ldr	r3, [r7, #20]
 80053c2:	3b01      	subs	r3, #1
 80053c4:	617b      	str	r3, [r7, #20]
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	689a      	ldr	r2, [r3, #8]
 80053cc:	68bb      	ldr	r3, [r7, #8]
 80053ce:	4013      	ands	r3, r2
 80053d0:	68ba      	ldr	r2, [r7, #8]
 80053d2:	429a      	cmp	r2, r3
 80053d4:	bf0c      	ite	eq
 80053d6:	2301      	moveq	r3, #1
 80053d8:	2300      	movne	r3, #0
 80053da:	b2db      	uxtb	r3, r3
 80053dc:	461a      	mov	r2, r3
 80053de:	79fb      	ldrb	r3, [r7, #7]
 80053e0:	429a      	cmp	r2, r3
 80053e2:	d19b      	bne.n	800531c <SPI_WaitFlagStateUntilTimeout+0x38>
 80053e4:	2300      	movs	r3, #0
 80053e6:	4618      	mov	r0, r3
 80053e8:	3720      	adds	r7, #32
 80053ea:	46bd      	mov	sp, r7
 80053ec:	bd80      	pop	{r7, pc}
 80053ee:	bf00      	nop
 80053f0:	20000020 	.word	0x20000020

080053f4 <SPI_EndRxTransaction>:
 80053f4:	b580      	push	{r7, lr}
 80053f6:	b086      	sub	sp, #24
 80053f8:	af02      	add	r7, sp, #8
 80053fa:	60f8      	str	r0, [r7, #12]
 80053fc:	60b9      	str	r1, [r7, #8]
 80053fe:	607a      	str	r2, [r7, #4]
 8005400:	68fb      	ldr	r3, [r7, #12]
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005408:	d111      	bne.n	800542e <SPI_EndRxTransaction+0x3a>
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	689b      	ldr	r3, [r3, #8]
 800540e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005412:	d004      	beq.n	800541e <SPI_EndRxTransaction+0x2a>
 8005414:	68fb      	ldr	r3, [r7, #12]
 8005416:	689b      	ldr	r3, [r3, #8]
 8005418:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800541c:	d107      	bne.n	800542e <SPI_EndRxTransaction+0x3a>
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	681a      	ldr	r2, [r3, #0]
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800542c:	601a      	str	r2, [r3, #0]
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	685b      	ldr	r3, [r3, #4]
 8005432:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005436:	d12a      	bne.n	800548e <SPI_EndRxTransaction+0x9a>
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	689b      	ldr	r3, [r3, #8]
 800543c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005440:	d012      	beq.n	8005468 <SPI_EndRxTransaction+0x74>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	9300      	str	r3, [sp, #0]
 8005446:	68bb      	ldr	r3, [r7, #8]
 8005448:	2200      	movs	r2, #0
 800544a:	2180      	movs	r1, #128	; 0x80
 800544c:	68f8      	ldr	r0, [r7, #12]
 800544e:	f7ff ff49 	bl	80052e4 <SPI_WaitFlagStateUntilTimeout>
 8005452:	4603      	mov	r3, r0
 8005454:	2b00      	cmp	r3, #0
 8005456:	d02d      	beq.n	80054b4 <SPI_EndRxTransaction+0xc0>
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800545c:	f043 0220 	orr.w	r2, r3, #32
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	655a      	str	r2, [r3, #84]	; 0x54
 8005464:	2303      	movs	r3, #3
 8005466:	e026      	b.n	80054b6 <SPI_EndRxTransaction+0xc2>
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	9300      	str	r3, [sp, #0]
 800546c:	68bb      	ldr	r3, [r7, #8]
 800546e:	2200      	movs	r2, #0
 8005470:	2101      	movs	r1, #1
 8005472:	68f8      	ldr	r0, [r7, #12]
 8005474:	f7ff ff36 	bl	80052e4 <SPI_WaitFlagStateUntilTimeout>
 8005478:	4603      	mov	r3, r0
 800547a:	2b00      	cmp	r3, #0
 800547c:	d01a      	beq.n	80054b4 <SPI_EndRxTransaction+0xc0>
 800547e:	68fb      	ldr	r3, [r7, #12]
 8005480:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005482:	f043 0220 	orr.w	r2, r3, #32
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	655a      	str	r2, [r3, #84]	; 0x54
 800548a:	2303      	movs	r3, #3
 800548c:	e013      	b.n	80054b6 <SPI_EndRxTransaction+0xc2>
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	9300      	str	r3, [sp, #0]
 8005492:	68bb      	ldr	r3, [r7, #8]
 8005494:	2200      	movs	r2, #0
 8005496:	2101      	movs	r1, #1
 8005498:	68f8      	ldr	r0, [r7, #12]
 800549a:	f7ff ff23 	bl	80052e4 <SPI_WaitFlagStateUntilTimeout>
 800549e:	4603      	mov	r3, r0
 80054a0:	2b00      	cmp	r3, #0
 80054a2:	d007      	beq.n	80054b4 <SPI_EndRxTransaction+0xc0>
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80054a8:	f043 0220 	orr.w	r2, r3, #32
 80054ac:	68fb      	ldr	r3, [r7, #12]
 80054ae:	655a      	str	r2, [r3, #84]	; 0x54
 80054b0:	2303      	movs	r3, #3
 80054b2:	e000      	b.n	80054b6 <SPI_EndRxTransaction+0xc2>
 80054b4:	2300      	movs	r3, #0
 80054b6:	4618      	mov	r0, r3
 80054b8:	3710      	adds	r7, #16
 80054ba:	46bd      	mov	sp, r7
 80054bc:	bd80      	pop	{r7, pc}
	...

080054c0 <SPI_EndRxTxTransaction>:
 80054c0:	b580      	push	{r7, lr}
 80054c2:	b088      	sub	sp, #32
 80054c4:	af02      	add	r7, sp, #8
 80054c6:	60f8      	str	r0, [r7, #12]
 80054c8:	60b9      	str	r1, [r7, #8]
 80054ca:	607a      	str	r2, [r7, #4]
 80054cc:	4b1b      	ldr	r3, [pc, #108]	; (800553c <SPI_EndRxTxTransaction+0x7c>)
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	4a1b      	ldr	r2, [pc, #108]	; (8005540 <SPI_EndRxTxTransaction+0x80>)
 80054d2:	fba2 2303 	umull	r2, r3, r2, r3
 80054d6:	0d5b      	lsrs	r3, r3, #21
 80054d8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80054dc:	fb02 f303 	mul.w	r3, r2, r3
 80054e0:	617b      	str	r3, [r7, #20]
 80054e2:	68fb      	ldr	r3, [r7, #12]
 80054e4:	685b      	ldr	r3, [r3, #4]
 80054e6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80054ea:	d112      	bne.n	8005512 <SPI_EndRxTxTransaction+0x52>
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	9300      	str	r3, [sp, #0]
 80054f0:	68bb      	ldr	r3, [r7, #8]
 80054f2:	2200      	movs	r2, #0
 80054f4:	2180      	movs	r1, #128	; 0x80
 80054f6:	68f8      	ldr	r0, [r7, #12]
 80054f8:	f7ff fef4 	bl	80052e4 <SPI_WaitFlagStateUntilTimeout>
 80054fc:	4603      	mov	r3, r0
 80054fe:	2b00      	cmp	r3, #0
 8005500:	d016      	beq.n	8005530 <SPI_EndRxTxTransaction+0x70>
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005506:	f043 0220 	orr.w	r2, r3, #32
 800550a:	68fb      	ldr	r3, [r7, #12]
 800550c:	655a      	str	r2, [r3, #84]	; 0x54
 800550e:	2303      	movs	r3, #3
 8005510:	e00f      	b.n	8005532 <SPI_EndRxTxTransaction+0x72>
 8005512:	697b      	ldr	r3, [r7, #20]
 8005514:	2b00      	cmp	r3, #0
 8005516:	d00a      	beq.n	800552e <SPI_EndRxTxTransaction+0x6e>
 8005518:	697b      	ldr	r3, [r7, #20]
 800551a:	3b01      	subs	r3, #1
 800551c:	617b      	str	r3, [r7, #20]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	689b      	ldr	r3, [r3, #8]
 8005524:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005528:	2b80      	cmp	r3, #128	; 0x80
 800552a:	d0f2      	beq.n	8005512 <SPI_EndRxTxTransaction+0x52>
 800552c:	e000      	b.n	8005530 <SPI_EndRxTxTransaction+0x70>
 800552e:	bf00      	nop
 8005530:	2300      	movs	r3, #0
 8005532:	4618      	mov	r0, r3
 8005534:	3718      	adds	r7, #24
 8005536:	46bd      	mov	sp, r7
 8005538:	bd80      	pop	{r7, pc}
 800553a:	bf00      	nop
 800553c:	20000020 	.word	0x20000020
 8005540:	165e9f81 	.word	0x165e9f81

08005544 <HAL_SRAM_Init>:
 8005544:	b580      	push	{r7, lr}
 8005546:	b084      	sub	sp, #16
 8005548:	af00      	add	r7, sp, #0
 800554a:	60f8      	str	r0, [r7, #12]
 800554c:	60b9      	str	r1, [r7, #8]
 800554e:	607a      	str	r2, [r7, #4]
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	2b00      	cmp	r3, #0
 8005554:	d101      	bne.n	800555a <HAL_SRAM_Init+0x16>
 8005556:	2301      	movs	r3, #1
 8005558:	e034      	b.n	80055c4 <HAL_SRAM_Init+0x80>
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	f893 3049 	ldrb.w	r3, [r3, #73]	; 0x49
 8005560:	b2db      	uxtb	r3, r3
 8005562:	2b00      	cmp	r3, #0
 8005564:	d106      	bne.n	8005574 <HAL_SRAM_Init+0x30>
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	2200      	movs	r2, #0
 800556a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800556e:	68f8      	ldr	r0, [r7, #12]
 8005570:	f7fb fa76 	bl	8000a60 <HAL_SRAM_MspInit>
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	681a      	ldr	r2, [r3, #0]
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	3308      	adds	r3, #8
 800557c:	4619      	mov	r1, r3
 800557e:	4610      	mov	r0, r2
 8005580:	f001 ffa2 	bl	80074c8 <FSMC_NORSRAM_Init>
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	6818      	ldr	r0, [r3, #0]
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	689b      	ldr	r3, [r3, #8]
 800558c:	461a      	mov	r2, r3
 800558e:	68b9      	ldr	r1, [r7, #8]
 8005590:	f001 ffec 	bl	800756c <FSMC_NORSRAM_Timing_Init>
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	6858      	ldr	r0, [r3, #4]
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	689a      	ldr	r2, [r3, #8]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055a0:	6879      	ldr	r1, [r7, #4]
 80055a2:	f002 f821 	bl	80075e8 <FSMC_NORSRAM_Extended_Timing_Init>
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	68fa      	ldr	r2, [r7, #12]
 80055ac:	6892      	ldr	r2, [r2, #8]
 80055ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	68fa      	ldr	r2, [r7, #12]
 80055b8:	6892      	ldr	r2, [r2, #8]
 80055ba:	f041 0101 	orr.w	r1, r1, #1
 80055be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80055c2:	2300      	movs	r3, #0
 80055c4:	4618      	mov	r0, r3
 80055c6:	3710      	adds	r7, #16
 80055c8:	46bd      	mov	sp, r7
 80055ca:	bd80      	pop	{r7, pc}

080055cc <HAL_TIM_Base_Init>:
 80055cc:	b580      	push	{r7, lr}
 80055ce:	b082      	sub	sp, #8
 80055d0:	af00      	add	r7, sp, #0
 80055d2:	6078      	str	r0, [r7, #4]
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	2b00      	cmp	r3, #0
 80055d8:	d101      	bne.n	80055de <HAL_TIM_Base_Init+0x12>
 80055da:	2301      	movs	r3, #1
 80055dc:	e041      	b.n	8005662 <HAL_TIM_Base_Init+0x96>
 80055de:	687b      	ldr	r3, [r7, #4]
 80055e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80055e4:	b2db      	uxtb	r3, r3
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d106      	bne.n	80055f8 <HAL_TIM_Base_Init+0x2c>
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	2200      	movs	r2, #0
 80055ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80055f2:	6878      	ldr	r0, [r7, #4]
 80055f4:	f7fd f92a 	bl	800284c <HAL_TIM_Base_MspInit>
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	2202      	movs	r2, #2
 80055fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	681a      	ldr	r2, [r3, #0]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	3304      	adds	r3, #4
 8005608:	4619      	mov	r1, r3
 800560a:	4610      	mov	r0, r2
 800560c:	f000 fc1a 	bl	8005e44 <TIM_Base_SetConfig>
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	2201      	movs	r2, #1
 8005614:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2201      	movs	r2, #1
 800561c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	2201      	movs	r2, #1
 8005624:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	2201      	movs	r2, #1
 800562c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	2201      	movs	r2, #1
 8005634:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	2201      	movs	r2, #1
 800563c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	2201      	movs	r2, #1
 8005644:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	2201      	movs	r2, #1
 800564c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	2201      	movs	r2, #1
 8005654:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	2201      	movs	r2, #1
 800565c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005660:	2300      	movs	r3, #0
 8005662:	4618      	mov	r0, r3
 8005664:	3708      	adds	r7, #8
 8005666:	46bd      	mov	sp, r7
 8005668:	bd80      	pop	{r7, pc}
	...

0800566c <HAL_TIM_Base_Start>:
 800566c:	b480      	push	{r7}
 800566e:	b085      	sub	sp, #20
 8005670:	af00      	add	r7, sp, #0
 8005672:	6078      	str	r0, [r7, #4]
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800567a:	b2db      	uxtb	r3, r3
 800567c:	2b01      	cmp	r3, #1
 800567e:	d001      	beq.n	8005684 <HAL_TIM_Base_Start+0x18>
 8005680:	2301      	movs	r3, #1
 8005682:	e046      	b.n	8005712 <HAL_TIM_Base_Start+0xa6>
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	2202      	movs	r2, #2
 8005688:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	4a23      	ldr	r2, [pc, #140]	; (8005720 <HAL_TIM_Base_Start+0xb4>)
 8005692:	4293      	cmp	r3, r2
 8005694:	d022      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800569e:	d01d      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	681b      	ldr	r3, [r3, #0]
 80056a4:	4a1f      	ldr	r2, [pc, #124]	; (8005724 <HAL_TIM_Base_Start+0xb8>)
 80056a6:	4293      	cmp	r3, r2
 80056a8:	d018      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	4a1e      	ldr	r2, [pc, #120]	; (8005728 <HAL_TIM_Base_Start+0xbc>)
 80056b0:	4293      	cmp	r3, r2
 80056b2:	d013      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	4a1c      	ldr	r2, [pc, #112]	; (800572c <HAL_TIM_Base_Start+0xc0>)
 80056ba:	4293      	cmp	r3, r2
 80056bc:	d00e      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	4a1b      	ldr	r2, [pc, #108]	; (8005730 <HAL_TIM_Base_Start+0xc4>)
 80056c4:	4293      	cmp	r3, r2
 80056c6:	d009      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	681b      	ldr	r3, [r3, #0]
 80056cc:	4a19      	ldr	r2, [pc, #100]	; (8005734 <HAL_TIM_Base_Start+0xc8>)
 80056ce:	4293      	cmp	r3, r2
 80056d0:	d004      	beq.n	80056dc <HAL_TIM_Base_Start+0x70>
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	4a18      	ldr	r2, [pc, #96]	; (8005738 <HAL_TIM_Base_Start+0xcc>)
 80056d8:	4293      	cmp	r3, r2
 80056da:	d111      	bne.n	8005700 <HAL_TIM_Base_Start+0x94>
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	689b      	ldr	r3, [r3, #8]
 80056e2:	f003 0307 	and.w	r3, r3, #7
 80056e6:	60fb      	str	r3, [r7, #12]
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	2b06      	cmp	r3, #6
 80056ec:	d010      	beq.n	8005710 <HAL_TIM_Base_Start+0xa4>
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	681b      	ldr	r3, [r3, #0]
 80056f2:	681a      	ldr	r2, [r3, #0]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	f042 0201 	orr.w	r2, r2, #1
 80056fc:	601a      	str	r2, [r3, #0]
 80056fe:	e007      	b.n	8005710 <HAL_TIM_Base_Start+0xa4>
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	681a      	ldr	r2, [r3, #0]
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	f042 0201 	orr.w	r2, r2, #1
 800570e:	601a      	str	r2, [r3, #0]
 8005710:	2300      	movs	r3, #0
 8005712:	4618      	mov	r0, r3
 8005714:	3714      	adds	r7, #20
 8005716:	46bd      	mov	sp, r7
 8005718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800571c:	4770      	bx	lr
 800571e:	bf00      	nop
 8005720:	40010000 	.word	0x40010000
 8005724:	40000400 	.word	0x40000400
 8005728:	40000800 	.word	0x40000800
 800572c:	40000c00 	.word	0x40000c00
 8005730:	40010400 	.word	0x40010400
 8005734:	40014000 	.word	0x40014000
 8005738:	40001800 	.word	0x40001800

0800573c <HAL_TIM_Base_Start_IT>:
 800573c:	b480      	push	{r7}
 800573e:	b085      	sub	sp, #20
 8005740:	af00      	add	r7, sp, #0
 8005742:	6078      	str	r0, [r7, #4]
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800574a:	b2db      	uxtb	r3, r3
 800574c:	2b01      	cmp	r3, #1
 800574e:	d001      	beq.n	8005754 <HAL_TIM_Base_Start_IT+0x18>
 8005750:	2301      	movs	r3, #1
 8005752:	e04e      	b.n	80057f2 <HAL_TIM_Base_Start_IT+0xb6>
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	2202      	movs	r2, #2
 8005758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	68da      	ldr	r2, [r3, #12]
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	f042 0201 	orr.w	r2, r2, #1
 800576a:	60da      	str	r2, [r3, #12]
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	4a23      	ldr	r2, [pc, #140]	; (8005800 <HAL_TIM_Base_Start_IT+0xc4>)
 8005772:	4293      	cmp	r3, r2
 8005774:	d022      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800577e:	d01d      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	681b      	ldr	r3, [r3, #0]
 8005784:	4a1f      	ldr	r2, [pc, #124]	; (8005804 <HAL_TIM_Base_Start_IT+0xc8>)
 8005786:	4293      	cmp	r3, r2
 8005788:	d018      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	4a1e      	ldr	r2, [pc, #120]	; (8005808 <HAL_TIM_Base_Start_IT+0xcc>)
 8005790:	4293      	cmp	r3, r2
 8005792:	d013      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	4a1c      	ldr	r2, [pc, #112]	; (800580c <HAL_TIM_Base_Start_IT+0xd0>)
 800579a:	4293      	cmp	r3, r2
 800579c:	d00e      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	681b      	ldr	r3, [r3, #0]
 80057a2:	4a1b      	ldr	r2, [pc, #108]	; (8005810 <HAL_TIM_Base_Start_IT+0xd4>)
 80057a4:	4293      	cmp	r3, r2
 80057a6:	d009      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	4a19      	ldr	r2, [pc, #100]	; (8005814 <HAL_TIM_Base_Start_IT+0xd8>)
 80057ae:	4293      	cmp	r3, r2
 80057b0:	d004      	beq.n	80057bc <HAL_TIM_Base_Start_IT+0x80>
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	681b      	ldr	r3, [r3, #0]
 80057b6:	4a18      	ldr	r2, [pc, #96]	; (8005818 <HAL_TIM_Base_Start_IT+0xdc>)
 80057b8:	4293      	cmp	r3, r2
 80057ba:	d111      	bne.n	80057e0 <HAL_TIM_Base_Start_IT+0xa4>
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	689b      	ldr	r3, [r3, #8]
 80057c2:	f003 0307 	and.w	r3, r3, #7
 80057c6:	60fb      	str	r3, [r7, #12]
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	2b06      	cmp	r3, #6
 80057cc:	d010      	beq.n	80057f0 <HAL_TIM_Base_Start_IT+0xb4>
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	681a      	ldr	r2, [r3, #0]
 80057d4:	687b      	ldr	r3, [r7, #4]
 80057d6:	681b      	ldr	r3, [r3, #0]
 80057d8:	f042 0201 	orr.w	r2, r2, #1
 80057dc:	601a      	str	r2, [r3, #0]
 80057de:	e007      	b.n	80057f0 <HAL_TIM_Base_Start_IT+0xb4>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	681a      	ldr	r2, [r3, #0]
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	f042 0201 	orr.w	r2, r2, #1
 80057ee:	601a      	str	r2, [r3, #0]
 80057f0:	2300      	movs	r3, #0
 80057f2:	4618      	mov	r0, r3
 80057f4:	3714      	adds	r7, #20
 80057f6:	46bd      	mov	sp, r7
 80057f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057fc:	4770      	bx	lr
 80057fe:	bf00      	nop
 8005800:	40010000 	.word	0x40010000
 8005804:	40000400 	.word	0x40000400
 8005808:	40000800 	.word	0x40000800
 800580c:	40000c00 	.word	0x40000c00
 8005810:	40010400 	.word	0x40010400
 8005814:	40014000 	.word	0x40014000
 8005818:	40001800 	.word	0x40001800

0800581c <HAL_TIM_PWM_Init>:
 800581c:	b580      	push	{r7, lr}
 800581e:	b082      	sub	sp, #8
 8005820:	af00      	add	r7, sp, #0
 8005822:	6078      	str	r0, [r7, #4]
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	2b00      	cmp	r3, #0
 8005828:	d101      	bne.n	800582e <HAL_TIM_PWM_Init+0x12>
 800582a:	2301      	movs	r3, #1
 800582c:	e041      	b.n	80058b2 <HAL_TIM_PWM_Init+0x96>
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005834:	b2db      	uxtb	r3, r3
 8005836:	2b00      	cmp	r3, #0
 8005838:	d106      	bne.n	8005848 <HAL_TIM_PWM_Init+0x2c>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	2200      	movs	r2, #0
 800583e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005842:	6878      	ldr	r0, [r7, #4]
 8005844:	f000 f839 	bl	80058ba <HAL_TIM_PWM_MspInit>
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	2202      	movs	r2, #2
 800584c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	681a      	ldr	r2, [r3, #0]
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	3304      	adds	r3, #4
 8005858:	4619      	mov	r1, r3
 800585a:	4610      	mov	r0, r2
 800585c:	f000 faf2 	bl	8005e44 <TIM_Base_SetConfig>
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	2201      	movs	r2, #1
 8005864:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	2201      	movs	r2, #1
 800586c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	2201      	movs	r2, #1
 8005874:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	2201      	movs	r2, #1
 800587c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	2201      	movs	r2, #1
 8005884:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	2201      	movs	r2, #1
 800588c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	2201      	movs	r2, #1
 8005894:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	2201      	movs	r2, #1
 800589c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	2201      	movs	r2, #1
 80058a4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	2201      	movs	r2, #1
 80058ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80058b0:	2300      	movs	r3, #0
 80058b2:	4618      	mov	r0, r3
 80058b4:	3708      	adds	r7, #8
 80058b6:	46bd      	mov	sp, r7
 80058b8:	bd80      	pop	{r7, pc}

080058ba <HAL_TIM_PWM_MspInit>:
 80058ba:	b480      	push	{r7}
 80058bc:	b083      	sub	sp, #12
 80058be:	af00      	add	r7, sp, #0
 80058c0:	6078      	str	r0, [r7, #4]
 80058c2:	bf00      	nop
 80058c4:	370c      	adds	r7, #12
 80058c6:	46bd      	mov	sp, r7
 80058c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058cc:	4770      	bx	lr

080058ce <HAL_TIM_IRQHandler>:
 80058ce:	b580      	push	{r7, lr}
 80058d0:	b082      	sub	sp, #8
 80058d2:	af00      	add	r7, sp, #0
 80058d4:	6078      	str	r0, [r7, #4]
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	691b      	ldr	r3, [r3, #16]
 80058dc:	f003 0302 	and.w	r3, r3, #2
 80058e0:	2b02      	cmp	r3, #2
 80058e2:	d122      	bne.n	800592a <HAL_TIM_IRQHandler+0x5c>
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	68db      	ldr	r3, [r3, #12]
 80058ea:	f003 0302 	and.w	r3, r3, #2
 80058ee:	2b02      	cmp	r3, #2
 80058f0:	d11b      	bne.n	800592a <HAL_TIM_IRQHandler+0x5c>
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	f06f 0202 	mvn.w	r2, #2
 80058fa:	611a      	str	r2, [r3, #16]
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	2201      	movs	r2, #1
 8005900:	771a      	strb	r2, [r3, #28]
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	699b      	ldr	r3, [r3, #24]
 8005908:	f003 0303 	and.w	r3, r3, #3
 800590c:	2b00      	cmp	r3, #0
 800590e:	d003      	beq.n	8005918 <HAL_TIM_IRQHandler+0x4a>
 8005910:	6878      	ldr	r0, [r7, #4]
 8005912:	f000 fa78 	bl	8005e06 <HAL_TIM_IC_CaptureCallback>
 8005916:	e005      	b.n	8005924 <HAL_TIM_IRQHandler+0x56>
 8005918:	6878      	ldr	r0, [r7, #4]
 800591a:	f000 fa6a 	bl	8005df2 <HAL_TIM_OC_DelayElapsedCallback>
 800591e:	6878      	ldr	r0, [r7, #4]
 8005920:	f000 fa7b 	bl	8005e1a <HAL_TIM_PWM_PulseFinishedCallback>
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	2200      	movs	r2, #0
 8005928:	771a      	strb	r2, [r3, #28]
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	691b      	ldr	r3, [r3, #16]
 8005930:	f003 0304 	and.w	r3, r3, #4
 8005934:	2b04      	cmp	r3, #4
 8005936:	d122      	bne.n	800597e <HAL_TIM_IRQHandler+0xb0>
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	68db      	ldr	r3, [r3, #12]
 800593e:	f003 0304 	and.w	r3, r3, #4
 8005942:	2b04      	cmp	r3, #4
 8005944:	d11b      	bne.n	800597e <HAL_TIM_IRQHandler+0xb0>
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	f06f 0204 	mvn.w	r2, #4
 800594e:	611a      	str	r2, [r3, #16]
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	2202      	movs	r2, #2
 8005954:	771a      	strb	r2, [r3, #28]
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	699b      	ldr	r3, [r3, #24]
 800595c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005960:	2b00      	cmp	r3, #0
 8005962:	d003      	beq.n	800596c <HAL_TIM_IRQHandler+0x9e>
 8005964:	6878      	ldr	r0, [r7, #4]
 8005966:	f000 fa4e 	bl	8005e06 <HAL_TIM_IC_CaptureCallback>
 800596a:	e005      	b.n	8005978 <HAL_TIM_IRQHandler+0xaa>
 800596c:	6878      	ldr	r0, [r7, #4]
 800596e:	f000 fa40 	bl	8005df2 <HAL_TIM_OC_DelayElapsedCallback>
 8005972:	6878      	ldr	r0, [r7, #4]
 8005974:	f000 fa51 	bl	8005e1a <HAL_TIM_PWM_PulseFinishedCallback>
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	2200      	movs	r2, #0
 800597c:	771a      	strb	r2, [r3, #28]
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	691b      	ldr	r3, [r3, #16]
 8005984:	f003 0308 	and.w	r3, r3, #8
 8005988:	2b08      	cmp	r3, #8
 800598a:	d122      	bne.n	80059d2 <HAL_TIM_IRQHandler+0x104>
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	68db      	ldr	r3, [r3, #12]
 8005992:	f003 0308 	and.w	r3, r3, #8
 8005996:	2b08      	cmp	r3, #8
 8005998:	d11b      	bne.n	80059d2 <HAL_TIM_IRQHandler+0x104>
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	f06f 0208 	mvn.w	r2, #8
 80059a2:	611a      	str	r2, [r3, #16]
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	2204      	movs	r2, #4
 80059a8:	771a      	strb	r2, [r3, #28]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	69db      	ldr	r3, [r3, #28]
 80059b0:	f003 0303 	and.w	r3, r3, #3
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d003      	beq.n	80059c0 <HAL_TIM_IRQHandler+0xf2>
 80059b8:	6878      	ldr	r0, [r7, #4]
 80059ba:	f000 fa24 	bl	8005e06 <HAL_TIM_IC_CaptureCallback>
 80059be:	e005      	b.n	80059cc <HAL_TIM_IRQHandler+0xfe>
 80059c0:	6878      	ldr	r0, [r7, #4]
 80059c2:	f000 fa16 	bl	8005df2 <HAL_TIM_OC_DelayElapsedCallback>
 80059c6:	6878      	ldr	r0, [r7, #4]
 80059c8:	f000 fa27 	bl	8005e1a <HAL_TIM_PWM_PulseFinishedCallback>
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	2200      	movs	r2, #0
 80059d0:	771a      	strb	r2, [r3, #28]
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	691b      	ldr	r3, [r3, #16]
 80059d8:	f003 0310 	and.w	r3, r3, #16
 80059dc:	2b10      	cmp	r3, #16
 80059de:	d122      	bne.n	8005a26 <HAL_TIM_IRQHandler+0x158>
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	68db      	ldr	r3, [r3, #12]
 80059e6:	f003 0310 	and.w	r3, r3, #16
 80059ea:	2b10      	cmp	r3, #16
 80059ec:	d11b      	bne.n	8005a26 <HAL_TIM_IRQHandler+0x158>
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	f06f 0210 	mvn.w	r2, #16
 80059f6:	611a      	str	r2, [r3, #16]
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	2208      	movs	r2, #8
 80059fc:	771a      	strb	r2, [r3, #28]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	69db      	ldr	r3, [r3, #28]
 8005a04:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005a08:	2b00      	cmp	r3, #0
 8005a0a:	d003      	beq.n	8005a14 <HAL_TIM_IRQHandler+0x146>
 8005a0c:	6878      	ldr	r0, [r7, #4]
 8005a0e:	f000 f9fa 	bl	8005e06 <HAL_TIM_IC_CaptureCallback>
 8005a12:	e005      	b.n	8005a20 <HAL_TIM_IRQHandler+0x152>
 8005a14:	6878      	ldr	r0, [r7, #4]
 8005a16:	f000 f9ec 	bl	8005df2 <HAL_TIM_OC_DelayElapsedCallback>
 8005a1a:	6878      	ldr	r0, [r7, #4]
 8005a1c:	f000 f9fd 	bl	8005e1a <HAL_TIM_PWM_PulseFinishedCallback>
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	2200      	movs	r2, #0
 8005a24:	771a      	strb	r2, [r3, #28]
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	691b      	ldr	r3, [r3, #16]
 8005a2c:	f003 0301 	and.w	r3, r3, #1
 8005a30:	2b01      	cmp	r3, #1
 8005a32:	d10e      	bne.n	8005a52 <HAL_TIM_IRQHandler+0x184>
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	68db      	ldr	r3, [r3, #12]
 8005a3a:	f003 0301 	and.w	r3, r3, #1
 8005a3e:	2b01      	cmp	r3, #1
 8005a40:	d107      	bne.n	8005a52 <HAL_TIM_IRQHandler+0x184>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	f06f 0201 	mvn.w	r2, #1
 8005a4a:	611a      	str	r2, [r3, #16]
 8005a4c:	6878      	ldr	r0, [r7, #4]
 8005a4e:	f7fc fc19 	bl	8002284 <HAL_TIM_PeriodElapsedCallback>
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	691b      	ldr	r3, [r3, #16]
 8005a58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a5c:	2b80      	cmp	r3, #128	; 0x80
 8005a5e:	d10e      	bne.n	8005a7e <HAL_TIM_IRQHandler+0x1b0>
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	68db      	ldr	r3, [r3, #12]
 8005a66:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a6a:	2b80      	cmp	r3, #128	; 0x80
 8005a6c:	d107      	bne.n	8005a7e <HAL_TIM_IRQHandler+0x1b0>
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005a76:	611a      	str	r2, [r3, #16]
 8005a78:	6878      	ldr	r0, [r7, #4]
 8005a7a:	f000 fd53 	bl	8006524 <HAL_TIMEx_BreakCallback>
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	691b      	ldr	r3, [r3, #16]
 8005a84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005a88:	2b40      	cmp	r3, #64	; 0x40
 8005a8a:	d10e      	bne.n	8005aaa <HAL_TIM_IRQHandler+0x1dc>
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	68db      	ldr	r3, [r3, #12]
 8005a92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005a96:	2b40      	cmp	r3, #64	; 0x40
 8005a98:	d107      	bne.n	8005aaa <HAL_TIM_IRQHandler+0x1dc>
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005aa2:	611a      	str	r2, [r3, #16]
 8005aa4:	6878      	ldr	r0, [r7, #4]
 8005aa6:	f000 f9c2 	bl	8005e2e <HAL_TIM_TriggerCallback>
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	691b      	ldr	r3, [r3, #16]
 8005ab0:	f003 0320 	and.w	r3, r3, #32
 8005ab4:	2b20      	cmp	r3, #32
 8005ab6:	d10e      	bne.n	8005ad6 <HAL_TIM_IRQHandler+0x208>
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	68db      	ldr	r3, [r3, #12]
 8005abe:	f003 0320 	and.w	r3, r3, #32
 8005ac2:	2b20      	cmp	r3, #32
 8005ac4:	d107      	bne.n	8005ad6 <HAL_TIM_IRQHandler+0x208>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	f06f 0220 	mvn.w	r2, #32
 8005ace:	611a      	str	r2, [r3, #16]
 8005ad0:	6878      	ldr	r0, [r7, #4]
 8005ad2:	f000 fd1d 	bl	8006510 <HAL_TIMEx_CommutCallback>
 8005ad6:	bf00      	nop
 8005ad8:	3708      	adds	r7, #8
 8005ada:	46bd      	mov	sp, r7
 8005adc:	bd80      	pop	{r7, pc}
	...

08005ae0 <HAL_TIM_PWM_ConfigChannel>:
 8005ae0:	b580      	push	{r7, lr}
 8005ae2:	b086      	sub	sp, #24
 8005ae4:	af00      	add	r7, sp, #0
 8005ae6:	60f8      	str	r0, [r7, #12]
 8005ae8:	60b9      	str	r1, [r7, #8]
 8005aea:	607a      	str	r2, [r7, #4]
 8005aec:	2300      	movs	r3, #0
 8005aee:	75fb      	strb	r3, [r7, #23]
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005af6:	2b01      	cmp	r3, #1
 8005af8:	d101      	bne.n	8005afe <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005afa:	2302      	movs	r3, #2
 8005afc:	e0ae      	b.n	8005c5c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8005afe:	68fb      	ldr	r3, [r7, #12]
 8005b00:	2201      	movs	r2, #1
 8005b02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	2b0c      	cmp	r3, #12
 8005b0a:	f200 809f 	bhi.w	8005c4c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8005b0e:	a201      	add	r2, pc, #4	; (adr r2, 8005b14 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005b10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b14:	08005b49 	.word	0x08005b49
 8005b18:	08005c4d 	.word	0x08005c4d
 8005b1c:	08005c4d 	.word	0x08005c4d
 8005b20:	08005c4d 	.word	0x08005c4d
 8005b24:	08005b89 	.word	0x08005b89
 8005b28:	08005c4d 	.word	0x08005c4d
 8005b2c:	08005c4d 	.word	0x08005c4d
 8005b30:	08005c4d 	.word	0x08005c4d
 8005b34:	08005bcb 	.word	0x08005bcb
 8005b38:	08005c4d 	.word	0x08005c4d
 8005b3c:	08005c4d 	.word	0x08005c4d
 8005b40:	08005c4d 	.word	0x08005c4d
 8005b44:	08005c0b 	.word	0x08005c0b
 8005b48:	68fb      	ldr	r3, [r7, #12]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	68b9      	ldr	r1, [r7, #8]
 8005b4e:	4618      	mov	r0, r3
 8005b50:	f000 fa18 	bl	8005f84 <TIM_OC1_SetConfig>
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	699a      	ldr	r2, [r3, #24]
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	f042 0208 	orr.w	r2, r2, #8
 8005b62:	619a      	str	r2, [r3, #24]
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	699a      	ldr	r2, [r3, #24]
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	f022 0204 	bic.w	r2, r2, #4
 8005b72:	619a      	str	r2, [r3, #24]
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	681b      	ldr	r3, [r3, #0]
 8005b78:	6999      	ldr	r1, [r3, #24]
 8005b7a:	68bb      	ldr	r3, [r7, #8]
 8005b7c:	691a      	ldr	r2, [r3, #16]
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	430a      	orrs	r2, r1
 8005b84:	619a      	str	r2, [r3, #24]
 8005b86:	e064      	b.n	8005c52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005b88:	68fb      	ldr	r3, [r7, #12]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	68b9      	ldr	r1, [r7, #8]
 8005b8e:	4618      	mov	r0, r3
 8005b90:	f000 fa68 	bl	8006064 <TIM_OC2_SetConfig>
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	681b      	ldr	r3, [r3, #0]
 8005b98:	699a      	ldr	r2, [r3, #24]
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ba2:	619a      	str	r2, [r3, #24]
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	699a      	ldr	r2, [r3, #24]
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005bb2:	619a      	str	r2, [r3, #24]
 8005bb4:	68fb      	ldr	r3, [r7, #12]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	6999      	ldr	r1, [r3, #24]
 8005bba:	68bb      	ldr	r3, [r7, #8]
 8005bbc:	691b      	ldr	r3, [r3, #16]
 8005bbe:	021a      	lsls	r2, r3, #8
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	681b      	ldr	r3, [r3, #0]
 8005bc4:	430a      	orrs	r2, r1
 8005bc6:	619a      	str	r2, [r3, #24]
 8005bc8:	e043      	b.n	8005c52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	681b      	ldr	r3, [r3, #0]
 8005bce:	68b9      	ldr	r1, [r7, #8]
 8005bd0:	4618      	mov	r0, r3
 8005bd2:	f000 fabd 	bl	8006150 <TIM_OC3_SetConfig>
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	69da      	ldr	r2, [r3, #28]
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	f042 0208 	orr.w	r2, r2, #8
 8005be4:	61da      	str	r2, [r3, #28]
 8005be6:	68fb      	ldr	r3, [r7, #12]
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	69da      	ldr	r2, [r3, #28]
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	f022 0204 	bic.w	r2, r2, #4
 8005bf4:	61da      	str	r2, [r3, #28]
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	69d9      	ldr	r1, [r3, #28]
 8005bfc:	68bb      	ldr	r3, [r7, #8]
 8005bfe:	691a      	ldr	r2, [r3, #16]
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	430a      	orrs	r2, r1
 8005c06:	61da      	str	r2, [r3, #28]
 8005c08:	e023      	b.n	8005c52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005c0a:	68fb      	ldr	r3, [r7, #12]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	68b9      	ldr	r1, [r7, #8]
 8005c10:	4618      	mov	r0, r3
 8005c12:	f000 fb11 	bl	8006238 <TIM_OC4_SetConfig>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	69da      	ldr	r2, [r3, #28]
 8005c1c:	68fb      	ldr	r3, [r7, #12]
 8005c1e:	681b      	ldr	r3, [r3, #0]
 8005c20:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005c24:	61da      	str	r2, [r3, #28]
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	681b      	ldr	r3, [r3, #0]
 8005c2a:	69da      	ldr	r2, [r3, #28]
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	681b      	ldr	r3, [r3, #0]
 8005c30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c34:	61da      	str	r2, [r3, #28]
 8005c36:	68fb      	ldr	r3, [r7, #12]
 8005c38:	681b      	ldr	r3, [r3, #0]
 8005c3a:	69d9      	ldr	r1, [r3, #28]
 8005c3c:	68bb      	ldr	r3, [r7, #8]
 8005c3e:	691b      	ldr	r3, [r3, #16]
 8005c40:	021a      	lsls	r2, r3, #8
 8005c42:	68fb      	ldr	r3, [r7, #12]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	430a      	orrs	r2, r1
 8005c48:	61da      	str	r2, [r3, #28]
 8005c4a:	e002      	b.n	8005c52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005c4c:	2301      	movs	r3, #1
 8005c4e:	75fb      	strb	r3, [r7, #23]
 8005c50:	bf00      	nop
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	2200      	movs	r2, #0
 8005c56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005c5a:	7dfb      	ldrb	r3, [r7, #23]
 8005c5c:	4618      	mov	r0, r3
 8005c5e:	3718      	adds	r7, #24
 8005c60:	46bd      	mov	sp, r7
 8005c62:	bd80      	pop	{r7, pc}

08005c64 <HAL_TIM_ConfigClockSource>:
 8005c64:	b580      	push	{r7, lr}
 8005c66:	b084      	sub	sp, #16
 8005c68:	af00      	add	r7, sp, #0
 8005c6a:	6078      	str	r0, [r7, #4]
 8005c6c:	6039      	str	r1, [r7, #0]
 8005c6e:	2300      	movs	r3, #0
 8005c70:	73fb      	strb	r3, [r7, #15]
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005c78:	2b01      	cmp	r3, #1
 8005c7a:	d101      	bne.n	8005c80 <HAL_TIM_ConfigClockSource+0x1c>
 8005c7c:	2302      	movs	r3, #2
 8005c7e:	e0b4      	b.n	8005dea <HAL_TIM_ConfigClockSource+0x186>
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	2201      	movs	r2, #1
 8005c84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	2202      	movs	r2, #2
 8005c8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	689b      	ldr	r3, [r3, #8]
 8005c96:	60bb      	str	r3, [r7, #8]
 8005c98:	68bb      	ldr	r3, [r7, #8]
 8005c9a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8005c9e:	60bb      	str	r3, [r7, #8]
 8005ca0:	68bb      	ldr	r3, [r7, #8]
 8005ca2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005ca6:	60bb      	str	r3, [r7, #8]
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	681b      	ldr	r3, [r3, #0]
 8005cac:	68ba      	ldr	r2, [r7, #8]
 8005cae:	609a      	str	r2, [r3, #8]
 8005cb0:	683b      	ldr	r3, [r7, #0]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005cb8:	d03e      	beq.n	8005d38 <HAL_TIM_ConfigClockSource+0xd4>
 8005cba:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005cbe:	f200 8087 	bhi.w	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005cc2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005cc6:	f000 8086 	beq.w	8005dd6 <HAL_TIM_ConfigClockSource+0x172>
 8005cca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005cce:	d87f      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005cd0:	2b70      	cmp	r3, #112	; 0x70
 8005cd2:	d01a      	beq.n	8005d0a <HAL_TIM_ConfigClockSource+0xa6>
 8005cd4:	2b70      	cmp	r3, #112	; 0x70
 8005cd6:	d87b      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005cd8:	2b60      	cmp	r3, #96	; 0x60
 8005cda:	d050      	beq.n	8005d7e <HAL_TIM_ConfigClockSource+0x11a>
 8005cdc:	2b60      	cmp	r3, #96	; 0x60
 8005cde:	d877      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ce0:	2b50      	cmp	r3, #80	; 0x50
 8005ce2:	d03c      	beq.n	8005d5e <HAL_TIM_ConfigClockSource+0xfa>
 8005ce4:	2b50      	cmp	r3, #80	; 0x50
 8005ce6:	d873      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005ce8:	2b40      	cmp	r3, #64	; 0x40
 8005cea:	d058      	beq.n	8005d9e <HAL_TIM_ConfigClockSource+0x13a>
 8005cec:	2b40      	cmp	r3, #64	; 0x40
 8005cee:	d86f      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005cf0:	2b30      	cmp	r3, #48	; 0x30
 8005cf2:	d064      	beq.n	8005dbe <HAL_TIM_ConfigClockSource+0x15a>
 8005cf4:	2b30      	cmp	r3, #48	; 0x30
 8005cf6:	d86b      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005cf8:	2b20      	cmp	r3, #32
 8005cfa:	d060      	beq.n	8005dbe <HAL_TIM_ConfigClockSource+0x15a>
 8005cfc:	2b20      	cmp	r3, #32
 8005cfe:	d867      	bhi.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005d00:	2b00      	cmp	r3, #0
 8005d02:	d05c      	beq.n	8005dbe <HAL_TIM_ConfigClockSource+0x15a>
 8005d04:	2b10      	cmp	r3, #16
 8005d06:	d05a      	beq.n	8005dbe <HAL_TIM_ConfigClockSource+0x15a>
 8005d08:	e062      	b.n	8005dd0 <HAL_TIM_ConfigClockSource+0x16c>
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	6818      	ldr	r0, [r3, #0]
 8005d0e:	683b      	ldr	r3, [r7, #0]
 8005d10:	6899      	ldr	r1, [r3, #8]
 8005d12:	683b      	ldr	r3, [r7, #0]
 8005d14:	685a      	ldr	r2, [r3, #4]
 8005d16:	683b      	ldr	r3, [r7, #0]
 8005d18:	68db      	ldr	r3, [r3, #12]
 8005d1a:	f000 fb5d 	bl	80063d8 <TIM_ETR_SetConfig>
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	689b      	ldr	r3, [r3, #8]
 8005d24:	60bb      	str	r3, [r7, #8]
 8005d26:	68bb      	ldr	r3, [r7, #8]
 8005d28:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8005d2c:	60bb      	str	r3, [r7, #8]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	68ba      	ldr	r2, [r7, #8]
 8005d34:	609a      	str	r2, [r3, #8]
 8005d36:	e04f      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	6818      	ldr	r0, [r3, #0]
 8005d3c:	683b      	ldr	r3, [r7, #0]
 8005d3e:	6899      	ldr	r1, [r3, #8]
 8005d40:	683b      	ldr	r3, [r7, #0]
 8005d42:	685a      	ldr	r2, [r3, #4]
 8005d44:	683b      	ldr	r3, [r7, #0]
 8005d46:	68db      	ldr	r3, [r3, #12]
 8005d48:	f000 fb46 	bl	80063d8 <TIM_ETR_SetConfig>
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	689a      	ldr	r2, [r3, #8]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005d5a:	609a      	str	r2, [r3, #8]
 8005d5c:	e03c      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	6818      	ldr	r0, [r3, #0]
 8005d62:	683b      	ldr	r3, [r7, #0]
 8005d64:	6859      	ldr	r1, [r3, #4]
 8005d66:	683b      	ldr	r3, [r7, #0]
 8005d68:	68db      	ldr	r3, [r3, #12]
 8005d6a:	461a      	mov	r2, r3
 8005d6c:	f000 faba 	bl	80062e4 <TIM_TI1_ConfigInputStage>
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	2150      	movs	r1, #80	; 0x50
 8005d76:	4618      	mov	r0, r3
 8005d78:	f000 fb13 	bl	80063a2 <TIM_ITRx_SetConfig>
 8005d7c:	e02c      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	6818      	ldr	r0, [r3, #0]
 8005d82:	683b      	ldr	r3, [r7, #0]
 8005d84:	6859      	ldr	r1, [r3, #4]
 8005d86:	683b      	ldr	r3, [r7, #0]
 8005d88:	68db      	ldr	r3, [r3, #12]
 8005d8a:	461a      	mov	r2, r3
 8005d8c:	f000 fad9 	bl	8006342 <TIM_TI2_ConfigInputStage>
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	2160      	movs	r1, #96	; 0x60
 8005d96:	4618      	mov	r0, r3
 8005d98:	f000 fb03 	bl	80063a2 <TIM_ITRx_SetConfig>
 8005d9c:	e01c      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	6818      	ldr	r0, [r3, #0]
 8005da2:	683b      	ldr	r3, [r7, #0]
 8005da4:	6859      	ldr	r1, [r3, #4]
 8005da6:	683b      	ldr	r3, [r7, #0]
 8005da8:	68db      	ldr	r3, [r3, #12]
 8005daa:	461a      	mov	r2, r3
 8005dac:	f000 fa9a 	bl	80062e4 <TIM_TI1_ConfigInputStage>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	2140      	movs	r1, #64	; 0x40
 8005db6:	4618      	mov	r0, r3
 8005db8:	f000 faf3 	bl	80063a2 <TIM_ITRx_SetConfig>
 8005dbc:	e00c      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	681a      	ldr	r2, [r3, #0]
 8005dc2:	683b      	ldr	r3, [r7, #0]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	4619      	mov	r1, r3
 8005dc8:	4610      	mov	r0, r2
 8005dca:	f000 faea 	bl	80063a2 <TIM_ITRx_SetConfig>
 8005dce:	e003      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005dd0:	2301      	movs	r3, #1
 8005dd2:	73fb      	strb	r3, [r7, #15]
 8005dd4:	e000      	b.n	8005dd8 <HAL_TIM_ConfigClockSource+0x174>
 8005dd6:	bf00      	nop
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	2201      	movs	r2, #1
 8005ddc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005de0:	687b      	ldr	r3, [r7, #4]
 8005de2:	2200      	movs	r2, #0
 8005de4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005de8:	7bfb      	ldrb	r3, [r7, #15]
 8005dea:	4618      	mov	r0, r3
 8005dec:	3710      	adds	r7, #16
 8005dee:	46bd      	mov	sp, r7
 8005df0:	bd80      	pop	{r7, pc}

08005df2 <HAL_TIM_OC_DelayElapsedCallback>:
 8005df2:	b480      	push	{r7}
 8005df4:	b083      	sub	sp, #12
 8005df6:	af00      	add	r7, sp, #0
 8005df8:	6078      	str	r0, [r7, #4]
 8005dfa:	bf00      	nop
 8005dfc:	370c      	adds	r7, #12
 8005dfe:	46bd      	mov	sp, r7
 8005e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e04:	4770      	bx	lr

08005e06 <HAL_TIM_IC_CaptureCallback>:
 8005e06:	b480      	push	{r7}
 8005e08:	b083      	sub	sp, #12
 8005e0a:	af00      	add	r7, sp, #0
 8005e0c:	6078      	str	r0, [r7, #4]
 8005e0e:	bf00      	nop
 8005e10:	370c      	adds	r7, #12
 8005e12:	46bd      	mov	sp, r7
 8005e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e18:	4770      	bx	lr

08005e1a <HAL_TIM_PWM_PulseFinishedCallback>:
 8005e1a:	b480      	push	{r7}
 8005e1c:	b083      	sub	sp, #12
 8005e1e:	af00      	add	r7, sp, #0
 8005e20:	6078      	str	r0, [r7, #4]
 8005e22:	bf00      	nop
 8005e24:	370c      	adds	r7, #12
 8005e26:	46bd      	mov	sp, r7
 8005e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e2c:	4770      	bx	lr

08005e2e <HAL_TIM_TriggerCallback>:
 8005e2e:	b480      	push	{r7}
 8005e30:	b083      	sub	sp, #12
 8005e32:	af00      	add	r7, sp, #0
 8005e34:	6078      	str	r0, [r7, #4]
 8005e36:	bf00      	nop
 8005e38:	370c      	adds	r7, #12
 8005e3a:	46bd      	mov	sp, r7
 8005e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e40:	4770      	bx	lr
	...

08005e44 <TIM_Base_SetConfig>:
 8005e44:	b480      	push	{r7}
 8005e46:	b085      	sub	sp, #20
 8005e48:	af00      	add	r7, sp, #0
 8005e4a:	6078      	str	r0, [r7, #4]
 8005e4c:	6039      	str	r1, [r7, #0]
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	60fb      	str	r3, [r7, #12]
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	4a40      	ldr	r2, [pc, #256]	; (8005f58 <TIM_Base_SetConfig+0x114>)
 8005e58:	4293      	cmp	r3, r2
 8005e5a:	d013      	beq.n	8005e84 <TIM_Base_SetConfig+0x40>
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005e62:	d00f      	beq.n	8005e84 <TIM_Base_SetConfig+0x40>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	4a3d      	ldr	r2, [pc, #244]	; (8005f5c <TIM_Base_SetConfig+0x118>)
 8005e68:	4293      	cmp	r3, r2
 8005e6a:	d00b      	beq.n	8005e84 <TIM_Base_SetConfig+0x40>
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	4a3c      	ldr	r2, [pc, #240]	; (8005f60 <TIM_Base_SetConfig+0x11c>)
 8005e70:	4293      	cmp	r3, r2
 8005e72:	d007      	beq.n	8005e84 <TIM_Base_SetConfig+0x40>
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	4a3b      	ldr	r2, [pc, #236]	; (8005f64 <TIM_Base_SetConfig+0x120>)
 8005e78:	4293      	cmp	r3, r2
 8005e7a:	d003      	beq.n	8005e84 <TIM_Base_SetConfig+0x40>
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	4a3a      	ldr	r2, [pc, #232]	; (8005f68 <TIM_Base_SetConfig+0x124>)
 8005e80:	4293      	cmp	r3, r2
 8005e82:	d108      	bne.n	8005e96 <TIM_Base_SetConfig+0x52>
 8005e84:	68fb      	ldr	r3, [r7, #12]
 8005e86:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005e8a:	60fb      	str	r3, [r7, #12]
 8005e8c:	683b      	ldr	r3, [r7, #0]
 8005e8e:	685b      	ldr	r3, [r3, #4]
 8005e90:	68fa      	ldr	r2, [r7, #12]
 8005e92:	4313      	orrs	r3, r2
 8005e94:	60fb      	str	r3, [r7, #12]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	4a2f      	ldr	r2, [pc, #188]	; (8005f58 <TIM_Base_SetConfig+0x114>)
 8005e9a:	4293      	cmp	r3, r2
 8005e9c:	d02b      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005ea4:	d027      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	4a2c      	ldr	r2, [pc, #176]	; (8005f5c <TIM_Base_SetConfig+0x118>)
 8005eaa:	4293      	cmp	r3, r2
 8005eac:	d023      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	4a2b      	ldr	r2, [pc, #172]	; (8005f60 <TIM_Base_SetConfig+0x11c>)
 8005eb2:	4293      	cmp	r3, r2
 8005eb4:	d01f      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005eb6:	687b      	ldr	r3, [r7, #4]
 8005eb8:	4a2a      	ldr	r2, [pc, #168]	; (8005f64 <TIM_Base_SetConfig+0x120>)
 8005eba:	4293      	cmp	r3, r2
 8005ebc:	d01b      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	4a29      	ldr	r2, [pc, #164]	; (8005f68 <TIM_Base_SetConfig+0x124>)
 8005ec2:	4293      	cmp	r3, r2
 8005ec4:	d017      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	4a28      	ldr	r2, [pc, #160]	; (8005f6c <TIM_Base_SetConfig+0x128>)
 8005eca:	4293      	cmp	r3, r2
 8005ecc:	d013      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	4a27      	ldr	r2, [pc, #156]	; (8005f70 <TIM_Base_SetConfig+0x12c>)
 8005ed2:	4293      	cmp	r3, r2
 8005ed4:	d00f      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ed6:	687b      	ldr	r3, [r7, #4]
 8005ed8:	4a26      	ldr	r2, [pc, #152]	; (8005f74 <TIM_Base_SetConfig+0x130>)
 8005eda:	4293      	cmp	r3, r2
 8005edc:	d00b      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	4a25      	ldr	r2, [pc, #148]	; (8005f78 <TIM_Base_SetConfig+0x134>)
 8005ee2:	4293      	cmp	r3, r2
 8005ee4:	d007      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	4a24      	ldr	r2, [pc, #144]	; (8005f7c <TIM_Base_SetConfig+0x138>)
 8005eea:	4293      	cmp	r3, r2
 8005eec:	d003      	beq.n	8005ef6 <TIM_Base_SetConfig+0xb2>
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	4a23      	ldr	r2, [pc, #140]	; (8005f80 <TIM_Base_SetConfig+0x13c>)
 8005ef2:	4293      	cmp	r3, r2
 8005ef4:	d108      	bne.n	8005f08 <TIM_Base_SetConfig+0xc4>
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005efc:	60fb      	str	r3, [r7, #12]
 8005efe:	683b      	ldr	r3, [r7, #0]
 8005f00:	68db      	ldr	r3, [r3, #12]
 8005f02:	68fa      	ldr	r2, [r7, #12]
 8005f04:	4313      	orrs	r3, r2
 8005f06:	60fb      	str	r3, [r7, #12]
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8005f0e:	683b      	ldr	r3, [r7, #0]
 8005f10:	695b      	ldr	r3, [r3, #20]
 8005f12:	4313      	orrs	r3, r2
 8005f14:	60fb      	str	r3, [r7, #12]
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	68fa      	ldr	r2, [r7, #12]
 8005f1a:	601a      	str	r2, [r3, #0]
 8005f1c:	683b      	ldr	r3, [r7, #0]
 8005f1e:	689a      	ldr	r2, [r3, #8]
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	62da      	str	r2, [r3, #44]	; 0x2c
 8005f24:	683b      	ldr	r3, [r7, #0]
 8005f26:	681a      	ldr	r2, [r3, #0]
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	629a      	str	r2, [r3, #40]	; 0x28
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	4a0a      	ldr	r2, [pc, #40]	; (8005f58 <TIM_Base_SetConfig+0x114>)
 8005f30:	4293      	cmp	r3, r2
 8005f32:	d003      	beq.n	8005f3c <TIM_Base_SetConfig+0xf8>
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	4a0c      	ldr	r2, [pc, #48]	; (8005f68 <TIM_Base_SetConfig+0x124>)
 8005f38:	4293      	cmp	r3, r2
 8005f3a:	d103      	bne.n	8005f44 <TIM_Base_SetConfig+0x100>
 8005f3c:	683b      	ldr	r3, [r7, #0]
 8005f3e:	691a      	ldr	r2, [r3, #16]
 8005f40:	687b      	ldr	r3, [r7, #4]
 8005f42:	631a      	str	r2, [r3, #48]	; 0x30
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	2201      	movs	r2, #1
 8005f48:	615a      	str	r2, [r3, #20]
 8005f4a:	bf00      	nop
 8005f4c:	3714      	adds	r7, #20
 8005f4e:	46bd      	mov	sp, r7
 8005f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f54:	4770      	bx	lr
 8005f56:	bf00      	nop
 8005f58:	40010000 	.word	0x40010000
 8005f5c:	40000400 	.word	0x40000400
 8005f60:	40000800 	.word	0x40000800
 8005f64:	40000c00 	.word	0x40000c00
 8005f68:	40010400 	.word	0x40010400
 8005f6c:	40014000 	.word	0x40014000
 8005f70:	40014400 	.word	0x40014400
 8005f74:	40014800 	.word	0x40014800
 8005f78:	40001800 	.word	0x40001800
 8005f7c:	40001c00 	.word	0x40001c00
 8005f80:	40002000 	.word	0x40002000

08005f84 <TIM_OC1_SetConfig>:
 8005f84:	b480      	push	{r7}
 8005f86:	b087      	sub	sp, #28
 8005f88:	af00      	add	r7, sp, #0
 8005f8a:	6078      	str	r0, [r7, #4]
 8005f8c:	6039      	str	r1, [r7, #0]
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	6a1b      	ldr	r3, [r3, #32]
 8005f92:	f023 0201 	bic.w	r2, r3, #1
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	621a      	str	r2, [r3, #32]
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	6a1b      	ldr	r3, [r3, #32]
 8005f9e:	617b      	str	r3, [r7, #20]
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	685b      	ldr	r3, [r3, #4]
 8005fa4:	613b      	str	r3, [r7, #16]
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	699b      	ldr	r3, [r3, #24]
 8005faa:	60fb      	str	r3, [r7, #12]
 8005fac:	68fb      	ldr	r3, [r7, #12]
 8005fae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005fb2:	60fb      	str	r3, [r7, #12]
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	f023 0303 	bic.w	r3, r3, #3
 8005fba:	60fb      	str	r3, [r7, #12]
 8005fbc:	683b      	ldr	r3, [r7, #0]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	68fa      	ldr	r2, [r7, #12]
 8005fc2:	4313      	orrs	r3, r2
 8005fc4:	60fb      	str	r3, [r7, #12]
 8005fc6:	697b      	ldr	r3, [r7, #20]
 8005fc8:	f023 0302 	bic.w	r3, r3, #2
 8005fcc:	617b      	str	r3, [r7, #20]
 8005fce:	683b      	ldr	r3, [r7, #0]
 8005fd0:	689b      	ldr	r3, [r3, #8]
 8005fd2:	697a      	ldr	r2, [r7, #20]
 8005fd4:	4313      	orrs	r3, r2
 8005fd6:	617b      	str	r3, [r7, #20]
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	4a20      	ldr	r2, [pc, #128]	; (800605c <TIM_OC1_SetConfig+0xd8>)
 8005fdc:	4293      	cmp	r3, r2
 8005fde:	d003      	beq.n	8005fe8 <TIM_OC1_SetConfig+0x64>
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	4a1f      	ldr	r2, [pc, #124]	; (8006060 <TIM_OC1_SetConfig+0xdc>)
 8005fe4:	4293      	cmp	r3, r2
 8005fe6:	d10c      	bne.n	8006002 <TIM_OC1_SetConfig+0x7e>
 8005fe8:	697b      	ldr	r3, [r7, #20]
 8005fea:	f023 0308 	bic.w	r3, r3, #8
 8005fee:	617b      	str	r3, [r7, #20]
 8005ff0:	683b      	ldr	r3, [r7, #0]
 8005ff2:	68db      	ldr	r3, [r3, #12]
 8005ff4:	697a      	ldr	r2, [r7, #20]
 8005ff6:	4313      	orrs	r3, r2
 8005ff8:	617b      	str	r3, [r7, #20]
 8005ffa:	697b      	ldr	r3, [r7, #20]
 8005ffc:	f023 0304 	bic.w	r3, r3, #4
 8006000:	617b      	str	r3, [r7, #20]
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	4a15      	ldr	r2, [pc, #84]	; (800605c <TIM_OC1_SetConfig+0xd8>)
 8006006:	4293      	cmp	r3, r2
 8006008:	d003      	beq.n	8006012 <TIM_OC1_SetConfig+0x8e>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	4a14      	ldr	r2, [pc, #80]	; (8006060 <TIM_OC1_SetConfig+0xdc>)
 800600e:	4293      	cmp	r3, r2
 8006010:	d111      	bne.n	8006036 <TIM_OC1_SetConfig+0xb2>
 8006012:	693b      	ldr	r3, [r7, #16]
 8006014:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006018:	613b      	str	r3, [r7, #16]
 800601a:	693b      	ldr	r3, [r7, #16]
 800601c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006020:	613b      	str	r3, [r7, #16]
 8006022:	683b      	ldr	r3, [r7, #0]
 8006024:	695b      	ldr	r3, [r3, #20]
 8006026:	693a      	ldr	r2, [r7, #16]
 8006028:	4313      	orrs	r3, r2
 800602a:	613b      	str	r3, [r7, #16]
 800602c:	683b      	ldr	r3, [r7, #0]
 800602e:	699b      	ldr	r3, [r3, #24]
 8006030:	693a      	ldr	r2, [r7, #16]
 8006032:	4313      	orrs	r3, r2
 8006034:	613b      	str	r3, [r7, #16]
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	693a      	ldr	r2, [r7, #16]
 800603a:	605a      	str	r2, [r3, #4]
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	68fa      	ldr	r2, [r7, #12]
 8006040:	619a      	str	r2, [r3, #24]
 8006042:	683b      	ldr	r3, [r7, #0]
 8006044:	685a      	ldr	r2, [r3, #4]
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	635a      	str	r2, [r3, #52]	; 0x34
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	697a      	ldr	r2, [r7, #20]
 800604e:	621a      	str	r2, [r3, #32]
 8006050:	bf00      	nop
 8006052:	371c      	adds	r7, #28
 8006054:	46bd      	mov	sp, r7
 8006056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800605a:	4770      	bx	lr
 800605c:	40010000 	.word	0x40010000
 8006060:	40010400 	.word	0x40010400

08006064 <TIM_OC2_SetConfig>:
 8006064:	b480      	push	{r7}
 8006066:	b087      	sub	sp, #28
 8006068:	af00      	add	r7, sp, #0
 800606a:	6078      	str	r0, [r7, #4]
 800606c:	6039      	str	r1, [r7, #0]
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	6a1b      	ldr	r3, [r3, #32]
 8006072:	f023 0210 	bic.w	r2, r3, #16
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	621a      	str	r2, [r3, #32]
 800607a:	687b      	ldr	r3, [r7, #4]
 800607c:	6a1b      	ldr	r3, [r3, #32]
 800607e:	617b      	str	r3, [r7, #20]
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	685b      	ldr	r3, [r3, #4]
 8006084:	613b      	str	r3, [r7, #16]
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	699b      	ldr	r3, [r3, #24]
 800608a:	60fb      	str	r3, [r7, #12]
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006092:	60fb      	str	r3, [r7, #12]
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	683b      	ldr	r3, [r7, #0]
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	021b      	lsls	r3, r3, #8
 80060a2:	68fa      	ldr	r2, [r7, #12]
 80060a4:	4313      	orrs	r3, r2
 80060a6:	60fb      	str	r3, [r7, #12]
 80060a8:	697b      	ldr	r3, [r7, #20]
 80060aa:	f023 0320 	bic.w	r3, r3, #32
 80060ae:	617b      	str	r3, [r7, #20]
 80060b0:	683b      	ldr	r3, [r7, #0]
 80060b2:	689b      	ldr	r3, [r3, #8]
 80060b4:	011b      	lsls	r3, r3, #4
 80060b6:	697a      	ldr	r2, [r7, #20]
 80060b8:	4313      	orrs	r3, r2
 80060ba:	617b      	str	r3, [r7, #20]
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	4a22      	ldr	r2, [pc, #136]	; (8006148 <TIM_OC2_SetConfig+0xe4>)
 80060c0:	4293      	cmp	r3, r2
 80060c2:	d003      	beq.n	80060cc <TIM_OC2_SetConfig+0x68>
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	4a21      	ldr	r2, [pc, #132]	; (800614c <TIM_OC2_SetConfig+0xe8>)
 80060c8:	4293      	cmp	r3, r2
 80060ca:	d10d      	bne.n	80060e8 <TIM_OC2_SetConfig+0x84>
 80060cc:	697b      	ldr	r3, [r7, #20]
 80060ce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80060d2:	617b      	str	r3, [r7, #20]
 80060d4:	683b      	ldr	r3, [r7, #0]
 80060d6:	68db      	ldr	r3, [r3, #12]
 80060d8:	011b      	lsls	r3, r3, #4
 80060da:	697a      	ldr	r2, [r7, #20]
 80060dc:	4313      	orrs	r3, r2
 80060de:	617b      	str	r3, [r7, #20]
 80060e0:	697b      	ldr	r3, [r7, #20]
 80060e2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80060e6:	617b      	str	r3, [r7, #20]
 80060e8:	687b      	ldr	r3, [r7, #4]
 80060ea:	4a17      	ldr	r2, [pc, #92]	; (8006148 <TIM_OC2_SetConfig+0xe4>)
 80060ec:	4293      	cmp	r3, r2
 80060ee:	d003      	beq.n	80060f8 <TIM_OC2_SetConfig+0x94>
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	4a16      	ldr	r2, [pc, #88]	; (800614c <TIM_OC2_SetConfig+0xe8>)
 80060f4:	4293      	cmp	r3, r2
 80060f6:	d113      	bne.n	8006120 <TIM_OC2_SetConfig+0xbc>
 80060f8:	693b      	ldr	r3, [r7, #16]
 80060fa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80060fe:	613b      	str	r3, [r7, #16]
 8006100:	693b      	ldr	r3, [r7, #16]
 8006102:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006106:	613b      	str	r3, [r7, #16]
 8006108:	683b      	ldr	r3, [r7, #0]
 800610a:	695b      	ldr	r3, [r3, #20]
 800610c:	009b      	lsls	r3, r3, #2
 800610e:	693a      	ldr	r2, [r7, #16]
 8006110:	4313      	orrs	r3, r2
 8006112:	613b      	str	r3, [r7, #16]
 8006114:	683b      	ldr	r3, [r7, #0]
 8006116:	699b      	ldr	r3, [r3, #24]
 8006118:	009b      	lsls	r3, r3, #2
 800611a:	693a      	ldr	r2, [r7, #16]
 800611c:	4313      	orrs	r3, r2
 800611e:	613b      	str	r3, [r7, #16]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	693a      	ldr	r2, [r7, #16]
 8006124:	605a      	str	r2, [r3, #4]
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	68fa      	ldr	r2, [r7, #12]
 800612a:	619a      	str	r2, [r3, #24]
 800612c:	683b      	ldr	r3, [r7, #0]
 800612e:	685a      	ldr	r2, [r3, #4]
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	639a      	str	r2, [r3, #56]	; 0x38
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	697a      	ldr	r2, [r7, #20]
 8006138:	621a      	str	r2, [r3, #32]
 800613a:	bf00      	nop
 800613c:	371c      	adds	r7, #28
 800613e:	46bd      	mov	sp, r7
 8006140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006144:	4770      	bx	lr
 8006146:	bf00      	nop
 8006148:	40010000 	.word	0x40010000
 800614c:	40010400 	.word	0x40010400

08006150 <TIM_OC3_SetConfig>:
 8006150:	b480      	push	{r7}
 8006152:	b087      	sub	sp, #28
 8006154:	af00      	add	r7, sp, #0
 8006156:	6078      	str	r0, [r7, #4]
 8006158:	6039      	str	r1, [r7, #0]
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	6a1b      	ldr	r3, [r3, #32]
 800615e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006162:	687b      	ldr	r3, [r7, #4]
 8006164:	621a      	str	r2, [r3, #32]
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	6a1b      	ldr	r3, [r3, #32]
 800616a:	617b      	str	r3, [r7, #20]
 800616c:	687b      	ldr	r3, [r7, #4]
 800616e:	685b      	ldr	r3, [r3, #4]
 8006170:	613b      	str	r3, [r7, #16]
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	69db      	ldr	r3, [r3, #28]
 8006176:	60fb      	str	r3, [r7, #12]
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800617e:	60fb      	str	r3, [r7, #12]
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	f023 0303 	bic.w	r3, r3, #3
 8006186:	60fb      	str	r3, [r7, #12]
 8006188:	683b      	ldr	r3, [r7, #0]
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	68fa      	ldr	r2, [r7, #12]
 800618e:	4313      	orrs	r3, r2
 8006190:	60fb      	str	r3, [r7, #12]
 8006192:	697b      	ldr	r3, [r7, #20]
 8006194:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006198:	617b      	str	r3, [r7, #20]
 800619a:	683b      	ldr	r3, [r7, #0]
 800619c:	689b      	ldr	r3, [r3, #8]
 800619e:	021b      	lsls	r3, r3, #8
 80061a0:	697a      	ldr	r2, [r7, #20]
 80061a2:	4313      	orrs	r3, r2
 80061a4:	617b      	str	r3, [r7, #20]
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	4a21      	ldr	r2, [pc, #132]	; (8006230 <TIM_OC3_SetConfig+0xe0>)
 80061aa:	4293      	cmp	r3, r2
 80061ac:	d003      	beq.n	80061b6 <TIM_OC3_SetConfig+0x66>
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	4a20      	ldr	r2, [pc, #128]	; (8006234 <TIM_OC3_SetConfig+0xe4>)
 80061b2:	4293      	cmp	r3, r2
 80061b4:	d10d      	bne.n	80061d2 <TIM_OC3_SetConfig+0x82>
 80061b6:	697b      	ldr	r3, [r7, #20]
 80061b8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80061bc:	617b      	str	r3, [r7, #20]
 80061be:	683b      	ldr	r3, [r7, #0]
 80061c0:	68db      	ldr	r3, [r3, #12]
 80061c2:	021b      	lsls	r3, r3, #8
 80061c4:	697a      	ldr	r2, [r7, #20]
 80061c6:	4313      	orrs	r3, r2
 80061c8:	617b      	str	r3, [r7, #20]
 80061ca:	697b      	ldr	r3, [r7, #20]
 80061cc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80061d0:	617b      	str	r3, [r7, #20]
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	4a16      	ldr	r2, [pc, #88]	; (8006230 <TIM_OC3_SetConfig+0xe0>)
 80061d6:	4293      	cmp	r3, r2
 80061d8:	d003      	beq.n	80061e2 <TIM_OC3_SetConfig+0x92>
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	4a15      	ldr	r2, [pc, #84]	; (8006234 <TIM_OC3_SetConfig+0xe4>)
 80061de:	4293      	cmp	r3, r2
 80061e0:	d113      	bne.n	800620a <TIM_OC3_SetConfig+0xba>
 80061e2:	693b      	ldr	r3, [r7, #16]
 80061e4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80061e8:	613b      	str	r3, [r7, #16]
 80061ea:	693b      	ldr	r3, [r7, #16]
 80061ec:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80061f0:	613b      	str	r3, [r7, #16]
 80061f2:	683b      	ldr	r3, [r7, #0]
 80061f4:	695b      	ldr	r3, [r3, #20]
 80061f6:	011b      	lsls	r3, r3, #4
 80061f8:	693a      	ldr	r2, [r7, #16]
 80061fa:	4313      	orrs	r3, r2
 80061fc:	613b      	str	r3, [r7, #16]
 80061fe:	683b      	ldr	r3, [r7, #0]
 8006200:	699b      	ldr	r3, [r3, #24]
 8006202:	011b      	lsls	r3, r3, #4
 8006204:	693a      	ldr	r2, [r7, #16]
 8006206:	4313      	orrs	r3, r2
 8006208:	613b      	str	r3, [r7, #16]
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	693a      	ldr	r2, [r7, #16]
 800620e:	605a      	str	r2, [r3, #4]
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	68fa      	ldr	r2, [r7, #12]
 8006214:	61da      	str	r2, [r3, #28]
 8006216:	683b      	ldr	r3, [r7, #0]
 8006218:	685a      	ldr	r2, [r3, #4]
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	63da      	str	r2, [r3, #60]	; 0x3c
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	697a      	ldr	r2, [r7, #20]
 8006222:	621a      	str	r2, [r3, #32]
 8006224:	bf00      	nop
 8006226:	371c      	adds	r7, #28
 8006228:	46bd      	mov	sp, r7
 800622a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800622e:	4770      	bx	lr
 8006230:	40010000 	.word	0x40010000
 8006234:	40010400 	.word	0x40010400

08006238 <TIM_OC4_SetConfig>:
 8006238:	b480      	push	{r7}
 800623a:	b087      	sub	sp, #28
 800623c:	af00      	add	r7, sp, #0
 800623e:	6078      	str	r0, [r7, #4]
 8006240:	6039      	str	r1, [r7, #0]
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	6a1b      	ldr	r3, [r3, #32]
 8006246:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	621a      	str	r2, [r3, #32]
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	6a1b      	ldr	r3, [r3, #32]
 8006252:	613b      	str	r3, [r7, #16]
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	685b      	ldr	r3, [r3, #4]
 8006258:	617b      	str	r3, [r7, #20]
 800625a:	687b      	ldr	r3, [r7, #4]
 800625c:	69db      	ldr	r3, [r3, #28]
 800625e:	60fb      	str	r3, [r7, #12]
 8006260:	68fb      	ldr	r3, [r7, #12]
 8006262:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006266:	60fb      	str	r3, [r7, #12]
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800626e:	60fb      	str	r3, [r7, #12]
 8006270:	683b      	ldr	r3, [r7, #0]
 8006272:	681b      	ldr	r3, [r3, #0]
 8006274:	021b      	lsls	r3, r3, #8
 8006276:	68fa      	ldr	r2, [r7, #12]
 8006278:	4313      	orrs	r3, r2
 800627a:	60fb      	str	r3, [r7, #12]
 800627c:	693b      	ldr	r3, [r7, #16]
 800627e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006282:	613b      	str	r3, [r7, #16]
 8006284:	683b      	ldr	r3, [r7, #0]
 8006286:	689b      	ldr	r3, [r3, #8]
 8006288:	031b      	lsls	r3, r3, #12
 800628a:	693a      	ldr	r2, [r7, #16]
 800628c:	4313      	orrs	r3, r2
 800628e:	613b      	str	r3, [r7, #16]
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	4a12      	ldr	r2, [pc, #72]	; (80062dc <TIM_OC4_SetConfig+0xa4>)
 8006294:	4293      	cmp	r3, r2
 8006296:	d003      	beq.n	80062a0 <TIM_OC4_SetConfig+0x68>
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	4a11      	ldr	r2, [pc, #68]	; (80062e0 <TIM_OC4_SetConfig+0xa8>)
 800629c:	4293      	cmp	r3, r2
 800629e:	d109      	bne.n	80062b4 <TIM_OC4_SetConfig+0x7c>
 80062a0:	697b      	ldr	r3, [r7, #20]
 80062a2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80062a6:	617b      	str	r3, [r7, #20]
 80062a8:	683b      	ldr	r3, [r7, #0]
 80062aa:	695b      	ldr	r3, [r3, #20]
 80062ac:	019b      	lsls	r3, r3, #6
 80062ae:	697a      	ldr	r2, [r7, #20]
 80062b0:	4313      	orrs	r3, r2
 80062b2:	617b      	str	r3, [r7, #20]
 80062b4:	687b      	ldr	r3, [r7, #4]
 80062b6:	697a      	ldr	r2, [r7, #20]
 80062b8:	605a      	str	r2, [r3, #4]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	68fa      	ldr	r2, [r7, #12]
 80062be:	61da      	str	r2, [r3, #28]
 80062c0:	683b      	ldr	r3, [r7, #0]
 80062c2:	685a      	ldr	r2, [r3, #4]
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	641a      	str	r2, [r3, #64]	; 0x40
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	693a      	ldr	r2, [r7, #16]
 80062cc:	621a      	str	r2, [r3, #32]
 80062ce:	bf00      	nop
 80062d0:	371c      	adds	r7, #28
 80062d2:	46bd      	mov	sp, r7
 80062d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062d8:	4770      	bx	lr
 80062da:	bf00      	nop
 80062dc:	40010000 	.word	0x40010000
 80062e0:	40010400 	.word	0x40010400

080062e4 <TIM_TI1_ConfigInputStage>:
 80062e4:	b480      	push	{r7}
 80062e6:	b087      	sub	sp, #28
 80062e8:	af00      	add	r7, sp, #0
 80062ea:	60f8      	str	r0, [r7, #12]
 80062ec:	60b9      	str	r1, [r7, #8]
 80062ee:	607a      	str	r2, [r7, #4]
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	6a1b      	ldr	r3, [r3, #32]
 80062f4:	617b      	str	r3, [r7, #20]
 80062f6:	68fb      	ldr	r3, [r7, #12]
 80062f8:	6a1b      	ldr	r3, [r3, #32]
 80062fa:	f023 0201 	bic.w	r2, r3, #1
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	621a      	str	r2, [r3, #32]
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	699b      	ldr	r3, [r3, #24]
 8006306:	613b      	str	r3, [r7, #16]
 8006308:	693b      	ldr	r3, [r7, #16]
 800630a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800630e:	613b      	str	r3, [r7, #16]
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	011b      	lsls	r3, r3, #4
 8006314:	693a      	ldr	r2, [r7, #16]
 8006316:	4313      	orrs	r3, r2
 8006318:	613b      	str	r3, [r7, #16]
 800631a:	697b      	ldr	r3, [r7, #20]
 800631c:	f023 030a 	bic.w	r3, r3, #10
 8006320:	617b      	str	r3, [r7, #20]
 8006322:	697a      	ldr	r2, [r7, #20]
 8006324:	68bb      	ldr	r3, [r7, #8]
 8006326:	4313      	orrs	r3, r2
 8006328:	617b      	str	r3, [r7, #20]
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	693a      	ldr	r2, [r7, #16]
 800632e:	619a      	str	r2, [r3, #24]
 8006330:	68fb      	ldr	r3, [r7, #12]
 8006332:	697a      	ldr	r2, [r7, #20]
 8006334:	621a      	str	r2, [r3, #32]
 8006336:	bf00      	nop
 8006338:	371c      	adds	r7, #28
 800633a:	46bd      	mov	sp, r7
 800633c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006340:	4770      	bx	lr

08006342 <TIM_TI2_ConfigInputStage>:
 8006342:	b480      	push	{r7}
 8006344:	b087      	sub	sp, #28
 8006346:	af00      	add	r7, sp, #0
 8006348:	60f8      	str	r0, [r7, #12]
 800634a:	60b9      	str	r1, [r7, #8]
 800634c:	607a      	str	r2, [r7, #4]
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	6a1b      	ldr	r3, [r3, #32]
 8006352:	f023 0210 	bic.w	r2, r3, #16
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	621a      	str	r2, [r3, #32]
 800635a:	68fb      	ldr	r3, [r7, #12]
 800635c:	699b      	ldr	r3, [r3, #24]
 800635e:	617b      	str	r3, [r7, #20]
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	6a1b      	ldr	r3, [r3, #32]
 8006364:	613b      	str	r3, [r7, #16]
 8006366:	697b      	ldr	r3, [r7, #20]
 8006368:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800636c:	617b      	str	r3, [r7, #20]
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	031b      	lsls	r3, r3, #12
 8006372:	697a      	ldr	r2, [r7, #20]
 8006374:	4313      	orrs	r3, r2
 8006376:	617b      	str	r3, [r7, #20]
 8006378:	693b      	ldr	r3, [r7, #16]
 800637a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800637e:	613b      	str	r3, [r7, #16]
 8006380:	68bb      	ldr	r3, [r7, #8]
 8006382:	011b      	lsls	r3, r3, #4
 8006384:	693a      	ldr	r2, [r7, #16]
 8006386:	4313      	orrs	r3, r2
 8006388:	613b      	str	r3, [r7, #16]
 800638a:	68fb      	ldr	r3, [r7, #12]
 800638c:	697a      	ldr	r2, [r7, #20]
 800638e:	619a      	str	r2, [r3, #24]
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	693a      	ldr	r2, [r7, #16]
 8006394:	621a      	str	r2, [r3, #32]
 8006396:	bf00      	nop
 8006398:	371c      	adds	r7, #28
 800639a:	46bd      	mov	sp, r7
 800639c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063a0:	4770      	bx	lr

080063a2 <TIM_ITRx_SetConfig>:
 80063a2:	b480      	push	{r7}
 80063a4:	b085      	sub	sp, #20
 80063a6:	af00      	add	r7, sp, #0
 80063a8:	6078      	str	r0, [r7, #4]
 80063aa:	6039      	str	r1, [r7, #0]
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	689b      	ldr	r3, [r3, #8]
 80063b0:	60fb      	str	r3, [r7, #12]
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80063b8:	60fb      	str	r3, [r7, #12]
 80063ba:	683a      	ldr	r2, [r7, #0]
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	4313      	orrs	r3, r2
 80063c0:	f043 0307 	orr.w	r3, r3, #7
 80063c4:	60fb      	str	r3, [r7, #12]
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	68fa      	ldr	r2, [r7, #12]
 80063ca:	609a      	str	r2, [r3, #8]
 80063cc:	bf00      	nop
 80063ce:	3714      	adds	r7, #20
 80063d0:	46bd      	mov	sp, r7
 80063d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d6:	4770      	bx	lr

080063d8 <TIM_ETR_SetConfig>:
 80063d8:	b480      	push	{r7}
 80063da:	b087      	sub	sp, #28
 80063dc:	af00      	add	r7, sp, #0
 80063de:	60f8      	str	r0, [r7, #12]
 80063e0:	60b9      	str	r1, [r7, #8]
 80063e2:	607a      	str	r2, [r7, #4]
 80063e4:	603b      	str	r3, [r7, #0]
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	689b      	ldr	r3, [r3, #8]
 80063ea:	617b      	str	r3, [r7, #20]
 80063ec:	697b      	ldr	r3, [r7, #20]
 80063ee:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80063f2:	617b      	str	r3, [r7, #20]
 80063f4:	683b      	ldr	r3, [r7, #0]
 80063f6:	021a      	lsls	r2, r3, #8
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	431a      	orrs	r2, r3
 80063fc:	68bb      	ldr	r3, [r7, #8]
 80063fe:	4313      	orrs	r3, r2
 8006400:	697a      	ldr	r2, [r7, #20]
 8006402:	4313      	orrs	r3, r2
 8006404:	617b      	str	r3, [r7, #20]
 8006406:	68fb      	ldr	r3, [r7, #12]
 8006408:	697a      	ldr	r2, [r7, #20]
 800640a:	609a      	str	r2, [r3, #8]
 800640c:	bf00      	nop
 800640e:	371c      	adds	r7, #28
 8006410:	46bd      	mov	sp, r7
 8006412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006416:	4770      	bx	lr

08006418 <HAL_TIMEx_MasterConfigSynchronization>:
 8006418:	b480      	push	{r7}
 800641a:	b085      	sub	sp, #20
 800641c:	af00      	add	r7, sp, #0
 800641e:	6078      	str	r0, [r7, #4]
 8006420:	6039      	str	r1, [r7, #0]
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006428:	2b01      	cmp	r3, #1
 800642a:	d101      	bne.n	8006430 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800642c:	2302      	movs	r3, #2
 800642e:	e05a      	b.n	80064e6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006430:	687b      	ldr	r3, [r7, #4]
 8006432:	2201      	movs	r2, #1
 8006434:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	2202      	movs	r2, #2
 800643c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	685b      	ldr	r3, [r3, #4]
 8006446:	60fb      	str	r3, [r7, #12]
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	689b      	ldr	r3, [r3, #8]
 800644e:	60bb      	str	r3, [r7, #8]
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006456:	60fb      	str	r3, [r7, #12]
 8006458:	683b      	ldr	r3, [r7, #0]
 800645a:	681b      	ldr	r3, [r3, #0]
 800645c:	68fa      	ldr	r2, [r7, #12]
 800645e:	4313      	orrs	r3, r2
 8006460:	60fb      	str	r3, [r7, #12]
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	681b      	ldr	r3, [r3, #0]
 8006466:	68fa      	ldr	r2, [r7, #12]
 8006468:	605a      	str	r2, [r3, #4]
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	4a21      	ldr	r2, [pc, #132]	; (80064f4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006470:	4293      	cmp	r3, r2
 8006472:	d022      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800647c:	d01d      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	681b      	ldr	r3, [r3, #0]
 8006482:	4a1d      	ldr	r2, [pc, #116]	; (80064f8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006484:	4293      	cmp	r3, r2
 8006486:	d018      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	4a1b      	ldr	r2, [pc, #108]	; (80064fc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800648e:	4293      	cmp	r3, r2
 8006490:	d013      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	4a1a      	ldr	r2, [pc, #104]	; (8006500 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006498:	4293      	cmp	r3, r2
 800649a:	d00e      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	4a18      	ldr	r2, [pc, #96]	; (8006504 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80064a2:	4293      	cmp	r3, r2
 80064a4:	d009      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	4a17      	ldr	r2, [pc, #92]	; (8006508 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80064ac:	4293      	cmp	r3, r2
 80064ae:	d004      	beq.n	80064ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	4a15      	ldr	r2, [pc, #84]	; (800650c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80064b6:	4293      	cmp	r3, r2
 80064b8:	d10c      	bne.n	80064d4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80064ba:	68bb      	ldr	r3, [r7, #8]
 80064bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80064c0:	60bb      	str	r3, [r7, #8]
 80064c2:	683b      	ldr	r3, [r7, #0]
 80064c4:	685b      	ldr	r3, [r3, #4]
 80064c6:	68ba      	ldr	r2, [r7, #8]
 80064c8:	4313      	orrs	r3, r2
 80064ca:	60bb      	str	r3, [r7, #8]
 80064cc:	687b      	ldr	r3, [r7, #4]
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	68ba      	ldr	r2, [r7, #8]
 80064d2:	609a      	str	r2, [r3, #8]
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	2201      	movs	r2, #1
 80064d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	2200      	movs	r2, #0
 80064e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80064e4:	2300      	movs	r3, #0
 80064e6:	4618      	mov	r0, r3
 80064e8:	3714      	adds	r7, #20
 80064ea:	46bd      	mov	sp, r7
 80064ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064f0:	4770      	bx	lr
 80064f2:	bf00      	nop
 80064f4:	40010000 	.word	0x40010000
 80064f8:	40000400 	.word	0x40000400
 80064fc:	40000800 	.word	0x40000800
 8006500:	40000c00 	.word	0x40000c00
 8006504:	40010400 	.word	0x40010400
 8006508:	40014000 	.word	0x40014000
 800650c:	40001800 	.word	0x40001800

08006510 <HAL_TIMEx_CommutCallback>:
 8006510:	b480      	push	{r7}
 8006512:	b083      	sub	sp, #12
 8006514:	af00      	add	r7, sp, #0
 8006516:	6078      	str	r0, [r7, #4]
 8006518:	bf00      	nop
 800651a:	370c      	adds	r7, #12
 800651c:	46bd      	mov	sp, r7
 800651e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006522:	4770      	bx	lr

08006524 <HAL_TIMEx_BreakCallback>:
 8006524:	b480      	push	{r7}
 8006526:	b083      	sub	sp, #12
 8006528:	af00      	add	r7, sp, #0
 800652a:	6078      	str	r0, [r7, #4]
 800652c:	bf00      	nop
 800652e:	370c      	adds	r7, #12
 8006530:	46bd      	mov	sp, r7
 8006532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006536:	4770      	bx	lr

08006538 <HAL_UART_Init>:
 8006538:	b580      	push	{r7, lr}
 800653a:	b082      	sub	sp, #8
 800653c:	af00      	add	r7, sp, #0
 800653e:	6078      	str	r0, [r7, #4]
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	2b00      	cmp	r3, #0
 8006544:	d101      	bne.n	800654a <HAL_UART_Init+0x12>
 8006546:	2301      	movs	r3, #1
 8006548:	e03f      	b.n	80065ca <HAL_UART_Init+0x92>
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006550:	b2db      	uxtb	r3, r3
 8006552:	2b00      	cmp	r3, #0
 8006554:	d106      	bne.n	8006564 <HAL_UART_Init+0x2c>
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	2200      	movs	r2, #0
 800655a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800655e:	6878      	ldr	r0, [r7, #4]
 8006560:	f7fc fa9e 	bl	8002aa0 <HAL_UART_MspInit>
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	2224      	movs	r2, #36	; 0x24
 8006568:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	681b      	ldr	r3, [r3, #0]
 8006570:	68da      	ldr	r2, [r3, #12]
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	681b      	ldr	r3, [r3, #0]
 8006576:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800657a:	60da      	str	r2, [r3, #12]
 800657c:	6878      	ldr	r0, [r7, #4]
 800657e:	f000 fddb 	bl	8007138 <UART_SetConfig>
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	691a      	ldr	r2, [r3, #16]
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	681b      	ldr	r3, [r3, #0]
 800658c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006590:	611a      	str	r2, [r3, #16]
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	695a      	ldr	r2, [r3, #20]
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	681b      	ldr	r3, [r3, #0]
 800659c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80065a0:	615a      	str	r2, [r3, #20]
 80065a2:	687b      	ldr	r3, [r7, #4]
 80065a4:	681b      	ldr	r3, [r3, #0]
 80065a6:	68da      	ldr	r2, [r3, #12]
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80065b0:	60da      	str	r2, [r3, #12]
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	2200      	movs	r2, #0
 80065b6:	641a      	str	r2, [r3, #64]	; 0x40
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	2220      	movs	r2, #32
 80065bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	2220      	movs	r2, #32
 80065c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80065c8:	2300      	movs	r3, #0
 80065ca:	4618      	mov	r0, r3
 80065cc:	3708      	adds	r7, #8
 80065ce:	46bd      	mov	sp, r7
 80065d0:	bd80      	pop	{r7, pc}

080065d2 <HAL_UART_Transmit>:
 80065d2:	b580      	push	{r7, lr}
 80065d4:	b08a      	sub	sp, #40	; 0x28
 80065d6:	af02      	add	r7, sp, #8
 80065d8:	60f8      	str	r0, [r7, #12]
 80065da:	60b9      	str	r1, [r7, #8]
 80065dc:	603b      	str	r3, [r7, #0]
 80065de:	4613      	mov	r3, r2
 80065e0:	80fb      	strh	r3, [r7, #6]
 80065e2:	2300      	movs	r3, #0
 80065e4:	617b      	str	r3, [r7, #20]
 80065e6:	68fb      	ldr	r3, [r7, #12]
 80065e8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80065ec:	b2db      	uxtb	r3, r3
 80065ee:	2b20      	cmp	r3, #32
 80065f0:	d17c      	bne.n	80066ec <HAL_UART_Transmit+0x11a>
 80065f2:	68bb      	ldr	r3, [r7, #8]
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d002      	beq.n	80065fe <HAL_UART_Transmit+0x2c>
 80065f8:	88fb      	ldrh	r3, [r7, #6]
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d101      	bne.n	8006602 <HAL_UART_Transmit+0x30>
 80065fe:	2301      	movs	r3, #1
 8006600:	e075      	b.n	80066ee <HAL_UART_Transmit+0x11c>
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006608:	2b01      	cmp	r3, #1
 800660a:	d101      	bne.n	8006610 <HAL_UART_Transmit+0x3e>
 800660c:	2302      	movs	r3, #2
 800660e:	e06e      	b.n	80066ee <HAL_UART_Transmit+0x11c>
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	2201      	movs	r2, #1
 8006614:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006618:	68fb      	ldr	r3, [r7, #12]
 800661a:	2200      	movs	r2, #0
 800661c:	641a      	str	r2, [r3, #64]	; 0x40
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	2221      	movs	r2, #33	; 0x21
 8006622:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006626:	f7fc fb57 	bl	8002cd8 <HAL_GetTick>
 800662a:	6178      	str	r0, [r7, #20]
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	88fa      	ldrh	r2, [r7, #6]
 8006630:	849a      	strh	r2, [r3, #36]	; 0x24
 8006632:	68fb      	ldr	r3, [r7, #12]
 8006634:	88fa      	ldrh	r2, [r7, #6]
 8006636:	84da      	strh	r2, [r3, #38]	; 0x26
 8006638:	68fb      	ldr	r3, [r7, #12]
 800663a:	689b      	ldr	r3, [r3, #8]
 800663c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006640:	d108      	bne.n	8006654 <HAL_UART_Transmit+0x82>
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	691b      	ldr	r3, [r3, #16]
 8006646:	2b00      	cmp	r3, #0
 8006648:	d104      	bne.n	8006654 <HAL_UART_Transmit+0x82>
 800664a:	2300      	movs	r3, #0
 800664c:	61fb      	str	r3, [r7, #28]
 800664e:	68bb      	ldr	r3, [r7, #8]
 8006650:	61bb      	str	r3, [r7, #24]
 8006652:	e003      	b.n	800665c <HAL_UART_Transmit+0x8a>
 8006654:	68bb      	ldr	r3, [r7, #8]
 8006656:	61fb      	str	r3, [r7, #28]
 8006658:	2300      	movs	r3, #0
 800665a:	61bb      	str	r3, [r7, #24]
 800665c:	68fb      	ldr	r3, [r7, #12]
 800665e:	2200      	movs	r2, #0
 8006660:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006664:	e02a      	b.n	80066bc <HAL_UART_Transmit+0xea>
 8006666:	683b      	ldr	r3, [r7, #0]
 8006668:	9300      	str	r3, [sp, #0]
 800666a:	697b      	ldr	r3, [r7, #20]
 800666c:	2200      	movs	r2, #0
 800666e:	2180      	movs	r1, #128	; 0x80
 8006670:	68f8      	ldr	r0, [r7, #12]
 8006672:	f000 fb1f 	bl	8006cb4 <UART_WaitOnFlagUntilTimeout>
 8006676:	4603      	mov	r3, r0
 8006678:	2b00      	cmp	r3, #0
 800667a:	d001      	beq.n	8006680 <HAL_UART_Transmit+0xae>
 800667c:	2303      	movs	r3, #3
 800667e:	e036      	b.n	80066ee <HAL_UART_Transmit+0x11c>
 8006680:	69fb      	ldr	r3, [r7, #28]
 8006682:	2b00      	cmp	r3, #0
 8006684:	d10b      	bne.n	800669e <HAL_UART_Transmit+0xcc>
 8006686:	69bb      	ldr	r3, [r7, #24]
 8006688:	881b      	ldrh	r3, [r3, #0]
 800668a:	461a      	mov	r2, r3
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006694:	605a      	str	r2, [r3, #4]
 8006696:	69bb      	ldr	r3, [r7, #24]
 8006698:	3302      	adds	r3, #2
 800669a:	61bb      	str	r3, [r7, #24]
 800669c:	e007      	b.n	80066ae <HAL_UART_Transmit+0xdc>
 800669e:	69fb      	ldr	r3, [r7, #28]
 80066a0:	781a      	ldrb	r2, [r3, #0]
 80066a2:	68fb      	ldr	r3, [r7, #12]
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	605a      	str	r2, [r3, #4]
 80066a8:	69fb      	ldr	r3, [r7, #28]
 80066aa:	3301      	adds	r3, #1
 80066ac:	61fb      	str	r3, [r7, #28]
 80066ae:	68fb      	ldr	r3, [r7, #12]
 80066b0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80066b2:	b29b      	uxth	r3, r3
 80066b4:	3b01      	subs	r3, #1
 80066b6:	b29a      	uxth	r2, r3
 80066b8:	68fb      	ldr	r3, [r7, #12]
 80066ba:	84da      	strh	r2, [r3, #38]	; 0x26
 80066bc:	68fb      	ldr	r3, [r7, #12]
 80066be:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80066c0:	b29b      	uxth	r3, r3
 80066c2:	2b00      	cmp	r3, #0
 80066c4:	d1cf      	bne.n	8006666 <HAL_UART_Transmit+0x94>
 80066c6:	683b      	ldr	r3, [r7, #0]
 80066c8:	9300      	str	r3, [sp, #0]
 80066ca:	697b      	ldr	r3, [r7, #20]
 80066cc:	2200      	movs	r2, #0
 80066ce:	2140      	movs	r1, #64	; 0x40
 80066d0:	68f8      	ldr	r0, [r7, #12]
 80066d2:	f000 faef 	bl	8006cb4 <UART_WaitOnFlagUntilTimeout>
 80066d6:	4603      	mov	r3, r0
 80066d8:	2b00      	cmp	r3, #0
 80066da:	d001      	beq.n	80066e0 <HAL_UART_Transmit+0x10e>
 80066dc:	2303      	movs	r3, #3
 80066de:	e006      	b.n	80066ee <HAL_UART_Transmit+0x11c>
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	2220      	movs	r2, #32
 80066e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80066e8:	2300      	movs	r3, #0
 80066ea:	e000      	b.n	80066ee <HAL_UART_Transmit+0x11c>
 80066ec:	2302      	movs	r3, #2
 80066ee:	4618      	mov	r0, r3
 80066f0:	3720      	adds	r7, #32
 80066f2:	46bd      	mov	sp, r7
 80066f4:	bd80      	pop	{r7, pc}

080066f6 <HAL_UART_Receive_IT>:
 80066f6:	b580      	push	{r7, lr}
 80066f8:	b084      	sub	sp, #16
 80066fa:	af00      	add	r7, sp, #0
 80066fc:	60f8      	str	r0, [r7, #12]
 80066fe:	60b9      	str	r1, [r7, #8]
 8006700:	4613      	mov	r3, r2
 8006702:	80fb      	strh	r3, [r7, #6]
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800670a:	b2db      	uxtb	r3, r3
 800670c:	2b20      	cmp	r3, #32
 800670e:	d11d      	bne.n	800674c <HAL_UART_Receive_IT+0x56>
 8006710:	68bb      	ldr	r3, [r7, #8]
 8006712:	2b00      	cmp	r3, #0
 8006714:	d002      	beq.n	800671c <HAL_UART_Receive_IT+0x26>
 8006716:	88fb      	ldrh	r3, [r7, #6]
 8006718:	2b00      	cmp	r3, #0
 800671a:	d101      	bne.n	8006720 <HAL_UART_Receive_IT+0x2a>
 800671c:	2301      	movs	r3, #1
 800671e:	e016      	b.n	800674e <HAL_UART_Receive_IT+0x58>
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006726:	2b01      	cmp	r3, #1
 8006728:	d101      	bne.n	800672e <HAL_UART_Receive_IT+0x38>
 800672a:	2302      	movs	r3, #2
 800672c:	e00f      	b.n	800674e <HAL_UART_Receive_IT+0x58>
 800672e:	68fb      	ldr	r3, [r7, #12]
 8006730:	2201      	movs	r2, #1
 8006732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006736:	68fb      	ldr	r3, [r7, #12]
 8006738:	2200      	movs	r2, #0
 800673a:	631a      	str	r2, [r3, #48]	; 0x30
 800673c:	88fb      	ldrh	r3, [r7, #6]
 800673e:	461a      	mov	r2, r3
 8006740:	68b9      	ldr	r1, [r7, #8]
 8006742:	68f8      	ldr	r0, [r7, #12]
 8006744:	f000 fb24 	bl	8006d90 <UART_Start_Receive_IT>
 8006748:	4603      	mov	r3, r0
 800674a:	e000      	b.n	800674e <HAL_UART_Receive_IT+0x58>
 800674c:	2302      	movs	r3, #2
 800674e:	4618      	mov	r0, r3
 8006750:	3710      	adds	r7, #16
 8006752:	46bd      	mov	sp, r7
 8006754:	bd80      	pop	{r7, pc}
	...

08006758 <HAL_UART_IRQHandler>:
 8006758:	b580      	push	{r7, lr}
 800675a:	b0ba      	sub	sp, #232	; 0xe8
 800675c:	af00      	add	r7, sp, #0
 800675e:	6078      	str	r0, [r7, #4]
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	681b      	ldr	r3, [r3, #0]
 800676e:	68db      	ldr	r3, [r3, #12]
 8006770:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	695b      	ldr	r3, [r3, #20]
 800677a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800677e:	2300      	movs	r3, #0
 8006780:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006784:	2300      	movs	r3, #0
 8006786:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800678a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800678e:	f003 030f 	and.w	r3, r3, #15
 8006792:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006796:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800679a:	2b00      	cmp	r3, #0
 800679c:	d10f      	bne.n	80067be <HAL_UART_IRQHandler+0x66>
 800679e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067a2:	f003 0320 	and.w	r3, r3, #32
 80067a6:	2b00      	cmp	r3, #0
 80067a8:	d009      	beq.n	80067be <HAL_UART_IRQHandler+0x66>
 80067aa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80067ae:	f003 0320 	and.w	r3, r3, #32
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d003      	beq.n	80067be <HAL_UART_IRQHandler+0x66>
 80067b6:	6878      	ldr	r0, [r7, #4]
 80067b8:	f000 fc03 	bl	8006fc2 <UART_Receive_IT>
 80067bc:	e256      	b.n	8006c6c <HAL_UART_IRQHandler+0x514>
 80067be:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	f000 80de 	beq.w	8006984 <HAL_UART_IRQHandler+0x22c>
 80067c8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80067cc:	f003 0301 	and.w	r3, r3, #1
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d106      	bne.n	80067e2 <HAL_UART_IRQHandler+0x8a>
 80067d4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80067d8:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80067dc:	2b00      	cmp	r3, #0
 80067de:	f000 80d1 	beq.w	8006984 <HAL_UART_IRQHandler+0x22c>
 80067e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067e6:	f003 0301 	and.w	r3, r3, #1
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d00b      	beq.n	8006806 <HAL_UART_IRQHandler+0xae>
 80067ee:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80067f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d005      	beq.n	8006806 <HAL_UART_IRQHandler+0xae>
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80067fe:	f043 0201 	orr.w	r2, r3, #1
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	641a      	str	r2, [r3, #64]	; 0x40
 8006806:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800680a:	f003 0304 	and.w	r3, r3, #4
 800680e:	2b00      	cmp	r3, #0
 8006810:	d00b      	beq.n	800682a <HAL_UART_IRQHandler+0xd2>
 8006812:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006816:	f003 0301 	and.w	r3, r3, #1
 800681a:	2b00      	cmp	r3, #0
 800681c:	d005      	beq.n	800682a <HAL_UART_IRQHandler+0xd2>
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006822:	f043 0202 	orr.w	r2, r3, #2
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	641a      	str	r2, [r3, #64]	; 0x40
 800682a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800682e:	f003 0302 	and.w	r3, r3, #2
 8006832:	2b00      	cmp	r3, #0
 8006834:	d00b      	beq.n	800684e <HAL_UART_IRQHandler+0xf6>
 8006836:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800683a:	f003 0301 	and.w	r3, r3, #1
 800683e:	2b00      	cmp	r3, #0
 8006840:	d005      	beq.n	800684e <HAL_UART_IRQHandler+0xf6>
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006846:	f043 0204 	orr.w	r2, r3, #4
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	641a      	str	r2, [r3, #64]	; 0x40
 800684e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006852:	f003 0308 	and.w	r3, r3, #8
 8006856:	2b00      	cmp	r3, #0
 8006858:	d011      	beq.n	800687e <HAL_UART_IRQHandler+0x126>
 800685a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800685e:	f003 0320 	and.w	r3, r3, #32
 8006862:	2b00      	cmp	r3, #0
 8006864:	d105      	bne.n	8006872 <HAL_UART_IRQHandler+0x11a>
 8006866:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800686a:	f003 0301 	and.w	r3, r3, #1
 800686e:	2b00      	cmp	r3, #0
 8006870:	d005      	beq.n	800687e <HAL_UART_IRQHandler+0x126>
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006876:	f043 0208 	orr.w	r2, r3, #8
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	641a      	str	r2, [r3, #64]	; 0x40
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006882:	2b00      	cmp	r3, #0
 8006884:	f000 81ed 	beq.w	8006c62 <HAL_UART_IRQHandler+0x50a>
 8006888:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800688c:	f003 0320 	and.w	r3, r3, #32
 8006890:	2b00      	cmp	r3, #0
 8006892:	d008      	beq.n	80068a6 <HAL_UART_IRQHandler+0x14e>
 8006894:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006898:	f003 0320 	and.w	r3, r3, #32
 800689c:	2b00      	cmp	r3, #0
 800689e:	d002      	beq.n	80068a6 <HAL_UART_IRQHandler+0x14e>
 80068a0:	6878      	ldr	r0, [r7, #4]
 80068a2:	f000 fb8e 	bl	8006fc2 <UART_Receive_IT>
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	695b      	ldr	r3, [r3, #20]
 80068ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068b0:	2b40      	cmp	r3, #64	; 0x40
 80068b2:	bf0c      	ite	eq
 80068b4:	2301      	moveq	r3, #1
 80068b6:	2300      	movne	r3, #0
 80068b8:	b2db      	uxtb	r3, r3
 80068ba:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068c2:	f003 0308 	and.w	r3, r3, #8
 80068c6:	2b00      	cmp	r3, #0
 80068c8:	d103      	bne.n	80068d2 <HAL_UART_IRQHandler+0x17a>
 80068ca:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80068ce:	2b00      	cmp	r3, #0
 80068d0:	d04f      	beq.n	8006972 <HAL_UART_IRQHandler+0x21a>
 80068d2:	6878      	ldr	r0, [r7, #4]
 80068d4:	f000 fa96 	bl	8006e04 <UART_EndRxTransfer>
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	695b      	ldr	r3, [r3, #20]
 80068de:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068e2:	2b40      	cmp	r3, #64	; 0x40
 80068e4:	d141      	bne.n	800696a <HAL_UART_IRQHandler+0x212>
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	3314      	adds	r3, #20
 80068ec:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80068f0:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80068f4:	e853 3f00 	ldrex	r3, [r3]
 80068f8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80068fc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8006900:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006904:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	3314      	adds	r3, #20
 800690e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8006912:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8006916:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800691a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800691e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8006922:	e841 2300 	strex	r3, r2, [r1]
 8006926:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800692a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800692e:	2b00      	cmp	r3, #0
 8006930:	d1d9      	bne.n	80068e6 <HAL_UART_IRQHandler+0x18e>
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006936:	2b00      	cmp	r3, #0
 8006938:	d013      	beq.n	8006962 <HAL_UART_IRQHandler+0x20a>
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800693e:	4a7d      	ldr	r2, [pc, #500]	; (8006b34 <HAL_UART_IRQHandler+0x3dc>)
 8006940:	651a      	str	r2, [r3, #80]	; 0x50
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006946:	4618      	mov	r0, r3
 8006948:	f7fc fe88 	bl	800365c <HAL_DMA_Abort_IT>
 800694c:	4603      	mov	r3, r0
 800694e:	2b00      	cmp	r3, #0
 8006950:	d016      	beq.n	8006980 <HAL_UART_IRQHandler+0x228>
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006956:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006958:	687a      	ldr	r2, [r7, #4]
 800695a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800695c:	4610      	mov	r0, r2
 800695e:	4798      	blx	r3
 8006960:	e00e      	b.n	8006980 <HAL_UART_IRQHandler+0x228>
 8006962:	6878      	ldr	r0, [r7, #4]
 8006964:	f000 f990 	bl	8006c88 <HAL_UART_ErrorCallback>
 8006968:	e00a      	b.n	8006980 <HAL_UART_IRQHandler+0x228>
 800696a:	6878      	ldr	r0, [r7, #4]
 800696c:	f000 f98c 	bl	8006c88 <HAL_UART_ErrorCallback>
 8006970:	e006      	b.n	8006980 <HAL_UART_IRQHandler+0x228>
 8006972:	6878      	ldr	r0, [r7, #4]
 8006974:	f000 f988 	bl	8006c88 <HAL_UART_ErrorCallback>
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	2200      	movs	r2, #0
 800697c:	641a      	str	r2, [r3, #64]	; 0x40
 800697e:	e170      	b.n	8006c62 <HAL_UART_IRQHandler+0x50a>
 8006980:	bf00      	nop
 8006982:	e16e      	b.n	8006c62 <HAL_UART_IRQHandler+0x50a>
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006988:	2b01      	cmp	r3, #1
 800698a:	f040 814a 	bne.w	8006c22 <HAL_UART_IRQHandler+0x4ca>
 800698e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006992:	f003 0310 	and.w	r3, r3, #16
 8006996:	2b00      	cmp	r3, #0
 8006998:	f000 8143 	beq.w	8006c22 <HAL_UART_IRQHandler+0x4ca>
 800699c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80069a0:	f003 0310 	and.w	r3, r3, #16
 80069a4:	2b00      	cmp	r3, #0
 80069a6:	f000 813c 	beq.w	8006c22 <HAL_UART_IRQHandler+0x4ca>
 80069aa:	2300      	movs	r3, #0
 80069ac:	60bb      	str	r3, [r7, #8]
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	60bb      	str	r3, [r7, #8]
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	685b      	ldr	r3, [r3, #4]
 80069bc:	60bb      	str	r3, [r7, #8]
 80069be:	68bb      	ldr	r3, [r7, #8]
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	695b      	ldr	r3, [r3, #20]
 80069c6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80069ca:	2b40      	cmp	r3, #64	; 0x40
 80069cc:	f040 80b4 	bne.w	8006b38 <HAL_UART_IRQHandler+0x3e0>
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	685b      	ldr	r3, [r3, #4]
 80069d8:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80069dc:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	f000 8140 	beq.w	8006c66 <HAL_UART_IRQHandler+0x50e>
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80069ea:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80069ee:	429a      	cmp	r2, r3
 80069f0:	f080 8139 	bcs.w	8006c66 <HAL_UART_IRQHandler+0x50e>
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80069fa:	85da      	strh	r2, [r3, #46]	; 0x2e
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a00:	69db      	ldr	r3, [r3, #28]
 8006a02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006a06:	f000 8088 	beq.w	8006b1a <HAL_UART_IRQHandler+0x3c2>
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	681b      	ldr	r3, [r3, #0]
 8006a0e:	330c      	adds	r3, #12
 8006a10:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8006a14:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8006a18:	e853 3f00 	ldrex	r3, [r3]
 8006a1c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8006a20:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8006a24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006a28:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	681b      	ldr	r3, [r3, #0]
 8006a30:	330c      	adds	r3, #12
 8006a32:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8006a36:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8006a3a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8006a3e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8006a42:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8006a46:	e841 2300 	strex	r3, r2, [r1]
 8006a4a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8006a4e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d1d9      	bne.n	8006a0a <HAL_UART_IRQHandler+0x2b2>
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	681b      	ldr	r3, [r3, #0]
 8006a5a:	3314      	adds	r3, #20
 8006a5c:	677b      	str	r3, [r7, #116]	; 0x74
 8006a5e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006a60:	e853 3f00 	ldrex	r3, [r3]
 8006a64:	673b      	str	r3, [r7, #112]	; 0x70
 8006a66:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006a68:	f023 0301 	bic.w	r3, r3, #1
 8006a6c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	681b      	ldr	r3, [r3, #0]
 8006a74:	3314      	adds	r3, #20
 8006a76:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006a7a:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8006a7e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006a80:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8006a82:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8006a86:	e841 2300 	strex	r3, r2, [r1]
 8006a8a:	67bb      	str	r3, [r7, #120]	; 0x78
 8006a8c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006a8e:	2b00      	cmp	r3, #0
 8006a90:	d1e1      	bne.n	8006a56 <HAL_UART_IRQHandler+0x2fe>
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	3314      	adds	r3, #20
 8006a98:	663b      	str	r3, [r7, #96]	; 0x60
 8006a9a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006a9c:	e853 3f00 	ldrex	r3, [r3]
 8006aa0:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006aa2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006aa4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006aa8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	3314      	adds	r3, #20
 8006ab2:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8006ab6:	66fa      	str	r2, [r7, #108]	; 0x6c
 8006ab8:	66bb      	str	r3, [r7, #104]	; 0x68
 8006aba:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8006abc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8006abe:	e841 2300 	strex	r3, r2, [r1]
 8006ac2:	667b      	str	r3, [r7, #100]	; 0x64
 8006ac4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006ac6:	2b00      	cmp	r3, #0
 8006ac8:	d1e3      	bne.n	8006a92 <HAL_UART_IRQHandler+0x33a>
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	2220      	movs	r2, #32
 8006ace:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	2200      	movs	r2, #0
 8006ad6:	631a      	str	r2, [r3, #48]	; 0x30
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	330c      	adds	r3, #12
 8006ade:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006ae0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006ae2:	e853 3f00 	ldrex	r3, [r3]
 8006ae6:	64bb      	str	r3, [r7, #72]	; 0x48
 8006ae8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006aea:	f023 0310 	bic.w	r3, r3, #16
 8006aee:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	330c      	adds	r3, #12
 8006af8:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8006afc:	65ba      	str	r2, [r7, #88]	; 0x58
 8006afe:	657b      	str	r3, [r7, #84]	; 0x54
 8006b00:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8006b02:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006b04:	e841 2300 	strex	r3, r2, [r1]
 8006b08:	653b      	str	r3, [r7, #80]	; 0x50
 8006b0a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	d1e3      	bne.n	8006ad8 <HAL_UART_IRQHandler+0x380>
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b14:	4618      	mov	r0, r3
 8006b16:	f7fc fd31 	bl	800357c <HAL_DMA_Abort>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006b22:	b29b      	uxth	r3, r3
 8006b24:	1ad3      	subs	r3, r2, r3
 8006b26:	b29b      	uxth	r3, r3
 8006b28:	4619      	mov	r1, r3
 8006b2a:	6878      	ldr	r0, [r7, #4]
 8006b2c:	f000 f8b6 	bl	8006c9c <HAL_UARTEx_RxEventCallback>
 8006b30:	e099      	b.n	8006c66 <HAL_UART_IRQHandler+0x50e>
 8006b32:	bf00      	nop
 8006b34:	08006ecb 	.word	0x08006ecb
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006b40:	b29b      	uxth	r3, r3
 8006b42:	1ad3      	subs	r3, r2, r3
 8006b44:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006b4c:	b29b      	uxth	r3, r3
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	f000 808b 	beq.w	8006c6a <HAL_UART_IRQHandler+0x512>
 8006b54:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	f000 8086 	beq.w	8006c6a <HAL_UART_IRQHandler+0x512>
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	330c      	adds	r3, #12
 8006b64:	63bb      	str	r3, [r7, #56]	; 0x38
 8006b66:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006b68:	e853 3f00 	ldrex	r3, [r3]
 8006b6c:	637b      	str	r3, [r7, #52]	; 0x34
 8006b6e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006b70:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006b74:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	330c      	adds	r3, #12
 8006b7e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8006b82:	647a      	str	r2, [r7, #68]	; 0x44
 8006b84:	643b      	str	r3, [r7, #64]	; 0x40
 8006b86:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006b88:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006b8a:	e841 2300 	strex	r3, r2, [r1]
 8006b8e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006b90:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006b92:	2b00      	cmp	r3, #0
 8006b94:	d1e3      	bne.n	8006b5e <HAL_UART_IRQHandler+0x406>
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	3314      	adds	r3, #20
 8006b9c:	627b      	str	r3, [r7, #36]	; 0x24
 8006b9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ba0:	e853 3f00 	ldrex	r3, [r3]
 8006ba4:	623b      	str	r3, [r7, #32]
 8006ba6:	6a3b      	ldr	r3, [r7, #32]
 8006ba8:	f023 0301 	bic.w	r3, r3, #1
 8006bac:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	3314      	adds	r3, #20
 8006bb6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8006bba:	633a      	str	r2, [r7, #48]	; 0x30
 8006bbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006bbe:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006bc0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006bc2:	e841 2300 	strex	r3, r2, [r1]
 8006bc6:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006bca:	2b00      	cmp	r3, #0
 8006bcc:	d1e3      	bne.n	8006b96 <HAL_UART_IRQHandler+0x43e>
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	2220      	movs	r2, #32
 8006bd2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	2200      	movs	r2, #0
 8006bda:	631a      	str	r2, [r3, #48]	; 0x30
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	330c      	adds	r3, #12
 8006be2:	613b      	str	r3, [r7, #16]
 8006be4:	693b      	ldr	r3, [r7, #16]
 8006be6:	e853 3f00 	ldrex	r3, [r3]
 8006bea:	60fb      	str	r3, [r7, #12]
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	f023 0310 	bic.w	r3, r3, #16
 8006bf2:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	330c      	adds	r3, #12
 8006bfc:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8006c00:	61fa      	str	r2, [r7, #28]
 8006c02:	61bb      	str	r3, [r7, #24]
 8006c04:	69b9      	ldr	r1, [r7, #24]
 8006c06:	69fa      	ldr	r2, [r7, #28]
 8006c08:	e841 2300 	strex	r3, r2, [r1]
 8006c0c:	617b      	str	r3, [r7, #20]
 8006c0e:	697b      	ldr	r3, [r7, #20]
 8006c10:	2b00      	cmp	r3, #0
 8006c12:	d1e3      	bne.n	8006bdc <HAL_UART_IRQHandler+0x484>
 8006c14:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8006c18:	4619      	mov	r1, r3
 8006c1a:	6878      	ldr	r0, [r7, #4]
 8006c1c:	f000 f83e 	bl	8006c9c <HAL_UARTEx_RxEventCallback>
 8006c20:	e023      	b.n	8006c6a <HAL_UART_IRQHandler+0x512>
 8006c22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c26:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d009      	beq.n	8006c42 <HAL_UART_IRQHandler+0x4ea>
 8006c2e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006c32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c36:	2b00      	cmp	r3, #0
 8006c38:	d003      	beq.n	8006c42 <HAL_UART_IRQHandler+0x4ea>
 8006c3a:	6878      	ldr	r0, [r7, #4]
 8006c3c:	f000 f959 	bl	8006ef2 <UART_Transmit_IT>
 8006c40:	e014      	b.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c42:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c46:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c4a:	2b00      	cmp	r3, #0
 8006c4c:	d00e      	beq.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c4e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006c52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c56:	2b00      	cmp	r3, #0
 8006c58:	d008      	beq.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c5a:	6878      	ldr	r0, [r7, #4]
 8006c5c:	f000 f999 	bl	8006f92 <UART_EndTransmit_IT>
 8006c60:	e004      	b.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c62:	bf00      	nop
 8006c64:	e002      	b.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c66:	bf00      	nop
 8006c68:	e000      	b.n	8006c6c <HAL_UART_IRQHandler+0x514>
 8006c6a:	bf00      	nop
 8006c6c:	37e8      	adds	r7, #232	; 0xe8
 8006c6e:	46bd      	mov	sp, r7
 8006c70:	bd80      	pop	{r7, pc}
 8006c72:	bf00      	nop

08006c74 <HAL_UART_TxCpltCallback>:
 8006c74:	b480      	push	{r7}
 8006c76:	b083      	sub	sp, #12
 8006c78:	af00      	add	r7, sp, #0
 8006c7a:	6078      	str	r0, [r7, #4]
 8006c7c:	bf00      	nop
 8006c7e:	370c      	adds	r7, #12
 8006c80:	46bd      	mov	sp, r7
 8006c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c86:	4770      	bx	lr

08006c88 <HAL_UART_ErrorCallback>:
 8006c88:	b480      	push	{r7}
 8006c8a:	b083      	sub	sp, #12
 8006c8c:	af00      	add	r7, sp, #0
 8006c8e:	6078      	str	r0, [r7, #4]
 8006c90:	bf00      	nop
 8006c92:	370c      	adds	r7, #12
 8006c94:	46bd      	mov	sp, r7
 8006c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c9a:	4770      	bx	lr

08006c9c <HAL_UARTEx_RxEventCallback>:
 8006c9c:	b480      	push	{r7}
 8006c9e:	b083      	sub	sp, #12
 8006ca0:	af00      	add	r7, sp, #0
 8006ca2:	6078      	str	r0, [r7, #4]
 8006ca4:	460b      	mov	r3, r1
 8006ca6:	807b      	strh	r3, [r7, #2]
 8006ca8:	bf00      	nop
 8006caa:	370c      	adds	r7, #12
 8006cac:	46bd      	mov	sp, r7
 8006cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cb2:	4770      	bx	lr

08006cb4 <UART_WaitOnFlagUntilTimeout>:
 8006cb4:	b580      	push	{r7, lr}
 8006cb6:	b090      	sub	sp, #64	; 0x40
 8006cb8:	af00      	add	r7, sp, #0
 8006cba:	60f8      	str	r0, [r7, #12]
 8006cbc:	60b9      	str	r1, [r7, #8]
 8006cbe:	603b      	str	r3, [r7, #0]
 8006cc0:	4613      	mov	r3, r2
 8006cc2:	71fb      	strb	r3, [r7, #7]
 8006cc4:	e050      	b.n	8006d68 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006cc6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006cc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ccc:	d04c      	beq.n	8006d68 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006cce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d007      	beq.n	8006ce4 <UART_WaitOnFlagUntilTimeout+0x30>
 8006cd4:	f7fc f800 	bl	8002cd8 <HAL_GetTick>
 8006cd8:	4602      	mov	r2, r0
 8006cda:	683b      	ldr	r3, [r7, #0]
 8006cdc:	1ad3      	subs	r3, r2, r3
 8006cde:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006ce0:	429a      	cmp	r2, r3
 8006ce2:	d241      	bcs.n	8006d68 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006ce4:	68fb      	ldr	r3, [r7, #12]
 8006ce6:	681b      	ldr	r3, [r3, #0]
 8006ce8:	330c      	adds	r3, #12
 8006cea:	62bb      	str	r3, [r7, #40]	; 0x28
 8006cec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006cee:	e853 3f00 	ldrex	r3, [r3]
 8006cf2:	627b      	str	r3, [r7, #36]	; 0x24
 8006cf4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cf6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006cfa:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006cfc:	68fb      	ldr	r3, [r7, #12]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	330c      	adds	r3, #12
 8006d02:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006d04:	637a      	str	r2, [r7, #52]	; 0x34
 8006d06:	633b      	str	r3, [r7, #48]	; 0x30
 8006d08:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006d0a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006d0c:	e841 2300 	strex	r3, r2, [r1]
 8006d10:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006d12:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006d14:	2b00      	cmp	r3, #0
 8006d16:	d1e5      	bne.n	8006ce4 <UART_WaitOnFlagUntilTimeout+0x30>
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	3314      	adds	r3, #20
 8006d1e:	617b      	str	r3, [r7, #20]
 8006d20:	697b      	ldr	r3, [r7, #20]
 8006d22:	e853 3f00 	ldrex	r3, [r3]
 8006d26:	613b      	str	r3, [r7, #16]
 8006d28:	693b      	ldr	r3, [r7, #16]
 8006d2a:	f023 0301 	bic.w	r3, r3, #1
 8006d2e:	63bb      	str	r3, [r7, #56]	; 0x38
 8006d30:	68fb      	ldr	r3, [r7, #12]
 8006d32:	681b      	ldr	r3, [r3, #0]
 8006d34:	3314      	adds	r3, #20
 8006d36:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006d38:	623a      	str	r2, [r7, #32]
 8006d3a:	61fb      	str	r3, [r7, #28]
 8006d3c:	69f9      	ldr	r1, [r7, #28]
 8006d3e:	6a3a      	ldr	r2, [r7, #32]
 8006d40:	e841 2300 	strex	r3, r2, [r1]
 8006d44:	61bb      	str	r3, [r7, #24]
 8006d46:	69bb      	ldr	r3, [r7, #24]
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	d1e5      	bne.n	8006d18 <UART_WaitOnFlagUntilTimeout+0x64>
 8006d4c:	68fb      	ldr	r3, [r7, #12]
 8006d4e:	2220      	movs	r2, #32
 8006d50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d54:	68fb      	ldr	r3, [r7, #12]
 8006d56:	2220      	movs	r2, #32
 8006d58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d5c:	68fb      	ldr	r3, [r7, #12]
 8006d5e:	2200      	movs	r2, #0
 8006d60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006d64:	2303      	movs	r3, #3
 8006d66:	e00f      	b.n	8006d88 <UART_WaitOnFlagUntilTimeout+0xd4>
 8006d68:	68fb      	ldr	r3, [r7, #12]
 8006d6a:	681b      	ldr	r3, [r3, #0]
 8006d6c:	681a      	ldr	r2, [r3, #0]
 8006d6e:	68bb      	ldr	r3, [r7, #8]
 8006d70:	4013      	ands	r3, r2
 8006d72:	68ba      	ldr	r2, [r7, #8]
 8006d74:	429a      	cmp	r2, r3
 8006d76:	bf0c      	ite	eq
 8006d78:	2301      	moveq	r3, #1
 8006d7a:	2300      	movne	r3, #0
 8006d7c:	b2db      	uxtb	r3, r3
 8006d7e:	461a      	mov	r2, r3
 8006d80:	79fb      	ldrb	r3, [r7, #7]
 8006d82:	429a      	cmp	r2, r3
 8006d84:	d09f      	beq.n	8006cc6 <UART_WaitOnFlagUntilTimeout+0x12>
 8006d86:	2300      	movs	r3, #0
 8006d88:	4618      	mov	r0, r3
 8006d8a:	3740      	adds	r7, #64	; 0x40
 8006d8c:	46bd      	mov	sp, r7
 8006d8e:	bd80      	pop	{r7, pc}

08006d90 <UART_Start_Receive_IT>:
 8006d90:	b480      	push	{r7}
 8006d92:	b085      	sub	sp, #20
 8006d94:	af00      	add	r7, sp, #0
 8006d96:	60f8      	str	r0, [r7, #12]
 8006d98:	60b9      	str	r1, [r7, #8]
 8006d9a:	4613      	mov	r3, r2
 8006d9c:	80fb      	strh	r3, [r7, #6]
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	68ba      	ldr	r2, [r7, #8]
 8006da2:	629a      	str	r2, [r3, #40]	; 0x28
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	88fa      	ldrh	r2, [r7, #6]
 8006da8:	859a      	strh	r2, [r3, #44]	; 0x2c
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	88fa      	ldrh	r2, [r7, #6]
 8006dae:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006db0:	68fb      	ldr	r3, [r7, #12]
 8006db2:	2200      	movs	r2, #0
 8006db4:	641a      	str	r2, [r3, #64]	; 0x40
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	2222      	movs	r2, #34	; 0x22
 8006dba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006dbe:	68fb      	ldr	r3, [r7, #12]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006dc6:	68fb      	ldr	r3, [r7, #12]
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	68da      	ldr	r2, [r3, #12]
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006dd4:	60da      	str	r2, [r3, #12]
 8006dd6:	68fb      	ldr	r3, [r7, #12]
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	695a      	ldr	r2, [r3, #20]
 8006ddc:	68fb      	ldr	r3, [r7, #12]
 8006dde:	681b      	ldr	r3, [r3, #0]
 8006de0:	f042 0201 	orr.w	r2, r2, #1
 8006de4:	615a      	str	r2, [r3, #20]
 8006de6:	68fb      	ldr	r3, [r7, #12]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	68da      	ldr	r2, [r3, #12]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	f042 0220 	orr.w	r2, r2, #32
 8006df4:	60da      	str	r2, [r3, #12]
 8006df6:	2300      	movs	r3, #0
 8006df8:	4618      	mov	r0, r3
 8006dfa:	3714      	adds	r7, #20
 8006dfc:	46bd      	mov	sp, r7
 8006dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e02:	4770      	bx	lr

08006e04 <UART_EndRxTransfer>:
 8006e04:	b480      	push	{r7}
 8006e06:	b095      	sub	sp, #84	; 0x54
 8006e08:	af00      	add	r7, sp, #0
 8006e0a:	6078      	str	r0, [r7, #4]
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	330c      	adds	r3, #12
 8006e12:	637b      	str	r3, [r7, #52]	; 0x34
 8006e14:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006e16:	e853 3f00 	ldrex	r3, [r3]
 8006e1a:	633b      	str	r3, [r7, #48]	; 0x30
 8006e1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e1e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006e22:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	681b      	ldr	r3, [r3, #0]
 8006e28:	330c      	adds	r3, #12
 8006e2a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8006e2c:	643a      	str	r2, [r7, #64]	; 0x40
 8006e2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006e30:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006e32:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006e34:	e841 2300 	strex	r3, r2, [r1]
 8006e38:	63bb      	str	r3, [r7, #56]	; 0x38
 8006e3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d1e5      	bne.n	8006e0c <UART_EndRxTransfer+0x8>
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	681b      	ldr	r3, [r3, #0]
 8006e44:	3314      	adds	r3, #20
 8006e46:	623b      	str	r3, [r7, #32]
 8006e48:	6a3b      	ldr	r3, [r7, #32]
 8006e4a:	e853 3f00 	ldrex	r3, [r3]
 8006e4e:	61fb      	str	r3, [r7, #28]
 8006e50:	69fb      	ldr	r3, [r7, #28]
 8006e52:	f023 0301 	bic.w	r3, r3, #1
 8006e56:	64bb      	str	r3, [r7, #72]	; 0x48
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	3314      	adds	r3, #20
 8006e5e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006e60:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006e62:	62bb      	str	r3, [r7, #40]	; 0x28
 8006e64:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006e66:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006e68:	e841 2300 	strex	r3, r2, [r1]
 8006e6c:	627b      	str	r3, [r7, #36]	; 0x24
 8006e6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e70:	2b00      	cmp	r3, #0
 8006e72:	d1e5      	bne.n	8006e40 <UART_EndRxTransfer+0x3c>
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e78:	2b01      	cmp	r3, #1
 8006e7a:	d119      	bne.n	8006eb0 <UART_EndRxTransfer+0xac>
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	681b      	ldr	r3, [r3, #0]
 8006e80:	330c      	adds	r3, #12
 8006e82:	60fb      	str	r3, [r7, #12]
 8006e84:	68fb      	ldr	r3, [r7, #12]
 8006e86:	e853 3f00 	ldrex	r3, [r3]
 8006e8a:	60bb      	str	r3, [r7, #8]
 8006e8c:	68bb      	ldr	r3, [r7, #8]
 8006e8e:	f023 0310 	bic.w	r3, r3, #16
 8006e92:	647b      	str	r3, [r7, #68]	; 0x44
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	330c      	adds	r3, #12
 8006e9a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006e9c:	61ba      	str	r2, [r7, #24]
 8006e9e:	617b      	str	r3, [r7, #20]
 8006ea0:	6979      	ldr	r1, [r7, #20]
 8006ea2:	69ba      	ldr	r2, [r7, #24]
 8006ea4:	e841 2300 	strex	r3, r2, [r1]
 8006ea8:	613b      	str	r3, [r7, #16]
 8006eaa:	693b      	ldr	r3, [r7, #16]
 8006eac:	2b00      	cmp	r3, #0
 8006eae:	d1e5      	bne.n	8006e7c <UART_EndRxTransfer+0x78>
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	2220      	movs	r2, #32
 8006eb4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	2200      	movs	r2, #0
 8006ebc:	631a      	str	r2, [r3, #48]	; 0x30
 8006ebe:	bf00      	nop
 8006ec0:	3754      	adds	r7, #84	; 0x54
 8006ec2:	46bd      	mov	sp, r7
 8006ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ec8:	4770      	bx	lr

08006eca <UART_DMAAbortOnError>:
 8006eca:	b580      	push	{r7, lr}
 8006ecc:	b084      	sub	sp, #16
 8006ece:	af00      	add	r7, sp, #0
 8006ed0:	6078      	str	r0, [r7, #4]
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ed6:	60fb      	str	r3, [r7, #12]
 8006ed8:	68fb      	ldr	r3, [r7, #12]
 8006eda:	2200      	movs	r2, #0
 8006edc:	85da      	strh	r2, [r3, #46]	; 0x2e
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	2200      	movs	r2, #0
 8006ee2:	84da      	strh	r2, [r3, #38]	; 0x26
 8006ee4:	68f8      	ldr	r0, [r7, #12]
 8006ee6:	f7ff fecf 	bl	8006c88 <HAL_UART_ErrorCallback>
 8006eea:	bf00      	nop
 8006eec:	3710      	adds	r7, #16
 8006eee:	46bd      	mov	sp, r7
 8006ef0:	bd80      	pop	{r7, pc}

08006ef2 <UART_Transmit_IT>:
 8006ef2:	b480      	push	{r7}
 8006ef4:	b085      	sub	sp, #20
 8006ef6:	af00      	add	r7, sp, #0
 8006ef8:	6078      	str	r0, [r7, #4]
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006f00:	b2db      	uxtb	r3, r3
 8006f02:	2b21      	cmp	r3, #33	; 0x21
 8006f04:	d13e      	bne.n	8006f84 <UART_Transmit_IT+0x92>
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	689b      	ldr	r3, [r3, #8]
 8006f0a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f0e:	d114      	bne.n	8006f3a <UART_Transmit_IT+0x48>
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	691b      	ldr	r3, [r3, #16]
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	d110      	bne.n	8006f3a <UART_Transmit_IT+0x48>
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	6a1b      	ldr	r3, [r3, #32]
 8006f1c:	60fb      	str	r3, [r7, #12]
 8006f1e:	68fb      	ldr	r3, [r7, #12]
 8006f20:	881b      	ldrh	r3, [r3, #0]
 8006f22:	461a      	mov	r2, r3
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006f2c:	605a      	str	r2, [r3, #4]
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	6a1b      	ldr	r3, [r3, #32]
 8006f32:	1c9a      	adds	r2, r3, #2
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	621a      	str	r2, [r3, #32]
 8006f38:	e008      	b.n	8006f4c <UART_Transmit_IT+0x5a>
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	6a1b      	ldr	r3, [r3, #32]
 8006f3e:	1c59      	adds	r1, r3, #1
 8006f40:	687a      	ldr	r2, [r7, #4]
 8006f42:	6211      	str	r1, [r2, #32]
 8006f44:	781a      	ldrb	r2, [r3, #0]
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	605a      	str	r2, [r3, #4]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006f50:	b29b      	uxth	r3, r3
 8006f52:	3b01      	subs	r3, #1
 8006f54:	b29b      	uxth	r3, r3
 8006f56:	687a      	ldr	r2, [r7, #4]
 8006f58:	4619      	mov	r1, r3
 8006f5a:	84d1      	strh	r1, [r2, #38]	; 0x26
 8006f5c:	2b00      	cmp	r3, #0
 8006f5e:	d10f      	bne.n	8006f80 <UART_Transmit_IT+0x8e>
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	681b      	ldr	r3, [r3, #0]
 8006f64:	68da      	ldr	r2, [r3, #12]
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006f6e:	60da      	str	r2, [r3, #12]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	68da      	ldr	r2, [r3, #12]
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	681b      	ldr	r3, [r3, #0]
 8006f7a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006f7e:	60da      	str	r2, [r3, #12]
 8006f80:	2300      	movs	r3, #0
 8006f82:	e000      	b.n	8006f86 <UART_Transmit_IT+0x94>
 8006f84:	2302      	movs	r3, #2
 8006f86:	4618      	mov	r0, r3
 8006f88:	3714      	adds	r7, #20
 8006f8a:	46bd      	mov	sp, r7
 8006f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f90:	4770      	bx	lr

08006f92 <UART_EndTransmit_IT>:
 8006f92:	b580      	push	{r7, lr}
 8006f94:	b082      	sub	sp, #8
 8006f96:	af00      	add	r7, sp, #0
 8006f98:	6078      	str	r0, [r7, #4]
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	68da      	ldr	r2, [r3, #12]
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006fa8:	60da      	str	r2, [r3, #12]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	2220      	movs	r2, #32
 8006fae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006fb2:	6878      	ldr	r0, [r7, #4]
 8006fb4:	f7ff fe5e 	bl	8006c74 <HAL_UART_TxCpltCallback>
 8006fb8:	2300      	movs	r3, #0
 8006fba:	4618      	mov	r0, r3
 8006fbc:	3708      	adds	r7, #8
 8006fbe:	46bd      	mov	sp, r7
 8006fc0:	bd80      	pop	{r7, pc}

08006fc2 <UART_Receive_IT>:
 8006fc2:	b580      	push	{r7, lr}
 8006fc4:	b08c      	sub	sp, #48	; 0x30
 8006fc6:	af00      	add	r7, sp, #0
 8006fc8:	6078      	str	r0, [r7, #4]
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006fd0:	b2db      	uxtb	r3, r3
 8006fd2:	2b22      	cmp	r3, #34	; 0x22
 8006fd4:	f040 80ab 	bne.w	800712e <UART_Receive_IT+0x16c>
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	689b      	ldr	r3, [r3, #8]
 8006fdc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006fe0:	d117      	bne.n	8007012 <UART_Receive_IT+0x50>
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	691b      	ldr	r3, [r3, #16]
 8006fe6:	2b00      	cmp	r3, #0
 8006fe8:	d113      	bne.n	8007012 <UART_Receive_IT+0x50>
 8006fea:	2300      	movs	r3, #0
 8006fec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ff2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	685b      	ldr	r3, [r3, #4]
 8006ffa:	b29b      	uxth	r3, r3
 8006ffc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007000:	b29a      	uxth	r2, r3
 8007002:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007004:	801a      	strh	r2, [r3, #0]
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800700a:	1c9a      	adds	r2, r3, #2
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	629a      	str	r2, [r3, #40]	; 0x28
 8007010:	e026      	b.n	8007060 <UART_Receive_IT+0x9e>
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007016:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007018:	2300      	movs	r3, #0
 800701a:	62bb      	str	r3, [r7, #40]	; 0x28
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	689b      	ldr	r3, [r3, #8]
 8007020:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007024:	d007      	beq.n	8007036 <UART_Receive_IT+0x74>
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	689b      	ldr	r3, [r3, #8]
 800702a:	2b00      	cmp	r3, #0
 800702c:	d10a      	bne.n	8007044 <UART_Receive_IT+0x82>
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	691b      	ldr	r3, [r3, #16]
 8007032:	2b00      	cmp	r3, #0
 8007034:	d106      	bne.n	8007044 <UART_Receive_IT+0x82>
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	681b      	ldr	r3, [r3, #0]
 800703a:	685b      	ldr	r3, [r3, #4]
 800703c:	b2da      	uxtb	r2, r3
 800703e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007040:	701a      	strb	r2, [r3, #0]
 8007042:	e008      	b.n	8007056 <UART_Receive_IT+0x94>
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	685b      	ldr	r3, [r3, #4]
 800704a:	b2db      	uxtb	r3, r3
 800704c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007050:	b2da      	uxtb	r2, r3
 8007052:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007054:	701a      	strb	r2, [r3, #0]
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800705a:	1c5a      	adds	r2, r3, #1
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	629a      	str	r2, [r3, #40]	; 0x28
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007064:	b29b      	uxth	r3, r3
 8007066:	3b01      	subs	r3, #1
 8007068:	b29b      	uxth	r3, r3
 800706a:	687a      	ldr	r2, [r7, #4]
 800706c:	4619      	mov	r1, r3
 800706e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8007070:	2b00      	cmp	r3, #0
 8007072:	d15a      	bne.n	800712a <UART_Receive_IT+0x168>
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	681b      	ldr	r3, [r3, #0]
 8007078:	68da      	ldr	r2, [r3, #12]
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	681b      	ldr	r3, [r3, #0]
 800707e:	f022 0220 	bic.w	r2, r2, #32
 8007082:	60da      	str	r2, [r3, #12]
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	68da      	ldr	r2, [r3, #12]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007092:	60da      	str	r2, [r3, #12]
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	695a      	ldr	r2, [r3, #20]
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	f022 0201 	bic.w	r2, r2, #1
 80070a2:	615a      	str	r2, [r3, #20]
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	2220      	movs	r2, #32
 80070a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070b0:	2b01      	cmp	r3, #1
 80070b2:	d135      	bne.n	8007120 <UART_Receive_IT+0x15e>
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	2200      	movs	r2, #0
 80070b8:	631a      	str	r2, [r3, #48]	; 0x30
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	330c      	adds	r3, #12
 80070c0:	617b      	str	r3, [r7, #20]
 80070c2:	697b      	ldr	r3, [r7, #20]
 80070c4:	e853 3f00 	ldrex	r3, [r3]
 80070c8:	613b      	str	r3, [r7, #16]
 80070ca:	693b      	ldr	r3, [r7, #16]
 80070cc:	f023 0310 	bic.w	r3, r3, #16
 80070d0:	627b      	str	r3, [r7, #36]	; 0x24
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	330c      	adds	r3, #12
 80070d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80070da:	623a      	str	r2, [r7, #32]
 80070dc:	61fb      	str	r3, [r7, #28]
 80070de:	69f9      	ldr	r1, [r7, #28]
 80070e0:	6a3a      	ldr	r2, [r7, #32]
 80070e2:	e841 2300 	strex	r3, r2, [r1]
 80070e6:	61bb      	str	r3, [r7, #24]
 80070e8:	69bb      	ldr	r3, [r7, #24]
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d1e5      	bne.n	80070ba <UART_Receive_IT+0xf8>
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	f003 0310 	and.w	r3, r3, #16
 80070f8:	2b10      	cmp	r3, #16
 80070fa:	d10a      	bne.n	8007112 <UART_Receive_IT+0x150>
 80070fc:	2300      	movs	r3, #0
 80070fe:	60fb      	str	r3, [r7, #12]
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	60fb      	str	r3, [r7, #12]
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	681b      	ldr	r3, [r3, #0]
 800710c:	685b      	ldr	r3, [r3, #4]
 800710e:	60fb      	str	r3, [r7, #12]
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007116:	4619      	mov	r1, r3
 8007118:	6878      	ldr	r0, [r7, #4]
 800711a:	f7ff fdbf 	bl	8006c9c <HAL_UARTEx_RxEventCallback>
 800711e:	e002      	b.n	8007126 <UART_Receive_IT+0x164>
 8007120:	6878      	ldr	r0, [r7, #4]
 8007122:	f7fb fc1f 	bl	8002964 <HAL_UART_RxCpltCallback>
 8007126:	2300      	movs	r3, #0
 8007128:	e002      	b.n	8007130 <UART_Receive_IT+0x16e>
 800712a:	2300      	movs	r3, #0
 800712c:	e000      	b.n	8007130 <UART_Receive_IT+0x16e>
 800712e:	2302      	movs	r3, #2
 8007130:	4618      	mov	r0, r3
 8007132:	3730      	adds	r7, #48	; 0x30
 8007134:	46bd      	mov	sp, r7
 8007136:	bd80      	pop	{r7, pc}

08007138 <UART_SetConfig>:
 8007138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800713c:	b09f      	sub	sp, #124	; 0x7c
 800713e:	af00      	add	r7, sp, #0
 8007140:	66f8      	str	r0, [r7, #108]	; 0x6c
 8007142:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	691b      	ldr	r3, [r3, #16]
 8007148:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800714c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800714e:	68d9      	ldr	r1, [r3, #12]
 8007150:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007152:	681a      	ldr	r2, [r3, #0]
 8007154:	ea40 0301 	orr.w	r3, r0, r1
 8007158:	6113      	str	r3, [r2, #16]
 800715a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800715c:	689a      	ldr	r2, [r3, #8]
 800715e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007160:	691b      	ldr	r3, [r3, #16]
 8007162:	431a      	orrs	r2, r3
 8007164:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007166:	695b      	ldr	r3, [r3, #20]
 8007168:	431a      	orrs	r2, r3
 800716a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800716c:	69db      	ldr	r3, [r3, #28]
 800716e:	4313      	orrs	r3, r2
 8007170:	673b      	str	r3, [r7, #112]	; 0x70
 8007172:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	68db      	ldr	r3, [r3, #12]
 8007178:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800717c:	f021 010c 	bic.w	r1, r1, #12
 8007180:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007182:	681a      	ldr	r2, [r3, #0]
 8007184:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007186:	430b      	orrs	r3, r1
 8007188:	60d3      	str	r3, [r2, #12]
 800718a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	695b      	ldr	r3, [r3, #20]
 8007190:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8007194:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007196:	6999      	ldr	r1, [r3, #24]
 8007198:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800719a:	681a      	ldr	r2, [r3, #0]
 800719c:	ea40 0301 	orr.w	r3, r0, r1
 80071a0:	6153      	str	r3, [r2, #20]
 80071a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80071a4:	681a      	ldr	r2, [r3, #0]
 80071a6:	4bc5      	ldr	r3, [pc, #788]	; (80074bc <UART_SetConfig+0x384>)
 80071a8:	429a      	cmp	r2, r3
 80071aa:	d004      	beq.n	80071b6 <UART_SetConfig+0x7e>
 80071ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80071ae:	681a      	ldr	r2, [r3, #0]
 80071b0:	4bc3      	ldr	r3, [pc, #780]	; (80074c0 <UART_SetConfig+0x388>)
 80071b2:	429a      	cmp	r2, r3
 80071b4:	d103      	bne.n	80071be <UART_SetConfig+0x86>
 80071b6:	f7fd fc09 	bl	80049cc <HAL_RCC_GetPCLK2Freq>
 80071ba:	6778      	str	r0, [r7, #116]	; 0x74
 80071bc:	e002      	b.n	80071c4 <UART_SetConfig+0x8c>
 80071be:	f7fd fbf1 	bl	80049a4 <HAL_RCC_GetPCLK1Freq>
 80071c2:	6778      	str	r0, [r7, #116]	; 0x74
 80071c4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80071c6:	69db      	ldr	r3, [r3, #28]
 80071c8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80071cc:	f040 80b6 	bne.w	800733c <UART_SetConfig+0x204>
 80071d0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80071d2:	461c      	mov	r4, r3
 80071d4:	f04f 0500 	mov.w	r5, #0
 80071d8:	4622      	mov	r2, r4
 80071da:	462b      	mov	r3, r5
 80071dc:	1891      	adds	r1, r2, r2
 80071de:	6439      	str	r1, [r7, #64]	; 0x40
 80071e0:	415b      	adcs	r3, r3
 80071e2:	647b      	str	r3, [r7, #68]	; 0x44
 80071e4:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80071e8:	1912      	adds	r2, r2, r4
 80071ea:	eb45 0303 	adc.w	r3, r5, r3
 80071ee:	f04f 0000 	mov.w	r0, #0
 80071f2:	f04f 0100 	mov.w	r1, #0
 80071f6:	00d9      	lsls	r1, r3, #3
 80071f8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80071fc:	00d0      	lsls	r0, r2, #3
 80071fe:	4602      	mov	r2, r0
 8007200:	460b      	mov	r3, r1
 8007202:	1911      	adds	r1, r2, r4
 8007204:	6639      	str	r1, [r7, #96]	; 0x60
 8007206:	416b      	adcs	r3, r5
 8007208:	667b      	str	r3, [r7, #100]	; 0x64
 800720a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800720c:	685b      	ldr	r3, [r3, #4]
 800720e:	461a      	mov	r2, r3
 8007210:	f04f 0300 	mov.w	r3, #0
 8007214:	1891      	adds	r1, r2, r2
 8007216:	63b9      	str	r1, [r7, #56]	; 0x38
 8007218:	415b      	adcs	r3, r3
 800721a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800721c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8007220:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8007224:	f7f9 f824 	bl	8000270 <__aeabi_uldivmod>
 8007228:	4602      	mov	r2, r0
 800722a:	460b      	mov	r3, r1
 800722c:	4ba5      	ldr	r3, [pc, #660]	; (80074c4 <UART_SetConfig+0x38c>)
 800722e:	fba3 2302 	umull	r2, r3, r3, r2
 8007232:	095b      	lsrs	r3, r3, #5
 8007234:	011e      	lsls	r6, r3, #4
 8007236:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8007238:	461c      	mov	r4, r3
 800723a:	f04f 0500 	mov.w	r5, #0
 800723e:	4622      	mov	r2, r4
 8007240:	462b      	mov	r3, r5
 8007242:	1891      	adds	r1, r2, r2
 8007244:	6339      	str	r1, [r7, #48]	; 0x30
 8007246:	415b      	adcs	r3, r3
 8007248:	637b      	str	r3, [r7, #52]	; 0x34
 800724a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800724e:	1912      	adds	r2, r2, r4
 8007250:	eb45 0303 	adc.w	r3, r5, r3
 8007254:	f04f 0000 	mov.w	r0, #0
 8007258:	f04f 0100 	mov.w	r1, #0
 800725c:	00d9      	lsls	r1, r3, #3
 800725e:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8007262:	00d0      	lsls	r0, r2, #3
 8007264:	4602      	mov	r2, r0
 8007266:	460b      	mov	r3, r1
 8007268:	1911      	adds	r1, r2, r4
 800726a:	65b9      	str	r1, [r7, #88]	; 0x58
 800726c:	416b      	adcs	r3, r5
 800726e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007270:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007272:	685b      	ldr	r3, [r3, #4]
 8007274:	461a      	mov	r2, r3
 8007276:	f04f 0300 	mov.w	r3, #0
 800727a:	1891      	adds	r1, r2, r2
 800727c:	62b9      	str	r1, [r7, #40]	; 0x28
 800727e:	415b      	adcs	r3, r3
 8007280:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007282:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8007286:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800728a:	f7f8 fff1 	bl	8000270 <__aeabi_uldivmod>
 800728e:	4602      	mov	r2, r0
 8007290:	460b      	mov	r3, r1
 8007292:	4b8c      	ldr	r3, [pc, #560]	; (80074c4 <UART_SetConfig+0x38c>)
 8007294:	fba3 1302 	umull	r1, r3, r3, r2
 8007298:	095b      	lsrs	r3, r3, #5
 800729a:	2164      	movs	r1, #100	; 0x64
 800729c:	fb01 f303 	mul.w	r3, r1, r3
 80072a0:	1ad3      	subs	r3, r2, r3
 80072a2:	00db      	lsls	r3, r3, #3
 80072a4:	3332      	adds	r3, #50	; 0x32
 80072a6:	4a87      	ldr	r2, [pc, #540]	; (80074c4 <UART_SetConfig+0x38c>)
 80072a8:	fba2 2303 	umull	r2, r3, r2, r3
 80072ac:	095b      	lsrs	r3, r3, #5
 80072ae:	005b      	lsls	r3, r3, #1
 80072b0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80072b4:	441e      	add	r6, r3
 80072b6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80072b8:	4618      	mov	r0, r3
 80072ba:	f04f 0100 	mov.w	r1, #0
 80072be:	4602      	mov	r2, r0
 80072c0:	460b      	mov	r3, r1
 80072c2:	1894      	adds	r4, r2, r2
 80072c4:	623c      	str	r4, [r7, #32]
 80072c6:	415b      	adcs	r3, r3
 80072c8:	627b      	str	r3, [r7, #36]	; 0x24
 80072ca:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80072ce:	1812      	adds	r2, r2, r0
 80072d0:	eb41 0303 	adc.w	r3, r1, r3
 80072d4:	f04f 0400 	mov.w	r4, #0
 80072d8:	f04f 0500 	mov.w	r5, #0
 80072dc:	00dd      	lsls	r5, r3, #3
 80072de:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 80072e2:	00d4      	lsls	r4, r2, #3
 80072e4:	4622      	mov	r2, r4
 80072e6:	462b      	mov	r3, r5
 80072e8:	1814      	adds	r4, r2, r0
 80072ea:	653c      	str	r4, [r7, #80]	; 0x50
 80072ec:	414b      	adcs	r3, r1
 80072ee:	657b      	str	r3, [r7, #84]	; 0x54
 80072f0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80072f2:	685b      	ldr	r3, [r3, #4]
 80072f4:	461a      	mov	r2, r3
 80072f6:	f04f 0300 	mov.w	r3, #0
 80072fa:	1891      	adds	r1, r2, r2
 80072fc:	61b9      	str	r1, [r7, #24]
 80072fe:	415b      	adcs	r3, r3
 8007300:	61fb      	str	r3, [r7, #28]
 8007302:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007306:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800730a:	f7f8 ffb1 	bl	8000270 <__aeabi_uldivmod>
 800730e:	4602      	mov	r2, r0
 8007310:	460b      	mov	r3, r1
 8007312:	4b6c      	ldr	r3, [pc, #432]	; (80074c4 <UART_SetConfig+0x38c>)
 8007314:	fba3 1302 	umull	r1, r3, r3, r2
 8007318:	095b      	lsrs	r3, r3, #5
 800731a:	2164      	movs	r1, #100	; 0x64
 800731c:	fb01 f303 	mul.w	r3, r1, r3
 8007320:	1ad3      	subs	r3, r2, r3
 8007322:	00db      	lsls	r3, r3, #3
 8007324:	3332      	adds	r3, #50	; 0x32
 8007326:	4a67      	ldr	r2, [pc, #412]	; (80074c4 <UART_SetConfig+0x38c>)
 8007328:	fba2 2303 	umull	r2, r3, r2, r3
 800732c:	095b      	lsrs	r3, r3, #5
 800732e:	f003 0207 	and.w	r2, r3, #7
 8007332:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007334:	681b      	ldr	r3, [r3, #0]
 8007336:	4432      	add	r2, r6
 8007338:	609a      	str	r2, [r3, #8]
 800733a:	e0b9      	b.n	80074b0 <UART_SetConfig+0x378>
 800733c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800733e:	461c      	mov	r4, r3
 8007340:	f04f 0500 	mov.w	r5, #0
 8007344:	4622      	mov	r2, r4
 8007346:	462b      	mov	r3, r5
 8007348:	1891      	adds	r1, r2, r2
 800734a:	6139      	str	r1, [r7, #16]
 800734c:	415b      	adcs	r3, r3
 800734e:	617b      	str	r3, [r7, #20]
 8007350:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8007354:	1912      	adds	r2, r2, r4
 8007356:	eb45 0303 	adc.w	r3, r5, r3
 800735a:	f04f 0000 	mov.w	r0, #0
 800735e:	f04f 0100 	mov.w	r1, #0
 8007362:	00d9      	lsls	r1, r3, #3
 8007364:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8007368:	00d0      	lsls	r0, r2, #3
 800736a:	4602      	mov	r2, r0
 800736c:	460b      	mov	r3, r1
 800736e:	eb12 0804 	adds.w	r8, r2, r4
 8007372:	eb43 0905 	adc.w	r9, r3, r5
 8007376:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007378:	685b      	ldr	r3, [r3, #4]
 800737a:	4618      	mov	r0, r3
 800737c:	f04f 0100 	mov.w	r1, #0
 8007380:	f04f 0200 	mov.w	r2, #0
 8007384:	f04f 0300 	mov.w	r3, #0
 8007388:	008b      	lsls	r3, r1, #2
 800738a:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800738e:	0082      	lsls	r2, r0, #2
 8007390:	4640      	mov	r0, r8
 8007392:	4649      	mov	r1, r9
 8007394:	f7f8 ff6c 	bl	8000270 <__aeabi_uldivmod>
 8007398:	4602      	mov	r2, r0
 800739a:	460b      	mov	r3, r1
 800739c:	4b49      	ldr	r3, [pc, #292]	; (80074c4 <UART_SetConfig+0x38c>)
 800739e:	fba3 2302 	umull	r2, r3, r3, r2
 80073a2:	095b      	lsrs	r3, r3, #5
 80073a4:	011e      	lsls	r6, r3, #4
 80073a6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80073a8:	4618      	mov	r0, r3
 80073aa:	f04f 0100 	mov.w	r1, #0
 80073ae:	4602      	mov	r2, r0
 80073b0:	460b      	mov	r3, r1
 80073b2:	1894      	adds	r4, r2, r2
 80073b4:	60bc      	str	r4, [r7, #8]
 80073b6:	415b      	adcs	r3, r3
 80073b8:	60fb      	str	r3, [r7, #12]
 80073ba:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80073be:	1812      	adds	r2, r2, r0
 80073c0:	eb41 0303 	adc.w	r3, r1, r3
 80073c4:	f04f 0400 	mov.w	r4, #0
 80073c8:	f04f 0500 	mov.w	r5, #0
 80073cc:	00dd      	lsls	r5, r3, #3
 80073ce:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 80073d2:	00d4      	lsls	r4, r2, #3
 80073d4:	4622      	mov	r2, r4
 80073d6:	462b      	mov	r3, r5
 80073d8:	1814      	adds	r4, r2, r0
 80073da:	64bc      	str	r4, [r7, #72]	; 0x48
 80073dc:	414b      	adcs	r3, r1
 80073de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80073e0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80073e2:	685b      	ldr	r3, [r3, #4]
 80073e4:	4618      	mov	r0, r3
 80073e6:	f04f 0100 	mov.w	r1, #0
 80073ea:	f04f 0200 	mov.w	r2, #0
 80073ee:	f04f 0300 	mov.w	r3, #0
 80073f2:	008b      	lsls	r3, r1, #2
 80073f4:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 80073f8:	0082      	lsls	r2, r0, #2
 80073fa:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80073fe:	f7f8 ff37 	bl	8000270 <__aeabi_uldivmod>
 8007402:	4602      	mov	r2, r0
 8007404:	460b      	mov	r3, r1
 8007406:	4b2f      	ldr	r3, [pc, #188]	; (80074c4 <UART_SetConfig+0x38c>)
 8007408:	fba3 1302 	umull	r1, r3, r3, r2
 800740c:	095b      	lsrs	r3, r3, #5
 800740e:	2164      	movs	r1, #100	; 0x64
 8007410:	fb01 f303 	mul.w	r3, r1, r3
 8007414:	1ad3      	subs	r3, r2, r3
 8007416:	011b      	lsls	r3, r3, #4
 8007418:	3332      	adds	r3, #50	; 0x32
 800741a:	4a2a      	ldr	r2, [pc, #168]	; (80074c4 <UART_SetConfig+0x38c>)
 800741c:	fba2 2303 	umull	r2, r3, r2, r3
 8007420:	095b      	lsrs	r3, r3, #5
 8007422:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007426:	441e      	add	r6, r3
 8007428:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800742a:	4618      	mov	r0, r3
 800742c:	f04f 0100 	mov.w	r1, #0
 8007430:	4602      	mov	r2, r0
 8007432:	460b      	mov	r3, r1
 8007434:	1894      	adds	r4, r2, r2
 8007436:	603c      	str	r4, [r7, #0]
 8007438:	415b      	adcs	r3, r3
 800743a:	607b      	str	r3, [r7, #4]
 800743c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007440:	1812      	adds	r2, r2, r0
 8007442:	eb41 0303 	adc.w	r3, r1, r3
 8007446:	f04f 0400 	mov.w	r4, #0
 800744a:	f04f 0500 	mov.w	r5, #0
 800744e:	00dd      	lsls	r5, r3, #3
 8007450:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 8007454:	00d4      	lsls	r4, r2, #3
 8007456:	4622      	mov	r2, r4
 8007458:	462b      	mov	r3, r5
 800745a:	eb12 0a00 	adds.w	sl, r2, r0
 800745e:	eb43 0b01 	adc.w	fp, r3, r1
 8007462:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007464:	685b      	ldr	r3, [r3, #4]
 8007466:	4618      	mov	r0, r3
 8007468:	f04f 0100 	mov.w	r1, #0
 800746c:	f04f 0200 	mov.w	r2, #0
 8007470:	f04f 0300 	mov.w	r3, #0
 8007474:	008b      	lsls	r3, r1, #2
 8007476:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800747a:	0082      	lsls	r2, r0, #2
 800747c:	4650      	mov	r0, sl
 800747e:	4659      	mov	r1, fp
 8007480:	f7f8 fef6 	bl	8000270 <__aeabi_uldivmod>
 8007484:	4602      	mov	r2, r0
 8007486:	460b      	mov	r3, r1
 8007488:	4b0e      	ldr	r3, [pc, #56]	; (80074c4 <UART_SetConfig+0x38c>)
 800748a:	fba3 1302 	umull	r1, r3, r3, r2
 800748e:	095b      	lsrs	r3, r3, #5
 8007490:	2164      	movs	r1, #100	; 0x64
 8007492:	fb01 f303 	mul.w	r3, r1, r3
 8007496:	1ad3      	subs	r3, r2, r3
 8007498:	011b      	lsls	r3, r3, #4
 800749a:	3332      	adds	r3, #50	; 0x32
 800749c:	4a09      	ldr	r2, [pc, #36]	; (80074c4 <UART_SetConfig+0x38c>)
 800749e:	fba2 2303 	umull	r2, r3, r2, r3
 80074a2:	095b      	lsrs	r3, r3, #5
 80074a4:	f003 020f 	and.w	r2, r3, #15
 80074a8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	4432      	add	r2, r6
 80074ae:	609a      	str	r2, [r3, #8]
 80074b0:	bf00      	nop
 80074b2:	377c      	adds	r7, #124	; 0x7c
 80074b4:	46bd      	mov	sp, r7
 80074b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074ba:	bf00      	nop
 80074bc:	40011000 	.word	0x40011000
 80074c0:	40011400 	.word	0x40011400
 80074c4:	51eb851f 	.word	0x51eb851f

080074c8 <FSMC_NORSRAM_Init>:
 80074c8:	b480      	push	{r7}
 80074ca:	b085      	sub	sp, #20
 80074cc:	af00      	add	r7, sp, #0
 80074ce:	6078      	str	r0, [r7, #4]
 80074d0:	6039      	str	r1, [r7, #0]
 80074d2:	2300      	movs	r3, #0
 80074d4:	60fb      	str	r3, [r7, #12]
 80074d6:	683b      	ldr	r3, [r7, #0]
 80074d8:	681a      	ldr	r2, [r3, #0]
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80074e0:	60fb      	str	r3, [r7, #12]
 80074e2:	68fa      	ldr	r2, [r7, #12]
 80074e4:	4b20      	ldr	r3, [pc, #128]	; (8007568 <FSMC_NORSRAM_Init+0xa0>)
 80074e6:	4013      	ands	r3, r2
 80074e8:	60fb      	str	r3, [r7, #12]
 80074ea:	683b      	ldr	r3, [r7, #0]
 80074ec:	685a      	ldr	r2, [r3, #4]
 80074ee:	683b      	ldr	r3, [r7, #0]
 80074f0:	689b      	ldr	r3, [r3, #8]
 80074f2:	431a      	orrs	r2, r3
 80074f4:	683b      	ldr	r3, [r7, #0]
 80074f6:	68db      	ldr	r3, [r3, #12]
 80074f8:	431a      	orrs	r2, r3
 80074fa:	683b      	ldr	r3, [r7, #0]
 80074fc:	691b      	ldr	r3, [r3, #16]
 80074fe:	431a      	orrs	r2, r3
 8007500:	683b      	ldr	r3, [r7, #0]
 8007502:	695b      	ldr	r3, [r3, #20]
 8007504:	431a      	orrs	r2, r3
 8007506:	683b      	ldr	r3, [r7, #0]
 8007508:	699b      	ldr	r3, [r3, #24]
 800750a:	431a      	orrs	r2, r3
 800750c:	683b      	ldr	r3, [r7, #0]
 800750e:	69db      	ldr	r3, [r3, #28]
 8007510:	431a      	orrs	r2, r3
 8007512:	683b      	ldr	r3, [r7, #0]
 8007514:	6a1b      	ldr	r3, [r3, #32]
 8007516:	431a      	orrs	r2, r3
 8007518:	683b      	ldr	r3, [r7, #0]
 800751a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800751c:	431a      	orrs	r2, r3
 800751e:	683b      	ldr	r3, [r7, #0]
 8007520:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007522:	431a      	orrs	r2, r3
 8007524:	683b      	ldr	r3, [r7, #0]
 8007526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007528:	431a      	orrs	r2, r3
 800752a:	683b      	ldr	r3, [r7, #0]
 800752c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800752e:	431a      	orrs	r2, r3
 8007530:	683b      	ldr	r3, [r7, #0]
 8007532:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007534:	4313      	orrs	r3, r2
 8007536:	68fa      	ldr	r2, [r7, #12]
 8007538:	4313      	orrs	r3, r2
 800753a:	60fb      	str	r3, [r7, #12]
 800753c:	683b      	ldr	r3, [r7, #0]
 800753e:	689b      	ldr	r3, [r3, #8]
 8007540:	2b08      	cmp	r3, #8
 8007542:	d103      	bne.n	800754c <FSMC_NORSRAM_Init+0x84>
 8007544:	68fb      	ldr	r3, [r7, #12]
 8007546:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800754a:	60fb      	str	r3, [r7, #12]
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	681a      	ldr	r2, [r3, #0]
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	68f9      	ldr	r1, [r7, #12]
 8007554:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007558:	2300      	movs	r3, #0
 800755a:	4618      	mov	r0, r3
 800755c:	3714      	adds	r7, #20
 800755e:	46bd      	mov	sp, r7
 8007560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007564:	4770      	bx	lr
 8007566:	bf00      	nop
 8007568:	fff00080 	.word	0xfff00080

0800756c <FSMC_NORSRAM_Timing_Init>:
 800756c:	b480      	push	{r7}
 800756e:	b087      	sub	sp, #28
 8007570:	af00      	add	r7, sp, #0
 8007572:	60f8      	str	r0, [r7, #12]
 8007574:	60b9      	str	r1, [r7, #8]
 8007576:	607a      	str	r2, [r7, #4]
 8007578:	2300      	movs	r3, #0
 800757a:	617b      	str	r3, [r7, #20]
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	1c5a      	adds	r2, r3, #1
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007586:	617b      	str	r3, [r7, #20]
 8007588:	697b      	ldr	r3, [r7, #20]
 800758a:	f003 4340 	and.w	r3, r3, #3221225472	; 0xc0000000
 800758e:	617b      	str	r3, [r7, #20]
 8007590:	68bb      	ldr	r3, [r7, #8]
 8007592:	681a      	ldr	r2, [r3, #0]
 8007594:	68bb      	ldr	r3, [r7, #8]
 8007596:	685b      	ldr	r3, [r3, #4]
 8007598:	011b      	lsls	r3, r3, #4
 800759a:	431a      	orrs	r2, r3
 800759c:	68bb      	ldr	r3, [r7, #8]
 800759e:	689b      	ldr	r3, [r3, #8]
 80075a0:	021b      	lsls	r3, r3, #8
 80075a2:	431a      	orrs	r2, r3
 80075a4:	68bb      	ldr	r3, [r7, #8]
 80075a6:	68db      	ldr	r3, [r3, #12]
 80075a8:	041b      	lsls	r3, r3, #16
 80075aa:	431a      	orrs	r2, r3
 80075ac:	68bb      	ldr	r3, [r7, #8]
 80075ae:	691b      	ldr	r3, [r3, #16]
 80075b0:	3b01      	subs	r3, #1
 80075b2:	051b      	lsls	r3, r3, #20
 80075b4:	431a      	orrs	r2, r3
 80075b6:	68bb      	ldr	r3, [r7, #8]
 80075b8:	695b      	ldr	r3, [r3, #20]
 80075ba:	3b02      	subs	r3, #2
 80075bc:	061b      	lsls	r3, r3, #24
 80075be:	431a      	orrs	r2, r3
 80075c0:	68bb      	ldr	r3, [r7, #8]
 80075c2:	699b      	ldr	r3, [r3, #24]
 80075c4:	4313      	orrs	r3, r2
 80075c6:	697a      	ldr	r2, [r7, #20]
 80075c8:	4313      	orrs	r3, r2
 80075ca:	617b      	str	r3, [r7, #20]
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	1c5a      	adds	r2, r3, #1
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	6979      	ldr	r1, [r7, #20]
 80075d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80075d8:	2300      	movs	r3, #0
 80075da:	4618      	mov	r0, r3
 80075dc:	371c      	adds	r7, #28
 80075de:	46bd      	mov	sp, r7
 80075e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e4:	4770      	bx	lr
	...

080075e8 <FSMC_NORSRAM_Extended_Timing_Init>:
 80075e8:	b480      	push	{r7}
 80075ea:	b087      	sub	sp, #28
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	60f8      	str	r0, [r7, #12]
 80075f0:	60b9      	str	r1, [r7, #8]
 80075f2:	607a      	str	r2, [r7, #4]
 80075f4:	603b      	str	r3, [r7, #0]
 80075f6:	2300      	movs	r3, #0
 80075f8:	617b      	str	r3, [r7, #20]
 80075fa:	683b      	ldr	r3, [r7, #0]
 80075fc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007600:	d122      	bne.n	8007648 <FSMC_NORSRAM_Extended_Timing_Init+0x60>
 8007602:	68fb      	ldr	r3, [r7, #12]
 8007604:	687a      	ldr	r2, [r7, #4]
 8007606:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800760a:	617b      	str	r3, [r7, #20]
 800760c:	697a      	ldr	r2, [r7, #20]
 800760e:	4b15      	ldr	r3, [pc, #84]	; (8007664 <FSMC_NORSRAM_Extended_Timing_Init+0x7c>)
 8007610:	4013      	ands	r3, r2
 8007612:	617b      	str	r3, [r7, #20]
 8007614:	68bb      	ldr	r3, [r7, #8]
 8007616:	681a      	ldr	r2, [r3, #0]
 8007618:	68bb      	ldr	r3, [r7, #8]
 800761a:	685b      	ldr	r3, [r3, #4]
 800761c:	011b      	lsls	r3, r3, #4
 800761e:	431a      	orrs	r2, r3
 8007620:	68bb      	ldr	r3, [r7, #8]
 8007622:	689b      	ldr	r3, [r3, #8]
 8007624:	021b      	lsls	r3, r3, #8
 8007626:	431a      	orrs	r2, r3
 8007628:	68bb      	ldr	r3, [r7, #8]
 800762a:	68db      	ldr	r3, [r3, #12]
 800762c:	041b      	lsls	r3, r3, #16
 800762e:	431a      	orrs	r2, r3
 8007630:	68bb      	ldr	r3, [r7, #8]
 8007632:	699b      	ldr	r3, [r3, #24]
 8007634:	4313      	orrs	r3, r2
 8007636:	697a      	ldr	r2, [r7, #20]
 8007638:	4313      	orrs	r3, r2
 800763a:	617b      	str	r3, [r7, #20]
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	687a      	ldr	r2, [r7, #4]
 8007640:	6979      	ldr	r1, [r7, #20]
 8007642:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007646:	e005      	b.n	8007654 <FSMC_NORSRAM_Extended_Timing_Init+0x6c>
 8007648:	68fb      	ldr	r3, [r7, #12]
 800764a:	687a      	ldr	r2, [r7, #4]
 800764c:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8007650:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007654:	2300      	movs	r3, #0
 8007656:	4618      	mov	r0, r3
 8007658:	371c      	adds	r7, #28
 800765a:	46bd      	mov	sp, r7
 800765c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007660:	4770      	bx	lr
 8007662:	bf00      	nop
 8007664:	cff00000 	.word	0xcff00000

08007668 <__errno>:
 8007668:	4b01      	ldr	r3, [pc, #4]	; (8007670 <__errno+0x8>)
 800766a:	6818      	ldr	r0, [r3, #0]
 800766c:	4770      	bx	lr
 800766e:	bf00      	nop
 8007670:	2000002c 	.word	0x2000002c

08007674 <__libc_init_array>:
 8007674:	b570      	push	{r4, r5, r6, lr}
 8007676:	4d0d      	ldr	r5, [pc, #52]	; (80076ac <__libc_init_array+0x38>)
 8007678:	4c0d      	ldr	r4, [pc, #52]	; (80076b0 <__libc_init_array+0x3c>)
 800767a:	1b64      	subs	r4, r4, r5
 800767c:	10a4      	asrs	r4, r4, #2
 800767e:	2600      	movs	r6, #0
 8007680:	42a6      	cmp	r6, r4
 8007682:	d109      	bne.n	8007698 <__libc_init_array+0x24>
 8007684:	4d0b      	ldr	r5, [pc, #44]	; (80076b4 <__libc_init_array+0x40>)
 8007686:	4c0c      	ldr	r4, [pc, #48]	; (80076b8 <__libc_init_array+0x44>)
 8007688:	f001 f822 	bl	80086d0 <_init>
 800768c:	1b64      	subs	r4, r4, r5
 800768e:	10a4      	asrs	r4, r4, #2
 8007690:	2600      	movs	r6, #0
 8007692:	42a6      	cmp	r6, r4
 8007694:	d105      	bne.n	80076a2 <__libc_init_array+0x2e>
 8007696:	bd70      	pop	{r4, r5, r6, pc}
 8007698:	f855 3b04 	ldr.w	r3, [r5], #4
 800769c:	4798      	blx	r3
 800769e:	3601      	adds	r6, #1
 80076a0:	e7ee      	b.n	8007680 <__libc_init_array+0xc>
 80076a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80076a6:	4798      	blx	r3
 80076a8:	3601      	adds	r6, #1
 80076aa:	e7f2      	b.n	8007692 <__libc_init_array+0x1e>
 80076ac:	0800b82c 	.word	0x0800b82c
 80076b0:	0800b82c 	.word	0x0800b82c
 80076b4:	0800b82c 	.word	0x0800b82c
 80076b8:	0800b830 	.word	0x0800b830

080076bc <memset>:
 80076bc:	4402      	add	r2, r0
 80076be:	4603      	mov	r3, r0
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d100      	bne.n	80076c6 <memset+0xa>
 80076c4:	4770      	bx	lr
 80076c6:	f803 1b01 	strb.w	r1, [r3], #1
 80076ca:	e7f9      	b.n	80076c0 <memset+0x4>

080076cc <rand>:
 80076cc:	4b17      	ldr	r3, [pc, #92]	; (800772c <rand+0x60>)
 80076ce:	b510      	push	{r4, lr}
 80076d0:	681c      	ldr	r4, [r3, #0]
 80076d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80076d4:	b9b3      	cbnz	r3, 8007704 <rand+0x38>
 80076d6:	2018      	movs	r0, #24
 80076d8:	f000 f868 	bl	80077ac <malloc>
 80076dc:	63a0      	str	r0, [r4, #56]	; 0x38
 80076de:	b928      	cbnz	r0, 80076ec <rand+0x20>
 80076e0:	4602      	mov	r2, r0
 80076e2:	4b13      	ldr	r3, [pc, #76]	; (8007730 <rand+0x64>)
 80076e4:	4813      	ldr	r0, [pc, #76]	; (8007734 <rand+0x68>)
 80076e6:	214e      	movs	r1, #78	; 0x4e
 80076e8:	f000 f830 	bl	800774c <__assert_func>
 80076ec:	4a12      	ldr	r2, [pc, #72]	; (8007738 <rand+0x6c>)
 80076ee:	4b13      	ldr	r3, [pc, #76]	; (800773c <rand+0x70>)
 80076f0:	e9c0 2300 	strd	r2, r3, [r0]
 80076f4:	4b12      	ldr	r3, [pc, #72]	; (8007740 <rand+0x74>)
 80076f6:	6083      	str	r3, [r0, #8]
 80076f8:	230b      	movs	r3, #11
 80076fa:	8183      	strh	r3, [r0, #12]
 80076fc:	2201      	movs	r2, #1
 80076fe:	2300      	movs	r3, #0
 8007700:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8007704:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8007706:	480f      	ldr	r0, [pc, #60]	; (8007744 <rand+0x78>)
 8007708:	690a      	ldr	r2, [r1, #16]
 800770a:	694b      	ldr	r3, [r1, #20]
 800770c:	4c0e      	ldr	r4, [pc, #56]	; (8007748 <rand+0x7c>)
 800770e:	4350      	muls	r0, r2
 8007710:	fb04 0003 	mla	r0, r4, r3, r0
 8007714:	fba2 3404 	umull	r3, r4, r2, r4
 8007718:	1c5a      	adds	r2, r3, #1
 800771a:	4404      	add	r4, r0
 800771c:	f144 0000 	adc.w	r0, r4, #0
 8007720:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8007724:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8007728:	bd10      	pop	{r4, pc}
 800772a:	bf00      	nop
 800772c:	2000002c 	.word	0x2000002c
 8007730:	0800b6dc 	.word	0x0800b6dc
 8007734:	0800b6f3 	.word	0x0800b6f3
 8007738:	abcd330e 	.word	0xabcd330e
 800773c:	e66d1234 	.word	0xe66d1234
 8007740:	0005deec 	.word	0x0005deec
 8007744:	5851f42d 	.word	0x5851f42d
 8007748:	4c957f2d 	.word	0x4c957f2d

0800774c <__assert_func>:
 800774c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800774e:	4614      	mov	r4, r2
 8007750:	461a      	mov	r2, r3
 8007752:	4b09      	ldr	r3, [pc, #36]	; (8007778 <__assert_func+0x2c>)
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	4605      	mov	r5, r0
 8007758:	68d8      	ldr	r0, [r3, #12]
 800775a:	b14c      	cbz	r4, 8007770 <__assert_func+0x24>
 800775c:	4b07      	ldr	r3, [pc, #28]	; (800777c <__assert_func+0x30>)
 800775e:	9100      	str	r1, [sp, #0]
 8007760:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007764:	4906      	ldr	r1, [pc, #24]	; (8007780 <__assert_func+0x34>)
 8007766:	462b      	mov	r3, r5
 8007768:	f000 f80e 	bl	8007788 <fiprintf>
 800776c:	f000 fc8e 	bl	800808c <abort>
 8007770:	4b04      	ldr	r3, [pc, #16]	; (8007784 <__assert_func+0x38>)
 8007772:	461c      	mov	r4, r3
 8007774:	e7f3      	b.n	800775e <__assert_func+0x12>
 8007776:	bf00      	nop
 8007778:	2000002c 	.word	0x2000002c
 800777c:	0800b752 	.word	0x0800b752
 8007780:	0800b75f 	.word	0x0800b75f
 8007784:	0800b78d 	.word	0x0800b78d

08007788 <fiprintf>:
 8007788:	b40e      	push	{r1, r2, r3}
 800778a:	b503      	push	{r0, r1, lr}
 800778c:	4601      	mov	r1, r0
 800778e:	ab03      	add	r3, sp, #12
 8007790:	4805      	ldr	r0, [pc, #20]	; (80077a8 <fiprintf+0x20>)
 8007792:	f853 2b04 	ldr.w	r2, [r3], #4
 8007796:	6800      	ldr	r0, [r0, #0]
 8007798:	9301      	str	r3, [sp, #4]
 800779a:	f000 f8e3 	bl	8007964 <_vfiprintf_r>
 800779e:	b002      	add	sp, #8
 80077a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80077a4:	b003      	add	sp, #12
 80077a6:	4770      	bx	lr
 80077a8:	2000002c 	.word	0x2000002c

080077ac <malloc>:
 80077ac:	4b02      	ldr	r3, [pc, #8]	; (80077b8 <malloc+0xc>)
 80077ae:	4601      	mov	r1, r0
 80077b0:	6818      	ldr	r0, [r3, #0]
 80077b2:	f000 b853 	b.w	800785c <_malloc_r>
 80077b6:	bf00      	nop
 80077b8:	2000002c 	.word	0x2000002c

080077bc <_free_r>:
 80077bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80077be:	2900      	cmp	r1, #0
 80077c0:	d048      	beq.n	8007854 <_free_r+0x98>
 80077c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80077c6:	9001      	str	r0, [sp, #4]
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	f1a1 0404 	sub.w	r4, r1, #4
 80077ce:	bfb8      	it	lt
 80077d0:	18e4      	addlt	r4, r4, r3
 80077d2:	f000 fe81 	bl	80084d8 <__malloc_lock>
 80077d6:	4a20      	ldr	r2, [pc, #128]	; (8007858 <_free_r+0x9c>)
 80077d8:	9801      	ldr	r0, [sp, #4]
 80077da:	6813      	ldr	r3, [r2, #0]
 80077dc:	4615      	mov	r5, r2
 80077de:	b933      	cbnz	r3, 80077ee <_free_r+0x32>
 80077e0:	6063      	str	r3, [r4, #4]
 80077e2:	6014      	str	r4, [r2, #0]
 80077e4:	b003      	add	sp, #12
 80077e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80077ea:	f000 be7b 	b.w	80084e4 <__malloc_unlock>
 80077ee:	42a3      	cmp	r3, r4
 80077f0:	d90b      	bls.n	800780a <_free_r+0x4e>
 80077f2:	6821      	ldr	r1, [r4, #0]
 80077f4:	1862      	adds	r2, r4, r1
 80077f6:	4293      	cmp	r3, r2
 80077f8:	bf04      	itt	eq
 80077fa:	681a      	ldreq	r2, [r3, #0]
 80077fc:	685b      	ldreq	r3, [r3, #4]
 80077fe:	6063      	str	r3, [r4, #4]
 8007800:	bf04      	itt	eq
 8007802:	1852      	addeq	r2, r2, r1
 8007804:	6022      	streq	r2, [r4, #0]
 8007806:	602c      	str	r4, [r5, #0]
 8007808:	e7ec      	b.n	80077e4 <_free_r+0x28>
 800780a:	461a      	mov	r2, r3
 800780c:	685b      	ldr	r3, [r3, #4]
 800780e:	b10b      	cbz	r3, 8007814 <_free_r+0x58>
 8007810:	42a3      	cmp	r3, r4
 8007812:	d9fa      	bls.n	800780a <_free_r+0x4e>
 8007814:	6811      	ldr	r1, [r2, #0]
 8007816:	1855      	adds	r5, r2, r1
 8007818:	42a5      	cmp	r5, r4
 800781a:	d10b      	bne.n	8007834 <_free_r+0x78>
 800781c:	6824      	ldr	r4, [r4, #0]
 800781e:	4421      	add	r1, r4
 8007820:	1854      	adds	r4, r2, r1
 8007822:	42a3      	cmp	r3, r4
 8007824:	6011      	str	r1, [r2, #0]
 8007826:	d1dd      	bne.n	80077e4 <_free_r+0x28>
 8007828:	681c      	ldr	r4, [r3, #0]
 800782a:	685b      	ldr	r3, [r3, #4]
 800782c:	6053      	str	r3, [r2, #4]
 800782e:	4421      	add	r1, r4
 8007830:	6011      	str	r1, [r2, #0]
 8007832:	e7d7      	b.n	80077e4 <_free_r+0x28>
 8007834:	d902      	bls.n	800783c <_free_r+0x80>
 8007836:	230c      	movs	r3, #12
 8007838:	6003      	str	r3, [r0, #0]
 800783a:	e7d3      	b.n	80077e4 <_free_r+0x28>
 800783c:	6825      	ldr	r5, [r4, #0]
 800783e:	1961      	adds	r1, r4, r5
 8007840:	428b      	cmp	r3, r1
 8007842:	bf04      	itt	eq
 8007844:	6819      	ldreq	r1, [r3, #0]
 8007846:	685b      	ldreq	r3, [r3, #4]
 8007848:	6063      	str	r3, [r4, #4]
 800784a:	bf04      	itt	eq
 800784c:	1949      	addeq	r1, r1, r5
 800784e:	6021      	streq	r1, [r4, #0]
 8007850:	6054      	str	r4, [r2, #4]
 8007852:	e7c7      	b.n	80077e4 <_free_r+0x28>
 8007854:	b003      	add	sp, #12
 8007856:	bd30      	pop	{r4, r5, pc}
 8007858:	200000cc 	.word	0x200000cc

0800785c <_malloc_r>:
 800785c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800785e:	1ccd      	adds	r5, r1, #3
 8007860:	f025 0503 	bic.w	r5, r5, #3
 8007864:	3508      	adds	r5, #8
 8007866:	2d0c      	cmp	r5, #12
 8007868:	bf38      	it	cc
 800786a:	250c      	movcc	r5, #12
 800786c:	2d00      	cmp	r5, #0
 800786e:	4606      	mov	r6, r0
 8007870:	db01      	blt.n	8007876 <_malloc_r+0x1a>
 8007872:	42a9      	cmp	r1, r5
 8007874:	d903      	bls.n	800787e <_malloc_r+0x22>
 8007876:	230c      	movs	r3, #12
 8007878:	6033      	str	r3, [r6, #0]
 800787a:	2000      	movs	r0, #0
 800787c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800787e:	f000 fe2b 	bl	80084d8 <__malloc_lock>
 8007882:	4921      	ldr	r1, [pc, #132]	; (8007908 <_malloc_r+0xac>)
 8007884:	680a      	ldr	r2, [r1, #0]
 8007886:	4614      	mov	r4, r2
 8007888:	b99c      	cbnz	r4, 80078b2 <_malloc_r+0x56>
 800788a:	4f20      	ldr	r7, [pc, #128]	; (800790c <_malloc_r+0xb0>)
 800788c:	683b      	ldr	r3, [r7, #0]
 800788e:	b923      	cbnz	r3, 800789a <_malloc_r+0x3e>
 8007890:	4621      	mov	r1, r4
 8007892:	4630      	mov	r0, r6
 8007894:	f000 fb2a 	bl	8007eec <_sbrk_r>
 8007898:	6038      	str	r0, [r7, #0]
 800789a:	4629      	mov	r1, r5
 800789c:	4630      	mov	r0, r6
 800789e:	f000 fb25 	bl	8007eec <_sbrk_r>
 80078a2:	1c43      	adds	r3, r0, #1
 80078a4:	d123      	bne.n	80078ee <_malloc_r+0x92>
 80078a6:	230c      	movs	r3, #12
 80078a8:	6033      	str	r3, [r6, #0]
 80078aa:	4630      	mov	r0, r6
 80078ac:	f000 fe1a 	bl	80084e4 <__malloc_unlock>
 80078b0:	e7e3      	b.n	800787a <_malloc_r+0x1e>
 80078b2:	6823      	ldr	r3, [r4, #0]
 80078b4:	1b5b      	subs	r3, r3, r5
 80078b6:	d417      	bmi.n	80078e8 <_malloc_r+0x8c>
 80078b8:	2b0b      	cmp	r3, #11
 80078ba:	d903      	bls.n	80078c4 <_malloc_r+0x68>
 80078bc:	6023      	str	r3, [r4, #0]
 80078be:	441c      	add	r4, r3
 80078c0:	6025      	str	r5, [r4, #0]
 80078c2:	e004      	b.n	80078ce <_malloc_r+0x72>
 80078c4:	6863      	ldr	r3, [r4, #4]
 80078c6:	42a2      	cmp	r2, r4
 80078c8:	bf0c      	ite	eq
 80078ca:	600b      	streq	r3, [r1, #0]
 80078cc:	6053      	strne	r3, [r2, #4]
 80078ce:	4630      	mov	r0, r6
 80078d0:	f000 fe08 	bl	80084e4 <__malloc_unlock>
 80078d4:	f104 000b 	add.w	r0, r4, #11
 80078d8:	1d23      	adds	r3, r4, #4
 80078da:	f020 0007 	bic.w	r0, r0, #7
 80078de:	1ac2      	subs	r2, r0, r3
 80078e0:	d0cc      	beq.n	800787c <_malloc_r+0x20>
 80078e2:	1a1b      	subs	r3, r3, r0
 80078e4:	50a3      	str	r3, [r4, r2]
 80078e6:	e7c9      	b.n	800787c <_malloc_r+0x20>
 80078e8:	4622      	mov	r2, r4
 80078ea:	6864      	ldr	r4, [r4, #4]
 80078ec:	e7cc      	b.n	8007888 <_malloc_r+0x2c>
 80078ee:	1cc4      	adds	r4, r0, #3
 80078f0:	f024 0403 	bic.w	r4, r4, #3
 80078f4:	42a0      	cmp	r0, r4
 80078f6:	d0e3      	beq.n	80078c0 <_malloc_r+0x64>
 80078f8:	1a21      	subs	r1, r4, r0
 80078fa:	4630      	mov	r0, r6
 80078fc:	f000 faf6 	bl	8007eec <_sbrk_r>
 8007900:	3001      	adds	r0, #1
 8007902:	d1dd      	bne.n	80078c0 <_malloc_r+0x64>
 8007904:	e7cf      	b.n	80078a6 <_malloc_r+0x4a>
 8007906:	bf00      	nop
 8007908:	200000cc 	.word	0x200000cc
 800790c:	200000d0 	.word	0x200000d0

08007910 <__sfputc_r>:
 8007910:	6893      	ldr	r3, [r2, #8]
 8007912:	3b01      	subs	r3, #1
 8007914:	2b00      	cmp	r3, #0
 8007916:	b410      	push	{r4}
 8007918:	6093      	str	r3, [r2, #8]
 800791a:	da08      	bge.n	800792e <__sfputc_r+0x1e>
 800791c:	6994      	ldr	r4, [r2, #24]
 800791e:	42a3      	cmp	r3, r4
 8007920:	db01      	blt.n	8007926 <__sfputc_r+0x16>
 8007922:	290a      	cmp	r1, #10
 8007924:	d103      	bne.n	800792e <__sfputc_r+0x1e>
 8007926:	f85d 4b04 	ldr.w	r4, [sp], #4
 800792a:	f000 baef 	b.w	8007f0c <__swbuf_r>
 800792e:	6813      	ldr	r3, [r2, #0]
 8007930:	1c58      	adds	r0, r3, #1
 8007932:	6010      	str	r0, [r2, #0]
 8007934:	7019      	strb	r1, [r3, #0]
 8007936:	4608      	mov	r0, r1
 8007938:	f85d 4b04 	ldr.w	r4, [sp], #4
 800793c:	4770      	bx	lr

0800793e <__sfputs_r>:
 800793e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007940:	4606      	mov	r6, r0
 8007942:	460f      	mov	r7, r1
 8007944:	4614      	mov	r4, r2
 8007946:	18d5      	adds	r5, r2, r3
 8007948:	42ac      	cmp	r4, r5
 800794a:	d101      	bne.n	8007950 <__sfputs_r+0x12>
 800794c:	2000      	movs	r0, #0
 800794e:	e007      	b.n	8007960 <__sfputs_r+0x22>
 8007950:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007954:	463a      	mov	r2, r7
 8007956:	4630      	mov	r0, r6
 8007958:	f7ff ffda 	bl	8007910 <__sfputc_r>
 800795c:	1c43      	adds	r3, r0, #1
 800795e:	d1f3      	bne.n	8007948 <__sfputs_r+0xa>
 8007960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007964 <_vfiprintf_r>:
 8007964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007968:	460d      	mov	r5, r1
 800796a:	b09d      	sub	sp, #116	; 0x74
 800796c:	4614      	mov	r4, r2
 800796e:	4698      	mov	r8, r3
 8007970:	4606      	mov	r6, r0
 8007972:	b118      	cbz	r0, 800797c <_vfiprintf_r+0x18>
 8007974:	6983      	ldr	r3, [r0, #24]
 8007976:	b90b      	cbnz	r3, 800797c <_vfiprintf_r+0x18>
 8007978:	f000 fcaa 	bl	80082d0 <__sinit>
 800797c:	4b89      	ldr	r3, [pc, #548]	; (8007ba4 <_vfiprintf_r+0x240>)
 800797e:	429d      	cmp	r5, r3
 8007980:	d11b      	bne.n	80079ba <_vfiprintf_r+0x56>
 8007982:	6875      	ldr	r5, [r6, #4]
 8007984:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007986:	07d9      	lsls	r1, r3, #31
 8007988:	d405      	bmi.n	8007996 <_vfiprintf_r+0x32>
 800798a:	89ab      	ldrh	r3, [r5, #12]
 800798c:	059a      	lsls	r2, r3, #22
 800798e:	d402      	bmi.n	8007996 <_vfiprintf_r+0x32>
 8007990:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007992:	f000 fd3b 	bl	800840c <__retarget_lock_acquire_recursive>
 8007996:	89ab      	ldrh	r3, [r5, #12]
 8007998:	071b      	lsls	r3, r3, #28
 800799a:	d501      	bpl.n	80079a0 <_vfiprintf_r+0x3c>
 800799c:	692b      	ldr	r3, [r5, #16]
 800799e:	b9eb      	cbnz	r3, 80079dc <_vfiprintf_r+0x78>
 80079a0:	4629      	mov	r1, r5
 80079a2:	4630      	mov	r0, r6
 80079a4:	f000 fb04 	bl	8007fb0 <__swsetup_r>
 80079a8:	b1c0      	cbz	r0, 80079dc <_vfiprintf_r+0x78>
 80079aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80079ac:	07dc      	lsls	r4, r3, #31
 80079ae:	d50e      	bpl.n	80079ce <_vfiprintf_r+0x6a>
 80079b0:	f04f 30ff 	mov.w	r0, #4294967295
 80079b4:	b01d      	add	sp, #116	; 0x74
 80079b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079ba:	4b7b      	ldr	r3, [pc, #492]	; (8007ba8 <_vfiprintf_r+0x244>)
 80079bc:	429d      	cmp	r5, r3
 80079be:	d101      	bne.n	80079c4 <_vfiprintf_r+0x60>
 80079c0:	68b5      	ldr	r5, [r6, #8]
 80079c2:	e7df      	b.n	8007984 <_vfiprintf_r+0x20>
 80079c4:	4b79      	ldr	r3, [pc, #484]	; (8007bac <_vfiprintf_r+0x248>)
 80079c6:	429d      	cmp	r5, r3
 80079c8:	bf08      	it	eq
 80079ca:	68f5      	ldreq	r5, [r6, #12]
 80079cc:	e7da      	b.n	8007984 <_vfiprintf_r+0x20>
 80079ce:	89ab      	ldrh	r3, [r5, #12]
 80079d0:	0598      	lsls	r0, r3, #22
 80079d2:	d4ed      	bmi.n	80079b0 <_vfiprintf_r+0x4c>
 80079d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80079d6:	f000 fd1a 	bl	800840e <__retarget_lock_release_recursive>
 80079da:	e7e9      	b.n	80079b0 <_vfiprintf_r+0x4c>
 80079dc:	2300      	movs	r3, #0
 80079de:	9309      	str	r3, [sp, #36]	; 0x24
 80079e0:	2320      	movs	r3, #32
 80079e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80079e6:	f8cd 800c 	str.w	r8, [sp, #12]
 80079ea:	2330      	movs	r3, #48	; 0x30
 80079ec:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8007bb0 <_vfiprintf_r+0x24c>
 80079f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80079f4:	f04f 0901 	mov.w	r9, #1
 80079f8:	4623      	mov	r3, r4
 80079fa:	469a      	mov	sl, r3
 80079fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007a00:	b10a      	cbz	r2, 8007a06 <_vfiprintf_r+0xa2>
 8007a02:	2a25      	cmp	r2, #37	; 0x25
 8007a04:	d1f9      	bne.n	80079fa <_vfiprintf_r+0x96>
 8007a06:	ebba 0b04 	subs.w	fp, sl, r4
 8007a0a:	d00b      	beq.n	8007a24 <_vfiprintf_r+0xc0>
 8007a0c:	465b      	mov	r3, fp
 8007a0e:	4622      	mov	r2, r4
 8007a10:	4629      	mov	r1, r5
 8007a12:	4630      	mov	r0, r6
 8007a14:	f7ff ff93 	bl	800793e <__sfputs_r>
 8007a18:	3001      	adds	r0, #1
 8007a1a:	f000 80aa 	beq.w	8007b72 <_vfiprintf_r+0x20e>
 8007a1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007a20:	445a      	add	r2, fp
 8007a22:	9209      	str	r2, [sp, #36]	; 0x24
 8007a24:	f89a 3000 	ldrb.w	r3, [sl]
 8007a28:	2b00      	cmp	r3, #0
 8007a2a:	f000 80a2 	beq.w	8007b72 <_vfiprintf_r+0x20e>
 8007a2e:	2300      	movs	r3, #0
 8007a30:	f04f 32ff 	mov.w	r2, #4294967295
 8007a34:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007a38:	f10a 0a01 	add.w	sl, sl, #1
 8007a3c:	9304      	str	r3, [sp, #16]
 8007a3e:	9307      	str	r3, [sp, #28]
 8007a40:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007a44:	931a      	str	r3, [sp, #104]	; 0x68
 8007a46:	4654      	mov	r4, sl
 8007a48:	2205      	movs	r2, #5
 8007a4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a4e:	4858      	ldr	r0, [pc, #352]	; (8007bb0 <_vfiprintf_r+0x24c>)
 8007a50:	f7f8 fbbe 	bl	80001d0 <memchr>
 8007a54:	9a04      	ldr	r2, [sp, #16]
 8007a56:	b9d8      	cbnz	r0, 8007a90 <_vfiprintf_r+0x12c>
 8007a58:	06d1      	lsls	r1, r2, #27
 8007a5a:	bf44      	itt	mi
 8007a5c:	2320      	movmi	r3, #32
 8007a5e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a62:	0713      	lsls	r3, r2, #28
 8007a64:	bf44      	itt	mi
 8007a66:	232b      	movmi	r3, #43	; 0x2b
 8007a68:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a6c:	f89a 3000 	ldrb.w	r3, [sl]
 8007a70:	2b2a      	cmp	r3, #42	; 0x2a
 8007a72:	d015      	beq.n	8007aa0 <_vfiprintf_r+0x13c>
 8007a74:	9a07      	ldr	r2, [sp, #28]
 8007a76:	4654      	mov	r4, sl
 8007a78:	2000      	movs	r0, #0
 8007a7a:	f04f 0c0a 	mov.w	ip, #10
 8007a7e:	4621      	mov	r1, r4
 8007a80:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007a84:	3b30      	subs	r3, #48	; 0x30
 8007a86:	2b09      	cmp	r3, #9
 8007a88:	d94e      	bls.n	8007b28 <_vfiprintf_r+0x1c4>
 8007a8a:	b1b0      	cbz	r0, 8007aba <_vfiprintf_r+0x156>
 8007a8c:	9207      	str	r2, [sp, #28]
 8007a8e:	e014      	b.n	8007aba <_vfiprintf_r+0x156>
 8007a90:	eba0 0308 	sub.w	r3, r0, r8
 8007a94:	fa09 f303 	lsl.w	r3, r9, r3
 8007a98:	4313      	orrs	r3, r2
 8007a9a:	9304      	str	r3, [sp, #16]
 8007a9c:	46a2      	mov	sl, r4
 8007a9e:	e7d2      	b.n	8007a46 <_vfiprintf_r+0xe2>
 8007aa0:	9b03      	ldr	r3, [sp, #12]
 8007aa2:	1d19      	adds	r1, r3, #4
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	9103      	str	r1, [sp, #12]
 8007aa8:	2b00      	cmp	r3, #0
 8007aaa:	bfbb      	ittet	lt
 8007aac:	425b      	neglt	r3, r3
 8007aae:	f042 0202 	orrlt.w	r2, r2, #2
 8007ab2:	9307      	strge	r3, [sp, #28]
 8007ab4:	9307      	strlt	r3, [sp, #28]
 8007ab6:	bfb8      	it	lt
 8007ab8:	9204      	strlt	r2, [sp, #16]
 8007aba:	7823      	ldrb	r3, [r4, #0]
 8007abc:	2b2e      	cmp	r3, #46	; 0x2e
 8007abe:	d10c      	bne.n	8007ada <_vfiprintf_r+0x176>
 8007ac0:	7863      	ldrb	r3, [r4, #1]
 8007ac2:	2b2a      	cmp	r3, #42	; 0x2a
 8007ac4:	d135      	bne.n	8007b32 <_vfiprintf_r+0x1ce>
 8007ac6:	9b03      	ldr	r3, [sp, #12]
 8007ac8:	1d1a      	adds	r2, r3, #4
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	9203      	str	r2, [sp, #12]
 8007ace:	2b00      	cmp	r3, #0
 8007ad0:	bfb8      	it	lt
 8007ad2:	f04f 33ff 	movlt.w	r3, #4294967295
 8007ad6:	3402      	adds	r4, #2
 8007ad8:	9305      	str	r3, [sp, #20]
 8007ada:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8007bc0 <_vfiprintf_r+0x25c>
 8007ade:	7821      	ldrb	r1, [r4, #0]
 8007ae0:	2203      	movs	r2, #3
 8007ae2:	4650      	mov	r0, sl
 8007ae4:	f7f8 fb74 	bl	80001d0 <memchr>
 8007ae8:	b140      	cbz	r0, 8007afc <_vfiprintf_r+0x198>
 8007aea:	2340      	movs	r3, #64	; 0x40
 8007aec:	eba0 000a 	sub.w	r0, r0, sl
 8007af0:	fa03 f000 	lsl.w	r0, r3, r0
 8007af4:	9b04      	ldr	r3, [sp, #16]
 8007af6:	4303      	orrs	r3, r0
 8007af8:	3401      	adds	r4, #1
 8007afa:	9304      	str	r3, [sp, #16]
 8007afc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007b00:	482c      	ldr	r0, [pc, #176]	; (8007bb4 <_vfiprintf_r+0x250>)
 8007b02:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007b06:	2206      	movs	r2, #6
 8007b08:	f7f8 fb62 	bl	80001d0 <memchr>
 8007b0c:	2800      	cmp	r0, #0
 8007b0e:	d03f      	beq.n	8007b90 <_vfiprintf_r+0x22c>
 8007b10:	4b29      	ldr	r3, [pc, #164]	; (8007bb8 <_vfiprintf_r+0x254>)
 8007b12:	bb1b      	cbnz	r3, 8007b5c <_vfiprintf_r+0x1f8>
 8007b14:	9b03      	ldr	r3, [sp, #12]
 8007b16:	3307      	adds	r3, #7
 8007b18:	f023 0307 	bic.w	r3, r3, #7
 8007b1c:	3308      	adds	r3, #8
 8007b1e:	9303      	str	r3, [sp, #12]
 8007b20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b22:	443b      	add	r3, r7
 8007b24:	9309      	str	r3, [sp, #36]	; 0x24
 8007b26:	e767      	b.n	80079f8 <_vfiprintf_r+0x94>
 8007b28:	fb0c 3202 	mla	r2, ip, r2, r3
 8007b2c:	460c      	mov	r4, r1
 8007b2e:	2001      	movs	r0, #1
 8007b30:	e7a5      	b.n	8007a7e <_vfiprintf_r+0x11a>
 8007b32:	2300      	movs	r3, #0
 8007b34:	3401      	adds	r4, #1
 8007b36:	9305      	str	r3, [sp, #20]
 8007b38:	4619      	mov	r1, r3
 8007b3a:	f04f 0c0a 	mov.w	ip, #10
 8007b3e:	4620      	mov	r0, r4
 8007b40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007b44:	3a30      	subs	r2, #48	; 0x30
 8007b46:	2a09      	cmp	r2, #9
 8007b48:	d903      	bls.n	8007b52 <_vfiprintf_r+0x1ee>
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d0c5      	beq.n	8007ada <_vfiprintf_r+0x176>
 8007b4e:	9105      	str	r1, [sp, #20]
 8007b50:	e7c3      	b.n	8007ada <_vfiprintf_r+0x176>
 8007b52:	fb0c 2101 	mla	r1, ip, r1, r2
 8007b56:	4604      	mov	r4, r0
 8007b58:	2301      	movs	r3, #1
 8007b5a:	e7f0      	b.n	8007b3e <_vfiprintf_r+0x1da>
 8007b5c:	ab03      	add	r3, sp, #12
 8007b5e:	9300      	str	r3, [sp, #0]
 8007b60:	462a      	mov	r2, r5
 8007b62:	4b16      	ldr	r3, [pc, #88]	; (8007bbc <_vfiprintf_r+0x258>)
 8007b64:	a904      	add	r1, sp, #16
 8007b66:	4630      	mov	r0, r6
 8007b68:	f3af 8000 	nop.w
 8007b6c:	4607      	mov	r7, r0
 8007b6e:	1c78      	adds	r0, r7, #1
 8007b70:	d1d6      	bne.n	8007b20 <_vfiprintf_r+0x1bc>
 8007b72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007b74:	07d9      	lsls	r1, r3, #31
 8007b76:	d405      	bmi.n	8007b84 <_vfiprintf_r+0x220>
 8007b78:	89ab      	ldrh	r3, [r5, #12]
 8007b7a:	059a      	lsls	r2, r3, #22
 8007b7c:	d402      	bmi.n	8007b84 <_vfiprintf_r+0x220>
 8007b7e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007b80:	f000 fc45 	bl	800840e <__retarget_lock_release_recursive>
 8007b84:	89ab      	ldrh	r3, [r5, #12]
 8007b86:	065b      	lsls	r3, r3, #25
 8007b88:	f53f af12 	bmi.w	80079b0 <_vfiprintf_r+0x4c>
 8007b8c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007b8e:	e711      	b.n	80079b4 <_vfiprintf_r+0x50>
 8007b90:	ab03      	add	r3, sp, #12
 8007b92:	9300      	str	r3, [sp, #0]
 8007b94:	462a      	mov	r2, r5
 8007b96:	4b09      	ldr	r3, [pc, #36]	; (8007bbc <_vfiprintf_r+0x258>)
 8007b98:	a904      	add	r1, sp, #16
 8007b9a:	4630      	mov	r0, r6
 8007b9c:	f000 f880 	bl	8007ca0 <_printf_i>
 8007ba0:	e7e4      	b.n	8007b6c <_vfiprintf_r+0x208>
 8007ba2:	bf00      	nop
 8007ba4:	0800b7e4 	.word	0x0800b7e4
 8007ba8:	0800b804 	.word	0x0800b804
 8007bac:	0800b7c4 	.word	0x0800b7c4
 8007bb0:	0800b78e 	.word	0x0800b78e
 8007bb4:	0800b798 	.word	0x0800b798
 8007bb8:	00000000 	.word	0x00000000
 8007bbc:	0800793f 	.word	0x0800793f
 8007bc0:	0800b794 	.word	0x0800b794

08007bc4 <_printf_common>:
 8007bc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007bc8:	4616      	mov	r6, r2
 8007bca:	4699      	mov	r9, r3
 8007bcc:	688a      	ldr	r2, [r1, #8]
 8007bce:	690b      	ldr	r3, [r1, #16]
 8007bd0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007bd4:	4293      	cmp	r3, r2
 8007bd6:	bfb8      	it	lt
 8007bd8:	4613      	movlt	r3, r2
 8007bda:	6033      	str	r3, [r6, #0]
 8007bdc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007be0:	4607      	mov	r7, r0
 8007be2:	460c      	mov	r4, r1
 8007be4:	b10a      	cbz	r2, 8007bea <_printf_common+0x26>
 8007be6:	3301      	adds	r3, #1
 8007be8:	6033      	str	r3, [r6, #0]
 8007bea:	6823      	ldr	r3, [r4, #0]
 8007bec:	0699      	lsls	r1, r3, #26
 8007bee:	bf42      	ittt	mi
 8007bf0:	6833      	ldrmi	r3, [r6, #0]
 8007bf2:	3302      	addmi	r3, #2
 8007bf4:	6033      	strmi	r3, [r6, #0]
 8007bf6:	6825      	ldr	r5, [r4, #0]
 8007bf8:	f015 0506 	ands.w	r5, r5, #6
 8007bfc:	d106      	bne.n	8007c0c <_printf_common+0x48>
 8007bfe:	f104 0a19 	add.w	sl, r4, #25
 8007c02:	68e3      	ldr	r3, [r4, #12]
 8007c04:	6832      	ldr	r2, [r6, #0]
 8007c06:	1a9b      	subs	r3, r3, r2
 8007c08:	42ab      	cmp	r3, r5
 8007c0a:	dc26      	bgt.n	8007c5a <_printf_common+0x96>
 8007c0c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007c10:	1e13      	subs	r3, r2, #0
 8007c12:	6822      	ldr	r2, [r4, #0]
 8007c14:	bf18      	it	ne
 8007c16:	2301      	movne	r3, #1
 8007c18:	0692      	lsls	r2, r2, #26
 8007c1a:	d42b      	bmi.n	8007c74 <_printf_common+0xb0>
 8007c1c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007c20:	4649      	mov	r1, r9
 8007c22:	4638      	mov	r0, r7
 8007c24:	47c0      	blx	r8
 8007c26:	3001      	adds	r0, #1
 8007c28:	d01e      	beq.n	8007c68 <_printf_common+0xa4>
 8007c2a:	6823      	ldr	r3, [r4, #0]
 8007c2c:	68e5      	ldr	r5, [r4, #12]
 8007c2e:	6832      	ldr	r2, [r6, #0]
 8007c30:	f003 0306 	and.w	r3, r3, #6
 8007c34:	2b04      	cmp	r3, #4
 8007c36:	bf08      	it	eq
 8007c38:	1aad      	subeq	r5, r5, r2
 8007c3a:	68a3      	ldr	r3, [r4, #8]
 8007c3c:	6922      	ldr	r2, [r4, #16]
 8007c3e:	bf0c      	ite	eq
 8007c40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007c44:	2500      	movne	r5, #0
 8007c46:	4293      	cmp	r3, r2
 8007c48:	bfc4      	itt	gt
 8007c4a:	1a9b      	subgt	r3, r3, r2
 8007c4c:	18ed      	addgt	r5, r5, r3
 8007c4e:	2600      	movs	r6, #0
 8007c50:	341a      	adds	r4, #26
 8007c52:	42b5      	cmp	r5, r6
 8007c54:	d11a      	bne.n	8007c8c <_printf_common+0xc8>
 8007c56:	2000      	movs	r0, #0
 8007c58:	e008      	b.n	8007c6c <_printf_common+0xa8>
 8007c5a:	2301      	movs	r3, #1
 8007c5c:	4652      	mov	r2, sl
 8007c5e:	4649      	mov	r1, r9
 8007c60:	4638      	mov	r0, r7
 8007c62:	47c0      	blx	r8
 8007c64:	3001      	adds	r0, #1
 8007c66:	d103      	bne.n	8007c70 <_printf_common+0xac>
 8007c68:	f04f 30ff 	mov.w	r0, #4294967295
 8007c6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c70:	3501      	adds	r5, #1
 8007c72:	e7c6      	b.n	8007c02 <_printf_common+0x3e>
 8007c74:	18e1      	adds	r1, r4, r3
 8007c76:	1c5a      	adds	r2, r3, #1
 8007c78:	2030      	movs	r0, #48	; 0x30
 8007c7a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007c7e:	4422      	add	r2, r4
 8007c80:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007c84:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007c88:	3302      	adds	r3, #2
 8007c8a:	e7c7      	b.n	8007c1c <_printf_common+0x58>
 8007c8c:	2301      	movs	r3, #1
 8007c8e:	4622      	mov	r2, r4
 8007c90:	4649      	mov	r1, r9
 8007c92:	4638      	mov	r0, r7
 8007c94:	47c0      	blx	r8
 8007c96:	3001      	adds	r0, #1
 8007c98:	d0e6      	beq.n	8007c68 <_printf_common+0xa4>
 8007c9a:	3601      	adds	r6, #1
 8007c9c:	e7d9      	b.n	8007c52 <_printf_common+0x8e>
	...

08007ca0 <_printf_i>:
 8007ca0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007ca4:	460c      	mov	r4, r1
 8007ca6:	4691      	mov	r9, r2
 8007ca8:	7e27      	ldrb	r7, [r4, #24]
 8007caa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007cac:	2f78      	cmp	r7, #120	; 0x78
 8007cae:	4680      	mov	r8, r0
 8007cb0:	469a      	mov	sl, r3
 8007cb2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007cb6:	d807      	bhi.n	8007cc8 <_printf_i+0x28>
 8007cb8:	2f62      	cmp	r7, #98	; 0x62
 8007cba:	d80a      	bhi.n	8007cd2 <_printf_i+0x32>
 8007cbc:	2f00      	cmp	r7, #0
 8007cbe:	f000 80d8 	beq.w	8007e72 <_printf_i+0x1d2>
 8007cc2:	2f58      	cmp	r7, #88	; 0x58
 8007cc4:	f000 80a3 	beq.w	8007e0e <_printf_i+0x16e>
 8007cc8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8007ccc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007cd0:	e03a      	b.n	8007d48 <_printf_i+0xa8>
 8007cd2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007cd6:	2b15      	cmp	r3, #21
 8007cd8:	d8f6      	bhi.n	8007cc8 <_printf_i+0x28>
 8007cda:	a001      	add	r0, pc, #4	; (adr r0, 8007ce0 <_printf_i+0x40>)
 8007cdc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8007ce0:	08007d39 	.word	0x08007d39
 8007ce4:	08007d4d 	.word	0x08007d4d
 8007ce8:	08007cc9 	.word	0x08007cc9
 8007cec:	08007cc9 	.word	0x08007cc9
 8007cf0:	08007cc9 	.word	0x08007cc9
 8007cf4:	08007cc9 	.word	0x08007cc9
 8007cf8:	08007d4d 	.word	0x08007d4d
 8007cfc:	08007cc9 	.word	0x08007cc9
 8007d00:	08007cc9 	.word	0x08007cc9
 8007d04:	08007cc9 	.word	0x08007cc9
 8007d08:	08007cc9 	.word	0x08007cc9
 8007d0c:	08007e59 	.word	0x08007e59
 8007d10:	08007d7d 	.word	0x08007d7d
 8007d14:	08007e3b 	.word	0x08007e3b
 8007d18:	08007cc9 	.word	0x08007cc9
 8007d1c:	08007cc9 	.word	0x08007cc9
 8007d20:	08007e7b 	.word	0x08007e7b
 8007d24:	08007cc9 	.word	0x08007cc9
 8007d28:	08007d7d 	.word	0x08007d7d
 8007d2c:	08007cc9 	.word	0x08007cc9
 8007d30:	08007cc9 	.word	0x08007cc9
 8007d34:	08007e43 	.word	0x08007e43
 8007d38:	680b      	ldr	r3, [r1, #0]
 8007d3a:	1d1a      	adds	r2, r3, #4
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	600a      	str	r2, [r1, #0]
 8007d40:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8007d44:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007d48:	2301      	movs	r3, #1
 8007d4a:	e0a3      	b.n	8007e94 <_printf_i+0x1f4>
 8007d4c:	6825      	ldr	r5, [r4, #0]
 8007d4e:	6808      	ldr	r0, [r1, #0]
 8007d50:	062e      	lsls	r6, r5, #24
 8007d52:	f100 0304 	add.w	r3, r0, #4
 8007d56:	d50a      	bpl.n	8007d6e <_printf_i+0xce>
 8007d58:	6805      	ldr	r5, [r0, #0]
 8007d5a:	600b      	str	r3, [r1, #0]
 8007d5c:	2d00      	cmp	r5, #0
 8007d5e:	da03      	bge.n	8007d68 <_printf_i+0xc8>
 8007d60:	232d      	movs	r3, #45	; 0x2d
 8007d62:	426d      	negs	r5, r5
 8007d64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007d68:	485e      	ldr	r0, [pc, #376]	; (8007ee4 <_printf_i+0x244>)
 8007d6a:	230a      	movs	r3, #10
 8007d6c:	e019      	b.n	8007da2 <_printf_i+0x102>
 8007d6e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8007d72:	6805      	ldr	r5, [r0, #0]
 8007d74:	600b      	str	r3, [r1, #0]
 8007d76:	bf18      	it	ne
 8007d78:	b22d      	sxthne	r5, r5
 8007d7a:	e7ef      	b.n	8007d5c <_printf_i+0xbc>
 8007d7c:	680b      	ldr	r3, [r1, #0]
 8007d7e:	6825      	ldr	r5, [r4, #0]
 8007d80:	1d18      	adds	r0, r3, #4
 8007d82:	6008      	str	r0, [r1, #0]
 8007d84:	0628      	lsls	r0, r5, #24
 8007d86:	d501      	bpl.n	8007d8c <_printf_i+0xec>
 8007d88:	681d      	ldr	r5, [r3, #0]
 8007d8a:	e002      	b.n	8007d92 <_printf_i+0xf2>
 8007d8c:	0669      	lsls	r1, r5, #25
 8007d8e:	d5fb      	bpl.n	8007d88 <_printf_i+0xe8>
 8007d90:	881d      	ldrh	r5, [r3, #0]
 8007d92:	4854      	ldr	r0, [pc, #336]	; (8007ee4 <_printf_i+0x244>)
 8007d94:	2f6f      	cmp	r7, #111	; 0x6f
 8007d96:	bf0c      	ite	eq
 8007d98:	2308      	moveq	r3, #8
 8007d9a:	230a      	movne	r3, #10
 8007d9c:	2100      	movs	r1, #0
 8007d9e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007da2:	6866      	ldr	r6, [r4, #4]
 8007da4:	60a6      	str	r6, [r4, #8]
 8007da6:	2e00      	cmp	r6, #0
 8007da8:	bfa2      	ittt	ge
 8007daa:	6821      	ldrge	r1, [r4, #0]
 8007dac:	f021 0104 	bicge.w	r1, r1, #4
 8007db0:	6021      	strge	r1, [r4, #0]
 8007db2:	b90d      	cbnz	r5, 8007db8 <_printf_i+0x118>
 8007db4:	2e00      	cmp	r6, #0
 8007db6:	d04d      	beq.n	8007e54 <_printf_i+0x1b4>
 8007db8:	4616      	mov	r6, r2
 8007dba:	fbb5 f1f3 	udiv	r1, r5, r3
 8007dbe:	fb03 5711 	mls	r7, r3, r1, r5
 8007dc2:	5dc7      	ldrb	r7, [r0, r7]
 8007dc4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007dc8:	462f      	mov	r7, r5
 8007dca:	42bb      	cmp	r3, r7
 8007dcc:	460d      	mov	r5, r1
 8007dce:	d9f4      	bls.n	8007dba <_printf_i+0x11a>
 8007dd0:	2b08      	cmp	r3, #8
 8007dd2:	d10b      	bne.n	8007dec <_printf_i+0x14c>
 8007dd4:	6823      	ldr	r3, [r4, #0]
 8007dd6:	07df      	lsls	r7, r3, #31
 8007dd8:	d508      	bpl.n	8007dec <_printf_i+0x14c>
 8007dda:	6923      	ldr	r3, [r4, #16]
 8007ddc:	6861      	ldr	r1, [r4, #4]
 8007dde:	4299      	cmp	r1, r3
 8007de0:	bfde      	ittt	le
 8007de2:	2330      	movle	r3, #48	; 0x30
 8007de4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007de8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007dec:	1b92      	subs	r2, r2, r6
 8007dee:	6122      	str	r2, [r4, #16]
 8007df0:	f8cd a000 	str.w	sl, [sp]
 8007df4:	464b      	mov	r3, r9
 8007df6:	aa03      	add	r2, sp, #12
 8007df8:	4621      	mov	r1, r4
 8007dfa:	4640      	mov	r0, r8
 8007dfc:	f7ff fee2 	bl	8007bc4 <_printf_common>
 8007e00:	3001      	adds	r0, #1
 8007e02:	d14c      	bne.n	8007e9e <_printf_i+0x1fe>
 8007e04:	f04f 30ff 	mov.w	r0, #4294967295
 8007e08:	b004      	add	sp, #16
 8007e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007e0e:	4835      	ldr	r0, [pc, #212]	; (8007ee4 <_printf_i+0x244>)
 8007e10:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8007e14:	6823      	ldr	r3, [r4, #0]
 8007e16:	680e      	ldr	r6, [r1, #0]
 8007e18:	061f      	lsls	r7, r3, #24
 8007e1a:	f856 5b04 	ldr.w	r5, [r6], #4
 8007e1e:	600e      	str	r6, [r1, #0]
 8007e20:	d514      	bpl.n	8007e4c <_printf_i+0x1ac>
 8007e22:	07d9      	lsls	r1, r3, #31
 8007e24:	bf44      	itt	mi
 8007e26:	f043 0320 	orrmi.w	r3, r3, #32
 8007e2a:	6023      	strmi	r3, [r4, #0]
 8007e2c:	b91d      	cbnz	r5, 8007e36 <_printf_i+0x196>
 8007e2e:	6823      	ldr	r3, [r4, #0]
 8007e30:	f023 0320 	bic.w	r3, r3, #32
 8007e34:	6023      	str	r3, [r4, #0]
 8007e36:	2310      	movs	r3, #16
 8007e38:	e7b0      	b.n	8007d9c <_printf_i+0xfc>
 8007e3a:	6823      	ldr	r3, [r4, #0]
 8007e3c:	f043 0320 	orr.w	r3, r3, #32
 8007e40:	6023      	str	r3, [r4, #0]
 8007e42:	2378      	movs	r3, #120	; 0x78
 8007e44:	4828      	ldr	r0, [pc, #160]	; (8007ee8 <_printf_i+0x248>)
 8007e46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007e4a:	e7e3      	b.n	8007e14 <_printf_i+0x174>
 8007e4c:	065e      	lsls	r6, r3, #25
 8007e4e:	bf48      	it	mi
 8007e50:	b2ad      	uxthmi	r5, r5
 8007e52:	e7e6      	b.n	8007e22 <_printf_i+0x182>
 8007e54:	4616      	mov	r6, r2
 8007e56:	e7bb      	b.n	8007dd0 <_printf_i+0x130>
 8007e58:	680b      	ldr	r3, [r1, #0]
 8007e5a:	6826      	ldr	r6, [r4, #0]
 8007e5c:	6960      	ldr	r0, [r4, #20]
 8007e5e:	1d1d      	adds	r5, r3, #4
 8007e60:	600d      	str	r5, [r1, #0]
 8007e62:	0635      	lsls	r5, r6, #24
 8007e64:	681b      	ldr	r3, [r3, #0]
 8007e66:	d501      	bpl.n	8007e6c <_printf_i+0x1cc>
 8007e68:	6018      	str	r0, [r3, #0]
 8007e6a:	e002      	b.n	8007e72 <_printf_i+0x1d2>
 8007e6c:	0671      	lsls	r1, r6, #25
 8007e6e:	d5fb      	bpl.n	8007e68 <_printf_i+0x1c8>
 8007e70:	8018      	strh	r0, [r3, #0]
 8007e72:	2300      	movs	r3, #0
 8007e74:	6123      	str	r3, [r4, #16]
 8007e76:	4616      	mov	r6, r2
 8007e78:	e7ba      	b.n	8007df0 <_printf_i+0x150>
 8007e7a:	680b      	ldr	r3, [r1, #0]
 8007e7c:	1d1a      	adds	r2, r3, #4
 8007e7e:	600a      	str	r2, [r1, #0]
 8007e80:	681e      	ldr	r6, [r3, #0]
 8007e82:	6862      	ldr	r2, [r4, #4]
 8007e84:	2100      	movs	r1, #0
 8007e86:	4630      	mov	r0, r6
 8007e88:	f7f8 f9a2 	bl	80001d0 <memchr>
 8007e8c:	b108      	cbz	r0, 8007e92 <_printf_i+0x1f2>
 8007e8e:	1b80      	subs	r0, r0, r6
 8007e90:	6060      	str	r0, [r4, #4]
 8007e92:	6863      	ldr	r3, [r4, #4]
 8007e94:	6123      	str	r3, [r4, #16]
 8007e96:	2300      	movs	r3, #0
 8007e98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007e9c:	e7a8      	b.n	8007df0 <_printf_i+0x150>
 8007e9e:	6923      	ldr	r3, [r4, #16]
 8007ea0:	4632      	mov	r2, r6
 8007ea2:	4649      	mov	r1, r9
 8007ea4:	4640      	mov	r0, r8
 8007ea6:	47d0      	blx	sl
 8007ea8:	3001      	adds	r0, #1
 8007eaa:	d0ab      	beq.n	8007e04 <_printf_i+0x164>
 8007eac:	6823      	ldr	r3, [r4, #0]
 8007eae:	079b      	lsls	r3, r3, #30
 8007eb0:	d413      	bmi.n	8007eda <_printf_i+0x23a>
 8007eb2:	68e0      	ldr	r0, [r4, #12]
 8007eb4:	9b03      	ldr	r3, [sp, #12]
 8007eb6:	4298      	cmp	r0, r3
 8007eb8:	bfb8      	it	lt
 8007eba:	4618      	movlt	r0, r3
 8007ebc:	e7a4      	b.n	8007e08 <_printf_i+0x168>
 8007ebe:	2301      	movs	r3, #1
 8007ec0:	4632      	mov	r2, r6
 8007ec2:	4649      	mov	r1, r9
 8007ec4:	4640      	mov	r0, r8
 8007ec6:	47d0      	blx	sl
 8007ec8:	3001      	adds	r0, #1
 8007eca:	d09b      	beq.n	8007e04 <_printf_i+0x164>
 8007ecc:	3501      	adds	r5, #1
 8007ece:	68e3      	ldr	r3, [r4, #12]
 8007ed0:	9903      	ldr	r1, [sp, #12]
 8007ed2:	1a5b      	subs	r3, r3, r1
 8007ed4:	42ab      	cmp	r3, r5
 8007ed6:	dcf2      	bgt.n	8007ebe <_printf_i+0x21e>
 8007ed8:	e7eb      	b.n	8007eb2 <_printf_i+0x212>
 8007eda:	2500      	movs	r5, #0
 8007edc:	f104 0619 	add.w	r6, r4, #25
 8007ee0:	e7f5      	b.n	8007ece <_printf_i+0x22e>
 8007ee2:	bf00      	nop
 8007ee4:	0800b79f 	.word	0x0800b79f
 8007ee8:	0800b7b0 	.word	0x0800b7b0

08007eec <_sbrk_r>:
 8007eec:	b538      	push	{r3, r4, r5, lr}
 8007eee:	4d06      	ldr	r5, [pc, #24]	; (8007f08 <_sbrk_r+0x1c>)
 8007ef0:	2300      	movs	r3, #0
 8007ef2:	4604      	mov	r4, r0
 8007ef4:	4608      	mov	r0, r1
 8007ef6:	602b      	str	r3, [r5, #0]
 8007ef8:	f7fa fb76 	bl	80025e8 <_sbrk>
 8007efc:	1c43      	adds	r3, r0, #1
 8007efe:	d102      	bne.n	8007f06 <_sbrk_r+0x1a>
 8007f00:	682b      	ldr	r3, [r5, #0]
 8007f02:	b103      	cbz	r3, 8007f06 <_sbrk_r+0x1a>
 8007f04:	6023      	str	r3, [r4, #0]
 8007f06:	bd38      	pop	{r3, r4, r5, pc}
 8007f08:	20000448 	.word	0x20000448

08007f0c <__swbuf_r>:
 8007f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f0e:	460e      	mov	r6, r1
 8007f10:	4614      	mov	r4, r2
 8007f12:	4605      	mov	r5, r0
 8007f14:	b118      	cbz	r0, 8007f1e <__swbuf_r+0x12>
 8007f16:	6983      	ldr	r3, [r0, #24]
 8007f18:	b90b      	cbnz	r3, 8007f1e <__swbuf_r+0x12>
 8007f1a:	f000 f9d9 	bl	80082d0 <__sinit>
 8007f1e:	4b21      	ldr	r3, [pc, #132]	; (8007fa4 <__swbuf_r+0x98>)
 8007f20:	429c      	cmp	r4, r3
 8007f22:	d12b      	bne.n	8007f7c <__swbuf_r+0x70>
 8007f24:	686c      	ldr	r4, [r5, #4]
 8007f26:	69a3      	ldr	r3, [r4, #24]
 8007f28:	60a3      	str	r3, [r4, #8]
 8007f2a:	89a3      	ldrh	r3, [r4, #12]
 8007f2c:	071a      	lsls	r2, r3, #28
 8007f2e:	d52f      	bpl.n	8007f90 <__swbuf_r+0x84>
 8007f30:	6923      	ldr	r3, [r4, #16]
 8007f32:	b36b      	cbz	r3, 8007f90 <__swbuf_r+0x84>
 8007f34:	6923      	ldr	r3, [r4, #16]
 8007f36:	6820      	ldr	r0, [r4, #0]
 8007f38:	1ac0      	subs	r0, r0, r3
 8007f3a:	6963      	ldr	r3, [r4, #20]
 8007f3c:	b2f6      	uxtb	r6, r6
 8007f3e:	4283      	cmp	r3, r0
 8007f40:	4637      	mov	r7, r6
 8007f42:	dc04      	bgt.n	8007f4e <__swbuf_r+0x42>
 8007f44:	4621      	mov	r1, r4
 8007f46:	4628      	mov	r0, r5
 8007f48:	f000 f92e 	bl	80081a8 <_fflush_r>
 8007f4c:	bb30      	cbnz	r0, 8007f9c <__swbuf_r+0x90>
 8007f4e:	68a3      	ldr	r3, [r4, #8]
 8007f50:	3b01      	subs	r3, #1
 8007f52:	60a3      	str	r3, [r4, #8]
 8007f54:	6823      	ldr	r3, [r4, #0]
 8007f56:	1c5a      	adds	r2, r3, #1
 8007f58:	6022      	str	r2, [r4, #0]
 8007f5a:	701e      	strb	r6, [r3, #0]
 8007f5c:	6963      	ldr	r3, [r4, #20]
 8007f5e:	3001      	adds	r0, #1
 8007f60:	4283      	cmp	r3, r0
 8007f62:	d004      	beq.n	8007f6e <__swbuf_r+0x62>
 8007f64:	89a3      	ldrh	r3, [r4, #12]
 8007f66:	07db      	lsls	r3, r3, #31
 8007f68:	d506      	bpl.n	8007f78 <__swbuf_r+0x6c>
 8007f6a:	2e0a      	cmp	r6, #10
 8007f6c:	d104      	bne.n	8007f78 <__swbuf_r+0x6c>
 8007f6e:	4621      	mov	r1, r4
 8007f70:	4628      	mov	r0, r5
 8007f72:	f000 f919 	bl	80081a8 <_fflush_r>
 8007f76:	b988      	cbnz	r0, 8007f9c <__swbuf_r+0x90>
 8007f78:	4638      	mov	r0, r7
 8007f7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f7c:	4b0a      	ldr	r3, [pc, #40]	; (8007fa8 <__swbuf_r+0x9c>)
 8007f7e:	429c      	cmp	r4, r3
 8007f80:	d101      	bne.n	8007f86 <__swbuf_r+0x7a>
 8007f82:	68ac      	ldr	r4, [r5, #8]
 8007f84:	e7cf      	b.n	8007f26 <__swbuf_r+0x1a>
 8007f86:	4b09      	ldr	r3, [pc, #36]	; (8007fac <__swbuf_r+0xa0>)
 8007f88:	429c      	cmp	r4, r3
 8007f8a:	bf08      	it	eq
 8007f8c:	68ec      	ldreq	r4, [r5, #12]
 8007f8e:	e7ca      	b.n	8007f26 <__swbuf_r+0x1a>
 8007f90:	4621      	mov	r1, r4
 8007f92:	4628      	mov	r0, r5
 8007f94:	f000 f80c 	bl	8007fb0 <__swsetup_r>
 8007f98:	2800      	cmp	r0, #0
 8007f9a:	d0cb      	beq.n	8007f34 <__swbuf_r+0x28>
 8007f9c:	f04f 37ff 	mov.w	r7, #4294967295
 8007fa0:	e7ea      	b.n	8007f78 <__swbuf_r+0x6c>
 8007fa2:	bf00      	nop
 8007fa4:	0800b7e4 	.word	0x0800b7e4
 8007fa8:	0800b804 	.word	0x0800b804
 8007fac:	0800b7c4 	.word	0x0800b7c4

08007fb0 <__swsetup_r>:
 8007fb0:	4b32      	ldr	r3, [pc, #200]	; (800807c <__swsetup_r+0xcc>)
 8007fb2:	b570      	push	{r4, r5, r6, lr}
 8007fb4:	681d      	ldr	r5, [r3, #0]
 8007fb6:	4606      	mov	r6, r0
 8007fb8:	460c      	mov	r4, r1
 8007fba:	b125      	cbz	r5, 8007fc6 <__swsetup_r+0x16>
 8007fbc:	69ab      	ldr	r3, [r5, #24]
 8007fbe:	b913      	cbnz	r3, 8007fc6 <__swsetup_r+0x16>
 8007fc0:	4628      	mov	r0, r5
 8007fc2:	f000 f985 	bl	80082d0 <__sinit>
 8007fc6:	4b2e      	ldr	r3, [pc, #184]	; (8008080 <__swsetup_r+0xd0>)
 8007fc8:	429c      	cmp	r4, r3
 8007fca:	d10f      	bne.n	8007fec <__swsetup_r+0x3c>
 8007fcc:	686c      	ldr	r4, [r5, #4]
 8007fce:	89a3      	ldrh	r3, [r4, #12]
 8007fd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007fd4:	0719      	lsls	r1, r3, #28
 8007fd6:	d42c      	bmi.n	8008032 <__swsetup_r+0x82>
 8007fd8:	06dd      	lsls	r5, r3, #27
 8007fda:	d411      	bmi.n	8008000 <__swsetup_r+0x50>
 8007fdc:	2309      	movs	r3, #9
 8007fde:	6033      	str	r3, [r6, #0]
 8007fe0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007fe4:	81a3      	strh	r3, [r4, #12]
 8007fe6:	f04f 30ff 	mov.w	r0, #4294967295
 8007fea:	e03e      	b.n	800806a <__swsetup_r+0xba>
 8007fec:	4b25      	ldr	r3, [pc, #148]	; (8008084 <__swsetup_r+0xd4>)
 8007fee:	429c      	cmp	r4, r3
 8007ff0:	d101      	bne.n	8007ff6 <__swsetup_r+0x46>
 8007ff2:	68ac      	ldr	r4, [r5, #8]
 8007ff4:	e7eb      	b.n	8007fce <__swsetup_r+0x1e>
 8007ff6:	4b24      	ldr	r3, [pc, #144]	; (8008088 <__swsetup_r+0xd8>)
 8007ff8:	429c      	cmp	r4, r3
 8007ffa:	bf08      	it	eq
 8007ffc:	68ec      	ldreq	r4, [r5, #12]
 8007ffe:	e7e6      	b.n	8007fce <__swsetup_r+0x1e>
 8008000:	0758      	lsls	r0, r3, #29
 8008002:	d512      	bpl.n	800802a <__swsetup_r+0x7a>
 8008004:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008006:	b141      	cbz	r1, 800801a <__swsetup_r+0x6a>
 8008008:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800800c:	4299      	cmp	r1, r3
 800800e:	d002      	beq.n	8008016 <__swsetup_r+0x66>
 8008010:	4630      	mov	r0, r6
 8008012:	f7ff fbd3 	bl	80077bc <_free_r>
 8008016:	2300      	movs	r3, #0
 8008018:	6363      	str	r3, [r4, #52]	; 0x34
 800801a:	89a3      	ldrh	r3, [r4, #12]
 800801c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8008020:	81a3      	strh	r3, [r4, #12]
 8008022:	2300      	movs	r3, #0
 8008024:	6063      	str	r3, [r4, #4]
 8008026:	6923      	ldr	r3, [r4, #16]
 8008028:	6023      	str	r3, [r4, #0]
 800802a:	89a3      	ldrh	r3, [r4, #12]
 800802c:	f043 0308 	orr.w	r3, r3, #8
 8008030:	81a3      	strh	r3, [r4, #12]
 8008032:	6923      	ldr	r3, [r4, #16]
 8008034:	b94b      	cbnz	r3, 800804a <__swsetup_r+0x9a>
 8008036:	89a3      	ldrh	r3, [r4, #12]
 8008038:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800803c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008040:	d003      	beq.n	800804a <__swsetup_r+0x9a>
 8008042:	4621      	mov	r1, r4
 8008044:	4630      	mov	r0, r6
 8008046:	f000 fa07 	bl	8008458 <__smakebuf_r>
 800804a:	89a0      	ldrh	r0, [r4, #12]
 800804c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8008050:	f010 0301 	ands.w	r3, r0, #1
 8008054:	d00a      	beq.n	800806c <__swsetup_r+0xbc>
 8008056:	2300      	movs	r3, #0
 8008058:	60a3      	str	r3, [r4, #8]
 800805a:	6963      	ldr	r3, [r4, #20]
 800805c:	425b      	negs	r3, r3
 800805e:	61a3      	str	r3, [r4, #24]
 8008060:	6923      	ldr	r3, [r4, #16]
 8008062:	b943      	cbnz	r3, 8008076 <__swsetup_r+0xc6>
 8008064:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8008068:	d1ba      	bne.n	8007fe0 <__swsetup_r+0x30>
 800806a:	bd70      	pop	{r4, r5, r6, pc}
 800806c:	0781      	lsls	r1, r0, #30
 800806e:	bf58      	it	pl
 8008070:	6963      	ldrpl	r3, [r4, #20]
 8008072:	60a3      	str	r3, [r4, #8]
 8008074:	e7f4      	b.n	8008060 <__swsetup_r+0xb0>
 8008076:	2000      	movs	r0, #0
 8008078:	e7f7      	b.n	800806a <__swsetup_r+0xba>
 800807a:	bf00      	nop
 800807c:	2000002c 	.word	0x2000002c
 8008080:	0800b7e4 	.word	0x0800b7e4
 8008084:	0800b804 	.word	0x0800b804
 8008088:	0800b7c4 	.word	0x0800b7c4

0800808c <abort>:
 800808c:	b508      	push	{r3, lr}
 800808e:	2006      	movs	r0, #6
 8008090:	f000 fa56 	bl	8008540 <raise>
 8008094:	2001      	movs	r0, #1
 8008096:	f7fa fa2f 	bl	80024f8 <_exit>
	...

0800809c <__sflush_r>:
 800809c:	898a      	ldrh	r2, [r1, #12]
 800809e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080a2:	4605      	mov	r5, r0
 80080a4:	0710      	lsls	r0, r2, #28
 80080a6:	460c      	mov	r4, r1
 80080a8:	d458      	bmi.n	800815c <__sflush_r+0xc0>
 80080aa:	684b      	ldr	r3, [r1, #4]
 80080ac:	2b00      	cmp	r3, #0
 80080ae:	dc05      	bgt.n	80080bc <__sflush_r+0x20>
 80080b0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	dc02      	bgt.n	80080bc <__sflush_r+0x20>
 80080b6:	2000      	movs	r0, #0
 80080b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80080bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80080be:	2e00      	cmp	r6, #0
 80080c0:	d0f9      	beq.n	80080b6 <__sflush_r+0x1a>
 80080c2:	2300      	movs	r3, #0
 80080c4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80080c8:	682f      	ldr	r7, [r5, #0]
 80080ca:	602b      	str	r3, [r5, #0]
 80080cc:	d032      	beq.n	8008134 <__sflush_r+0x98>
 80080ce:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80080d0:	89a3      	ldrh	r3, [r4, #12]
 80080d2:	075a      	lsls	r2, r3, #29
 80080d4:	d505      	bpl.n	80080e2 <__sflush_r+0x46>
 80080d6:	6863      	ldr	r3, [r4, #4]
 80080d8:	1ac0      	subs	r0, r0, r3
 80080da:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80080dc:	b10b      	cbz	r3, 80080e2 <__sflush_r+0x46>
 80080de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80080e0:	1ac0      	subs	r0, r0, r3
 80080e2:	2300      	movs	r3, #0
 80080e4:	4602      	mov	r2, r0
 80080e6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80080e8:	6a21      	ldr	r1, [r4, #32]
 80080ea:	4628      	mov	r0, r5
 80080ec:	47b0      	blx	r6
 80080ee:	1c43      	adds	r3, r0, #1
 80080f0:	89a3      	ldrh	r3, [r4, #12]
 80080f2:	d106      	bne.n	8008102 <__sflush_r+0x66>
 80080f4:	6829      	ldr	r1, [r5, #0]
 80080f6:	291d      	cmp	r1, #29
 80080f8:	d82c      	bhi.n	8008154 <__sflush_r+0xb8>
 80080fa:	4a2a      	ldr	r2, [pc, #168]	; (80081a4 <__sflush_r+0x108>)
 80080fc:	40ca      	lsrs	r2, r1
 80080fe:	07d6      	lsls	r6, r2, #31
 8008100:	d528      	bpl.n	8008154 <__sflush_r+0xb8>
 8008102:	2200      	movs	r2, #0
 8008104:	6062      	str	r2, [r4, #4]
 8008106:	04d9      	lsls	r1, r3, #19
 8008108:	6922      	ldr	r2, [r4, #16]
 800810a:	6022      	str	r2, [r4, #0]
 800810c:	d504      	bpl.n	8008118 <__sflush_r+0x7c>
 800810e:	1c42      	adds	r2, r0, #1
 8008110:	d101      	bne.n	8008116 <__sflush_r+0x7a>
 8008112:	682b      	ldr	r3, [r5, #0]
 8008114:	b903      	cbnz	r3, 8008118 <__sflush_r+0x7c>
 8008116:	6560      	str	r0, [r4, #84]	; 0x54
 8008118:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800811a:	602f      	str	r7, [r5, #0]
 800811c:	2900      	cmp	r1, #0
 800811e:	d0ca      	beq.n	80080b6 <__sflush_r+0x1a>
 8008120:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8008124:	4299      	cmp	r1, r3
 8008126:	d002      	beq.n	800812e <__sflush_r+0x92>
 8008128:	4628      	mov	r0, r5
 800812a:	f7ff fb47 	bl	80077bc <_free_r>
 800812e:	2000      	movs	r0, #0
 8008130:	6360      	str	r0, [r4, #52]	; 0x34
 8008132:	e7c1      	b.n	80080b8 <__sflush_r+0x1c>
 8008134:	6a21      	ldr	r1, [r4, #32]
 8008136:	2301      	movs	r3, #1
 8008138:	4628      	mov	r0, r5
 800813a:	47b0      	blx	r6
 800813c:	1c41      	adds	r1, r0, #1
 800813e:	d1c7      	bne.n	80080d0 <__sflush_r+0x34>
 8008140:	682b      	ldr	r3, [r5, #0]
 8008142:	2b00      	cmp	r3, #0
 8008144:	d0c4      	beq.n	80080d0 <__sflush_r+0x34>
 8008146:	2b1d      	cmp	r3, #29
 8008148:	d001      	beq.n	800814e <__sflush_r+0xb2>
 800814a:	2b16      	cmp	r3, #22
 800814c:	d101      	bne.n	8008152 <__sflush_r+0xb6>
 800814e:	602f      	str	r7, [r5, #0]
 8008150:	e7b1      	b.n	80080b6 <__sflush_r+0x1a>
 8008152:	89a3      	ldrh	r3, [r4, #12]
 8008154:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008158:	81a3      	strh	r3, [r4, #12]
 800815a:	e7ad      	b.n	80080b8 <__sflush_r+0x1c>
 800815c:	690f      	ldr	r7, [r1, #16]
 800815e:	2f00      	cmp	r7, #0
 8008160:	d0a9      	beq.n	80080b6 <__sflush_r+0x1a>
 8008162:	0793      	lsls	r3, r2, #30
 8008164:	680e      	ldr	r6, [r1, #0]
 8008166:	bf08      	it	eq
 8008168:	694b      	ldreq	r3, [r1, #20]
 800816a:	600f      	str	r7, [r1, #0]
 800816c:	bf18      	it	ne
 800816e:	2300      	movne	r3, #0
 8008170:	eba6 0807 	sub.w	r8, r6, r7
 8008174:	608b      	str	r3, [r1, #8]
 8008176:	f1b8 0f00 	cmp.w	r8, #0
 800817a:	dd9c      	ble.n	80080b6 <__sflush_r+0x1a>
 800817c:	6a21      	ldr	r1, [r4, #32]
 800817e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008180:	4643      	mov	r3, r8
 8008182:	463a      	mov	r2, r7
 8008184:	4628      	mov	r0, r5
 8008186:	47b0      	blx	r6
 8008188:	2800      	cmp	r0, #0
 800818a:	dc06      	bgt.n	800819a <__sflush_r+0xfe>
 800818c:	89a3      	ldrh	r3, [r4, #12]
 800818e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008192:	81a3      	strh	r3, [r4, #12]
 8008194:	f04f 30ff 	mov.w	r0, #4294967295
 8008198:	e78e      	b.n	80080b8 <__sflush_r+0x1c>
 800819a:	4407      	add	r7, r0
 800819c:	eba8 0800 	sub.w	r8, r8, r0
 80081a0:	e7e9      	b.n	8008176 <__sflush_r+0xda>
 80081a2:	bf00      	nop
 80081a4:	20400001 	.word	0x20400001

080081a8 <_fflush_r>:
 80081a8:	b538      	push	{r3, r4, r5, lr}
 80081aa:	690b      	ldr	r3, [r1, #16]
 80081ac:	4605      	mov	r5, r0
 80081ae:	460c      	mov	r4, r1
 80081b0:	b913      	cbnz	r3, 80081b8 <_fflush_r+0x10>
 80081b2:	2500      	movs	r5, #0
 80081b4:	4628      	mov	r0, r5
 80081b6:	bd38      	pop	{r3, r4, r5, pc}
 80081b8:	b118      	cbz	r0, 80081c2 <_fflush_r+0x1a>
 80081ba:	6983      	ldr	r3, [r0, #24]
 80081bc:	b90b      	cbnz	r3, 80081c2 <_fflush_r+0x1a>
 80081be:	f000 f887 	bl	80082d0 <__sinit>
 80081c2:	4b14      	ldr	r3, [pc, #80]	; (8008214 <_fflush_r+0x6c>)
 80081c4:	429c      	cmp	r4, r3
 80081c6:	d11b      	bne.n	8008200 <_fflush_r+0x58>
 80081c8:	686c      	ldr	r4, [r5, #4]
 80081ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80081ce:	2b00      	cmp	r3, #0
 80081d0:	d0ef      	beq.n	80081b2 <_fflush_r+0xa>
 80081d2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80081d4:	07d0      	lsls	r0, r2, #31
 80081d6:	d404      	bmi.n	80081e2 <_fflush_r+0x3a>
 80081d8:	0599      	lsls	r1, r3, #22
 80081da:	d402      	bmi.n	80081e2 <_fflush_r+0x3a>
 80081dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80081de:	f000 f915 	bl	800840c <__retarget_lock_acquire_recursive>
 80081e2:	4628      	mov	r0, r5
 80081e4:	4621      	mov	r1, r4
 80081e6:	f7ff ff59 	bl	800809c <__sflush_r>
 80081ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80081ec:	07da      	lsls	r2, r3, #31
 80081ee:	4605      	mov	r5, r0
 80081f0:	d4e0      	bmi.n	80081b4 <_fflush_r+0xc>
 80081f2:	89a3      	ldrh	r3, [r4, #12]
 80081f4:	059b      	lsls	r3, r3, #22
 80081f6:	d4dd      	bmi.n	80081b4 <_fflush_r+0xc>
 80081f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80081fa:	f000 f908 	bl	800840e <__retarget_lock_release_recursive>
 80081fe:	e7d9      	b.n	80081b4 <_fflush_r+0xc>
 8008200:	4b05      	ldr	r3, [pc, #20]	; (8008218 <_fflush_r+0x70>)
 8008202:	429c      	cmp	r4, r3
 8008204:	d101      	bne.n	800820a <_fflush_r+0x62>
 8008206:	68ac      	ldr	r4, [r5, #8]
 8008208:	e7df      	b.n	80081ca <_fflush_r+0x22>
 800820a:	4b04      	ldr	r3, [pc, #16]	; (800821c <_fflush_r+0x74>)
 800820c:	429c      	cmp	r4, r3
 800820e:	bf08      	it	eq
 8008210:	68ec      	ldreq	r4, [r5, #12]
 8008212:	e7da      	b.n	80081ca <_fflush_r+0x22>
 8008214:	0800b7e4 	.word	0x0800b7e4
 8008218:	0800b804 	.word	0x0800b804
 800821c:	0800b7c4 	.word	0x0800b7c4

08008220 <std>:
 8008220:	2300      	movs	r3, #0
 8008222:	b510      	push	{r4, lr}
 8008224:	4604      	mov	r4, r0
 8008226:	e9c0 3300 	strd	r3, r3, [r0]
 800822a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800822e:	6083      	str	r3, [r0, #8]
 8008230:	8181      	strh	r1, [r0, #12]
 8008232:	6643      	str	r3, [r0, #100]	; 0x64
 8008234:	81c2      	strh	r2, [r0, #14]
 8008236:	6183      	str	r3, [r0, #24]
 8008238:	4619      	mov	r1, r3
 800823a:	2208      	movs	r2, #8
 800823c:	305c      	adds	r0, #92	; 0x5c
 800823e:	f7ff fa3d 	bl	80076bc <memset>
 8008242:	4b05      	ldr	r3, [pc, #20]	; (8008258 <std+0x38>)
 8008244:	6263      	str	r3, [r4, #36]	; 0x24
 8008246:	4b05      	ldr	r3, [pc, #20]	; (800825c <std+0x3c>)
 8008248:	62a3      	str	r3, [r4, #40]	; 0x28
 800824a:	4b05      	ldr	r3, [pc, #20]	; (8008260 <std+0x40>)
 800824c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800824e:	4b05      	ldr	r3, [pc, #20]	; (8008264 <std+0x44>)
 8008250:	6224      	str	r4, [r4, #32]
 8008252:	6323      	str	r3, [r4, #48]	; 0x30
 8008254:	bd10      	pop	{r4, pc}
 8008256:	bf00      	nop
 8008258:	08008579 	.word	0x08008579
 800825c:	0800859b 	.word	0x0800859b
 8008260:	080085d3 	.word	0x080085d3
 8008264:	080085f7 	.word	0x080085f7

08008268 <_cleanup_r>:
 8008268:	4901      	ldr	r1, [pc, #4]	; (8008270 <_cleanup_r+0x8>)
 800826a:	f000 b8af 	b.w	80083cc <_fwalk_reent>
 800826e:	bf00      	nop
 8008270:	080081a9 	.word	0x080081a9

08008274 <__sfmoreglue>:
 8008274:	b570      	push	{r4, r5, r6, lr}
 8008276:	1e4a      	subs	r2, r1, #1
 8008278:	2568      	movs	r5, #104	; 0x68
 800827a:	4355      	muls	r5, r2
 800827c:	460e      	mov	r6, r1
 800827e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8008282:	f7ff faeb 	bl	800785c <_malloc_r>
 8008286:	4604      	mov	r4, r0
 8008288:	b140      	cbz	r0, 800829c <__sfmoreglue+0x28>
 800828a:	2100      	movs	r1, #0
 800828c:	e9c0 1600 	strd	r1, r6, [r0]
 8008290:	300c      	adds	r0, #12
 8008292:	60a0      	str	r0, [r4, #8]
 8008294:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8008298:	f7ff fa10 	bl	80076bc <memset>
 800829c:	4620      	mov	r0, r4
 800829e:	bd70      	pop	{r4, r5, r6, pc}

080082a0 <__sfp_lock_acquire>:
 80082a0:	4801      	ldr	r0, [pc, #4]	; (80082a8 <__sfp_lock_acquire+0x8>)
 80082a2:	f000 b8b3 	b.w	800840c <__retarget_lock_acquire_recursive>
 80082a6:	bf00      	nop
 80082a8:	20000444 	.word	0x20000444

080082ac <__sfp_lock_release>:
 80082ac:	4801      	ldr	r0, [pc, #4]	; (80082b4 <__sfp_lock_release+0x8>)
 80082ae:	f000 b8ae 	b.w	800840e <__retarget_lock_release_recursive>
 80082b2:	bf00      	nop
 80082b4:	20000444 	.word	0x20000444

080082b8 <__sinit_lock_acquire>:
 80082b8:	4801      	ldr	r0, [pc, #4]	; (80082c0 <__sinit_lock_acquire+0x8>)
 80082ba:	f000 b8a7 	b.w	800840c <__retarget_lock_acquire_recursive>
 80082be:	bf00      	nop
 80082c0:	2000043f 	.word	0x2000043f

080082c4 <__sinit_lock_release>:
 80082c4:	4801      	ldr	r0, [pc, #4]	; (80082cc <__sinit_lock_release+0x8>)
 80082c6:	f000 b8a2 	b.w	800840e <__retarget_lock_release_recursive>
 80082ca:	bf00      	nop
 80082cc:	2000043f 	.word	0x2000043f

080082d0 <__sinit>:
 80082d0:	b510      	push	{r4, lr}
 80082d2:	4604      	mov	r4, r0
 80082d4:	f7ff fff0 	bl	80082b8 <__sinit_lock_acquire>
 80082d8:	69a3      	ldr	r3, [r4, #24]
 80082da:	b11b      	cbz	r3, 80082e4 <__sinit+0x14>
 80082dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80082e0:	f7ff bff0 	b.w	80082c4 <__sinit_lock_release>
 80082e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80082e8:	6523      	str	r3, [r4, #80]	; 0x50
 80082ea:	4b13      	ldr	r3, [pc, #76]	; (8008338 <__sinit+0x68>)
 80082ec:	4a13      	ldr	r2, [pc, #76]	; (800833c <__sinit+0x6c>)
 80082ee:	681b      	ldr	r3, [r3, #0]
 80082f0:	62a2      	str	r2, [r4, #40]	; 0x28
 80082f2:	42a3      	cmp	r3, r4
 80082f4:	bf04      	itt	eq
 80082f6:	2301      	moveq	r3, #1
 80082f8:	61a3      	streq	r3, [r4, #24]
 80082fa:	4620      	mov	r0, r4
 80082fc:	f000 f820 	bl	8008340 <__sfp>
 8008300:	6060      	str	r0, [r4, #4]
 8008302:	4620      	mov	r0, r4
 8008304:	f000 f81c 	bl	8008340 <__sfp>
 8008308:	60a0      	str	r0, [r4, #8]
 800830a:	4620      	mov	r0, r4
 800830c:	f000 f818 	bl	8008340 <__sfp>
 8008310:	2200      	movs	r2, #0
 8008312:	60e0      	str	r0, [r4, #12]
 8008314:	2104      	movs	r1, #4
 8008316:	6860      	ldr	r0, [r4, #4]
 8008318:	f7ff ff82 	bl	8008220 <std>
 800831c:	68a0      	ldr	r0, [r4, #8]
 800831e:	2201      	movs	r2, #1
 8008320:	2109      	movs	r1, #9
 8008322:	f7ff ff7d 	bl	8008220 <std>
 8008326:	68e0      	ldr	r0, [r4, #12]
 8008328:	2202      	movs	r2, #2
 800832a:	2112      	movs	r1, #18
 800832c:	f7ff ff78 	bl	8008220 <std>
 8008330:	2301      	movs	r3, #1
 8008332:	61a3      	str	r3, [r4, #24]
 8008334:	e7d2      	b.n	80082dc <__sinit+0xc>
 8008336:	bf00      	nop
 8008338:	0800b6d8 	.word	0x0800b6d8
 800833c:	08008269 	.word	0x08008269

08008340 <__sfp>:
 8008340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008342:	4607      	mov	r7, r0
 8008344:	f7ff ffac 	bl	80082a0 <__sfp_lock_acquire>
 8008348:	4b1e      	ldr	r3, [pc, #120]	; (80083c4 <__sfp+0x84>)
 800834a:	681e      	ldr	r6, [r3, #0]
 800834c:	69b3      	ldr	r3, [r6, #24]
 800834e:	b913      	cbnz	r3, 8008356 <__sfp+0x16>
 8008350:	4630      	mov	r0, r6
 8008352:	f7ff ffbd 	bl	80082d0 <__sinit>
 8008356:	3648      	adds	r6, #72	; 0x48
 8008358:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800835c:	3b01      	subs	r3, #1
 800835e:	d503      	bpl.n	8008368 <__sfp+0x28>
 8008360:	6833      	ldr	r3, [r6, #0]
 8008362:	b30b      	cbz	r3, 80083a8 <__sfp+0x68>
 8008364:	6836      	ldr	r6, [r6, #0]
 8008366:	e7f7      	b.n	8008358 <__sfp+0x18>
 8008368:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800836c:	b9d5      	cbnz	r5, 80083a4 <__sfp+0x64>
 800836e:	4b16      	ldr	r3, [pc, #88]	; (80083c8 <__sfp+0x88>)
 8008370:	60e3      	str	r3, [r4, #12]
 8008372:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008376:	6665      	str	r5, [r4, #100]	; 0x64
 8008378:	f000 f847 	bl	800840a <__retarget_lock_init_recursive>
 800837c:	f7ff ff96 	bl	80082ac <__sfp_lock_release>
 8008380:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8008384:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8008388:	6025      	str	r5, [r4, #0]
 800838a:	61a5      	str	r5, [r4, #24]
 800838c:	2208      	movs	r2, #8
 800838e:	4629      	mov	r1, r5
 8008390:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008394:	f7ff f992 	bl	80076bc <memset>
 8008398:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800839c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80083a0:	4620      	mov	r0, r4
 80083a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80083a4:	3468      	adds	r4, #104	; 0x68
 80083a6:	e7d9      	b.n	800835c <__sfp+0x1c>
 80083a8:	2104      	movs	r1, #4
 80083aa:	4638      	mov	r0, r7
 80083ac:	f7ff ff62 	bl	8008274 <__sfmoreglue>
 80083b0:	4604      	mov	r4, r0
 80083b2:	6030      	str	r0, [r6, #0]
 80083b4:	2800      	cmp	r0, #0
 80083b6:	d1d5      	bne.n	8008364 <__sfp+0x24>
 80083b8:	f7ff ff78 	bl	80082ac <__sfp_lock_release>
 80083bc:	230c      	movs	r3, #12
 80083be:	603b      	str	r3, [r7, #0]
 80083c0:	e7ee      	b.n	80083a0 <__sfp+0x60>
 80083c2:	bf00      	nop
 80083c4:	0800b6d8 	.word	0x0800b6d8
 80083c8:	ffff0001 	.word	0xffff0001

080083cc <_fwalk_reent>:
 80083cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80083d0:	4606      	mov	r6, r0
 80083d2:	4688      	mov	r8, r1
 80083d4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80083d8:	2700      	movs	r7, #0
 80083da:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80083de:	f1b9 0901 	subs.w	r9, r9, #1
 80083e2:	d505      	bpl.n	80083f0 <_fwalk_reent+0x24>
 80083e4:	6824      	ldr	r4, [r4, #0]
 80083e6:	2c00      	cmp	r4, #0
 80083e8:	d1f7      	bne.n	80083da <_fwalk_reent+0xe>
 80083ea:	4638      	mov	r0, r7
 80083ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80083f0:	89ab      	ldrh	r3, [r5, #12]
 80083f2:	2b01      	cmp	r3, #1
 80083f4:	d907      	bls.n	8008406 <_fwalk_reent+0x3a>
 80083f6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80083fa:	3301      	adds	r3, #1
 80083fc:	d003      	beq.n	8008406 <_fwalk_reent+0x3a>
 80083fe:	4629      	mov	r1, r5
 8008400:	4630      	mov	r0, r6
 8008402:	47c0      	blx	r8
 8008404:	4307      	orrs	r7, r0
 8008406:	3568      	adds	r5, #104	; 0x68
 8008408:	e7e9      	b.n	80083de <_fwalk_reent+0x12>

0800840a <__retarget_lock_init_recursive>:
 800840a:	4770      	bx	lr

0800840c <__retarget_lock_acquire_recursive>:
 800840c:	4770      	bx	lr

0800840e <__retarget_lock_release_recursive>:
 800840e:	4770      	bx	lr

08008410 <__swhatbuf_r>:
 8008410:	b570      	push	{r4, r5, r6, lr}
 8008412:	460e      	mov	r6, r1
 8008414:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008418:	2900      	cmp	r1, #0
 800841a:	b096      	sub	sp, #88	; 0x58
 800841c:	4614      	mov	r4, r2
 800841e:	461d      	mov	r5, r3
 8008420:	da07      	bge.n	8008432 <__swhatbuf_r+0x22>
 8008422:	2300      	movs	r3, #0
 8008424:	602b      	str	r3, [r5, #0]
 8008426:	89b3      	ldrh	r3, [r6, #12]
 8008428:	061a      	lsls	r2, r3, #24
 800842a:	d410      	bmi.n	800844e <__swhatbuf_r+0x3e>
 800842c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008430:	e00e      	b.n	8008450 <__swhatbuf_r+0x40>
 8008432:	466a      	mov	r2, sp
 8008434:	f000 f906 	bl	8008644 <_fstat_r>
 8008438:	2800      	cmp	r0, #0
 800843a:	dbf2      	blt.n	8008422 <__swhatbuf_r+0x12>
 800843c:	9a01      	ldr	r2, [sp, #4]
 800843e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8008442:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8008446:	425a      	negs	r2, r3
 8008448:	415a      	adcs	r2, r3
 800844a:	602a      	str	r2, [r5, #0]
 800844c:	e7ee      	b.n	800842c <__swhatbuf_r+0x1c>
 800844e:	2340      	movs	r3, #64	; 0x40
 8008450:	2000      	movs	r0, #0
 8008452:	6023      	str	r3, [r4, #0]
 8008454:	b016      	add	sp, #88	; 0x58
 8008456:	bd70      	pop	{r4, r5, r6, pc}

08008458 <__smakebuf_r>:
 8008458:	898b      	ldrh	r3, [r1, #12]
 800845a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800845c:	079d      	lsls	r5, r3, #30
 800845e:	4606      	mov	r6, r0
 8008460:	460c      	mov	r4, r1
 8008462:	d507      	bpl.n	8008474 <__smakebuf_r+0x1c>
 8008464:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8008468:	6023      	str	r3, [r4, #0]
 800846a:	6123      	str	r3, [r4, #16]
 800846c:	2301      	movs	r3, #1
 800846e:	6163      	str	r3, [r4, #20]
 8008470:	b002      	add	sp, #8
 8008472:	bd70      	pop	{r4, r5, r6, pc}
 8008474:	ab01      	add	r3, sp, #4
 8008476:	466a      	mov	r2, sp
 8008478:	f7ff ffca 	bl	8008410 <__swhatbuf_r>
 800847c:	9900      	ldr	r1, [sp, #0]
 800847e:	4605      	mov	r5, r0
 8008480:	4630      	mov	r0, r6
 8008482:	f7ff f9eb 	bl	800785c <_malloc_r>
 8008486:	b948      	cbnz	r0, 800849c <__smakebuf_r+0x44>
 8008488:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800848c:	059a      	lsls	r2, r3, #22
 800848e:	d4ef      	bmi.n	8008470 <__smakebuf_r+0x18>
 8008490:	f023 0303 	bic.w	r3, r3, #3
 8008494:	f043 0302 	orr.w	r3, r3, #2
 8008498:	81a3      	strh	r3, [r4, #12]
 800849a:	e7e3      	b.n	8008464 <__smakebuf_r+0xc>
 800849c:	4b0d      	ldr	r3, [pc, #52]	; (80084d4 <__smakebuf_r+0x7c>)
 800849e:	62b3      	str	r3, [r6, #40]	; 0x28
 80084a0:	89a3      	ldrh	r3, [r4, #12]
 80084a2:	6020      	str	r0, [r4, #0]
 80084a4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80084a8:	81a3      	strh	r3, [r4, #12]
 80084aa:	9b00      	ldr	r3, [sp, #0]
 80084ac:	6163      	str	r3, [r4, #20]
 80084ae:	9b01      	ldr	r3, [sp, #4]
 80084b0:	6120      	str	r0, [r4, #16]
 80084b2:	b15b      	cbz	r3, 80084cc <__smakebuf_r+0x74>
 80084b4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80084b8:	4630      	mov	r0, r6
 80084ba:	f000 f8d5 	bl	8008668 <_isatty_r>
 80084be:	b128      	cbz	r0, 80084cc <__smakebuf_r+0x74>
 80084c0:	89a3      	ldrh	r3, [r4, #12]
 80084c2:	f023 0303 	bic.w	r3, r3, #3
 80084c6:	f043 0301 	orr.w	r3, r3, #1
 80084ca:	81a3      	strh	r3, [r4, #12]
 80084cc:	89a0      	ldrh	r0, [r4, #12]
 80084ce:	4305      	orrs	r5, r0
 80084d0:	81a5      	strh	r5, [r4, #12]
 80084d2:	e7cd      	b.n	8008470 <__smakebuf_r+0x18>
 80084d4:	08008269 	.word	0x08008269

080084d8 <__malloc_lock>:
 80084d8:	4801      	ldr	r0, [pc, #4]	; (80084e0 <__malloc_lock+0x8>)
 80084da:	f7ff bf97 	b.w	800840c <__retarget_lock_acquire_recursive>
 80084de:	bf00      	nop
 80084e0:	20000440 	.word	0x20000440

080084e4 <__malloc_unlock>:
 80084e4:	4801      	ldr	r0, [pc, #4]	; (80084ec <__malloc_unlock+0x8>)
 80084e6:	f7ff bf92 	b.w	800840e <__retarget_lock_release_recursive>
 80084ea:	bf00      	nop
 80084ec:	20000440 	.word	0x20000440

080084f0 <_raise_r>:
 80084f0:	291f      	cmp	r1, #31
 80084f2:	b538      	push	{r3, r4, r5, lr}
 80084f4:	4604      	mov	r4, r0
 80084f6:	460d      	mov	r5, r1
 80084f8:	d904      	bls.n	8008504 <_raise_r+0x14>
 80084fa:	2316      	movs	r3, #22
 80084fc:	6003      	str	r3, [r0, #0]
 80084fe:	f04f 30ff 	mov.w	r0, #4294967295
 8008502:	bd38      	pop	{r3, r4, r5, pc}
 8008504:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8008506:	b112      	cbz	r2, 800850e <_raise_r+0x1e>
 8008508:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800850c:	b94b      	cbnz	r3, 8008522 <_raise_r+0x32>
 800850e:	4620      	mov	r0, r4
 8008510:	f000 f830 	bl	8008574 <_getpid_r>
 8008514:	462a      	mov	r2, r5
 8008516:	4601      	mov	r1, r0
 8008518:	4620      	mov	r0, r4
 800851a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800851e:	f000 b817 	b.w	8008550 <_kill_r>
 8008522:	2b01      	cmp	r3, #1
 8008524:	d00a      	beq.n	800853c <_raise_r+0x4c>
 8008526:	1c59      	adds	r1, r3, #1
 8008528:	d103      	bne.n	8008532 <_raise_r+0x42>
 800852a:	2316      	movs	r3, #22
 800852c:	6003      	str	r3, [r0, #0]
 800852e:	2001      	movs	r0, #1
 8008530:	e7e7      	b.n	8008502 <_raise_r+0x12>
 8008532:	2400      	movs	r4, #0
 8008534:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008538:	4628      	mov	r0, r5
 800853a:	4798      	blx	r3
 800853c:	2000      	movs	r0, #0
 800853e:	e7e0      	b.n	8008502 <_raise_r+0x12>

08008540 <raise>:
 8008540:	4b02      	ldr	r3, [pc, #8]	; (800854c <raise+0xc>)
 8008542:	4601      	mov	r1, r0
 8008544:	6818      	ldr	r0, [r3, #0]
 8008546:	f7ff bfd3 	b.w	80084f0 <_raise_r>
 800854a:	bf00      	nop
 800854c:	2000002c 	.word	0x2000002c

08008550 <_kill_r>:
 8008550:	b538      	push	{r3, r4, r5, lr}
 8008552:	4d07      	ldr	r5, [pc, #28]	; (8008570 <_kill_r+0x20>)
 8008554:	2300      	movs	r3, #0
 8008556:	4604      	mov	r4, r0
 8008558:	4608      	mov	r0, r1
 800855a:	4611      	mov	r1, r2
 800855c:	602b      	str	r3, [r5, #0]
 800855e:	f7f9 ffbb 	bl	80024d8 <_kill>
 8008562:	1c43      	adds	r3, r0, #1
 8008564:	d102      	bne.n	800856c <_kill_r+0x1c>
 8008566:	682b      	ldr	r3, [r5, #0]
 8008568:	b103      	cbz	r3, 800856c <_kill_r+0x1c>
 800856a:	6023      	str	r3, [r4, #0]
 800856c:	bd38      	pop	{r3, r4, r5, pc}
 800856e:	bf00      	nop
 8008570:	20000448 	.word	0x20000448

08008574 <_getpid_r>:
 8008574:	f7f9 bfa8 	b.w	80024c8 <_getpid>

08008578 <__sread>:
 8008578:	b510      	push	{r4, lr}
 800857a:	460c      	mov	r4, r1
 800857c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008580:	f000 f894 	bl	80086ac <_read_r>
 8008584:	2800      	cmp	r0, #0
 8008586:	bfab      	itete	ge
 8008588:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800858a:	89a3      	ldrhlt	r3, [r4, #12]
 800858c:	181b      	addge	r3, r3, r0
 800858e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8008592:	bfac      	ite	ge
 8008594:	6563      	strge	r3, [r4, #84]	; 0x54
 8008596:	81a3      	strhlt	r3, [r4, #12]
 8008598:	bd10      	pop	{r4, pc}

0800859a <__swrite>:
 800859a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800859e:	461f      	mov	r7, r3
 80085a0:	898b      	ldrh	r3, [r1, #12]
 80085a2:	05db      	lsls	r3, r3, #23
 80085a4:	4605      	mov	r5, r0
 80085a6:	460c      	mov	r4, r1
 80085a8:	4616      	mov	r6, r2
 80085aa:	d505      	bpl.n	80085b8 <__swrite+0x1e>
 80085ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085b0:	2302      	movs	r3, #2
 80085b2:	2200      	movs	r2, #0
 80085b4:	f000 f868 	bl	8008688 <_lseek_r>
 80085b8:	89a3      	ldrh	r3, [r4, #12]
 80085ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80085be:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80085c2:	81a3      	strh	r3, [r4, #12]
 80085c4:	4632      	mov	r2, r6
 80085c6:	463b      	mov	r3, r7
 80085c8:	4628      	mov	r0, r5
 80085ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80085ce:	f000 b817 	b.w	8008600 <_write_r>

080085d2 <__sseek>:
 80085d2:	b510      	push	{r4, lr}
 80085d4:	460c      	mov	r4, r1
 80085d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085da:	f000 f855 	bl	8008688 <_lseek_r>
 80085de:	1c43      	adds	r3, r0, #1
 80085e0:	89a3      	ldrh	r3, [r4, #12]
 80085e2:	bf15      	itete	ne
 80085e4:	6560      	strne	r0, [r4, #84]	; 0x54
 80085e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80085ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80085ee:	81a3      	strheq	r3, [r4, #12]
 80085f0:	bf18      	it	ne
 80085f2:	81a3      	strhne	r3, [r4, #12]
 80085f4:	bd10      	pop	{r4, pc}

080085f6 <__sclose>:
 80085f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085fa:	f000 b813 	b.w	8008624 <_close_r>
	...

08008600 <_write_r>:
 8008600:	b538      	push	{r3, r4, r5, lr}
 8008602:	4d07      	ldr	r5, [pc, #28]	; (8008620 <_write_r+0x20>)
 8008604:	4604      	mov	r4, r0
 8008606:	4608      	mov	r0, r1
 8008608:	4611      	mov	r1, r2
 800860a:	2200      	movs	r2, #0
 800860c:	602a      	str	r2, [r5, #0]
 800860e:	461a      	mov	r2, r3
 8008610:	f7f9 ff99 	bl	8002546 <_write>
 8008614:	1c43      	adds	r3, r0, #1
 8008616:	d102      	bne.n	800861e <_write_r+0x1e>
 8008618:	682b      	ldr	r3, [r5, #0]
 800861a:	b103      	cbz	r3, 800861e <_write_r+0x1e>
 800861c:	6023      	str	r3, [r4, #0]
 800861e:	bd38      	pop	{r3, r4, r5, pc}
 8008620:	20000448 	.word	0x20000448

08008624 <_close_r>:
 8008624:	b538      	push	{r3, r4, r5, lr}
 8008626:	4d06      	ldr	r5, [pc, #24]	; (8008640 <_close_r+0x1c>)
 8008628:	2300      	movs	r3, #0
 800862a:	4604      	mov	r4, r0
 800862c:	4608      	mov	r0, r1
 800862e:	602b      	str	r3, [r5, #0]
 8008630:	f7f9 ffa5 	bl	800257e <_close>
 8008634:	1c43      	adds	r3, r0, #1
 8008636:	d102      	bne.n	800863e <_close_r+0x1a>
 8008638:	682b      	ldr	r3, [r5, #0]
 800863a:	b103      	cbz	r3, 800863e <_close_r+0x1a>
 800863c:	6023      	str	r3, [r4, #0]
 800863e:	bd38      	pop	{r3, r4, r5, pc}
 8008640:	20000448 	.word	0x20000448

08008644 <_fstat_r>:
 8008644:	b538      	push	{r3, r4, r5, lr}
 8008646:	4d07      	ldr	r5, [pc, #28]	; (8008664 <_fstat_r+0x20>)
 8008648:	2300      	movs	r3, #0
 800864a:	4604      	mov	r4, r0
 800864c:	4608      	mov	r0, r1
 800864e:	4611      	mov	r1, r2
 8008650:	602b      	str	r3, [r5, #0]
 8008652:	f7f9 ffa0 	bl	8002596 <_fstat>
 8008656:	1c43      	adds	r3, r0, #1
 8008658:	d102      	bne.n	8008660 <_fstat_r+0x1c>
 800865a:	682b      	ldr	r3, [r5, #0]
 800865c:	b103      	cbz	r3, 8008660 <_fstat_r+0x1c>
 800865e:	6023      	str	r3, [r4, #0]
 8008660:	bd38      	pop	{r3, r4, r5, pc}
 8008662:	bf00      	nop
 8008664:	20000448 	.word	0x20000448

08008668 <_isatty_r>:
 8008668:	b538      	push	{r3, r4, r5, lr}
 800866a:	4d06      	ldr	r5, [pc, #24]	; (8008684 <_isatty_r+0x1c>)
 800866c:	2300      	movs	r3, #0
 800866e:	4604      	mov	r4, r0
 8008670:	4608      	mov	r0, r1
 8008672:	602b      	str	r3, [r5, #0]
 8008674:	f7f9 ff9f 	bl	80025b6 <_isatty>
 8008678:	1c43      	adds	r3, r0, #1
 800867a:	d102      	bne.n	8008682 <_isatty_r+0x1a>
 800867c:	682b      	ldr	r3, [r5, #0]
 800867e:	b103      	cbz	r3, 8008682 <_isatty_r+0x1a>
 8008680:	6023      	str	r3, [r4, #0]
 8008682:	bd38      	pop	{r3, r4, r5, pc}
 8008684:	20000448 	.word	0x20000448

08008688 <_lseek_r>:
 8008688:	b538      	push	{r3, r4, r5, lr}
 800868a:	4d07      	ldr	r5, [pc, #28]	; (80086a8 <_lseek_r+0x20>)
 800868c:	4604      	mov	r4, r0
 800868e:	4608      	mov	r0, r1
 8008690:	4611      	mov	r1, r2
 8008692:	2200      	movs	r2, #0
 8008694:	602a      	str	r2, [r5, #0]
 8008696:	461a      	mov	r2, r3
 8008698:	f7f9 ff98 	bl	80025cc <_lseek>
 800869c:	1c43      	adds	r3, r0, #1
 800869e:	d102      	bne.n	80086a6 <_lseek_r+0x1e>
 80086a0:	682b      	ldr	r3, [r5, #0]
 80086a2:	b103      	cbz	r3, 80086a6 <_lseek_r+0x1e>
 80086a4:	6023      	str	r3, [r4, #0]
 80086a6:	bd38      	pop	{r3, r4, r5, pc}
 80086a8:	20000448 	.word	0x20000448

080086ac <_read_r>:
 80086ac:	b538      	push	{r3, r4, r5, lr}
 80086ae:	4d07      	ldr	r5, [pc, #28]	; (80086cc <_read_r+0x20>)
 80086b0:	4604      	mov	r4, r0
 80086b2:	4608      	mov	r0, r1
 80086b4:	4611      	mov	r1, r2
 80086b6:	2200      	movs	r2, #0
 80086b8:	602a      	str	r2, [r5, #0]
 80086ba:	461a      	mov	r2, r3
 80086bc:	f7f9 ff26 	bl	800250c <_read>
 80086c0:	1c43      	adds	r3, r0, #1
 80086c2:	d102      	bne.n	80086ca <_read_r+0x1e>
 80086c4:	682b      	ldr	r3, [r5, #0]
 80086c6:	b103      	cbz	r3, 80086ca <_read_r+0x1e>
 80086c8:	6023      	str	r3, [r4, #0]
 80086ca:	bd38      	pop	{r3, r4, r5, pc}
 80086cc:	20000448 	.word	0x20000448

080086d0 <_init>:
 80086d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086d2:	bf00      	nop
 80086d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80086d6:	bc08      	pop	{r3}
 80086d8:	469e      	mov	lr, r3
 80086da:	4770      	bx	lr

080086dc <_fini>:
 80086dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086de:	bf00      	nop
 80086e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80086e2:	bc08      	pop	{r3}
 80086e4:	469e      	mov	lr, r3
 80086e6:	4770      	bx	lr
